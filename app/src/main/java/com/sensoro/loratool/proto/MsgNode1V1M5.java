package com.sensoro.loratool.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgNode_1v1_m8.proto

public final class MsgNode1V1M5 {
  private MsgNode1V1M5() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code Activtion}
   */
  public enum Activtion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ABP = 0;</code>
     */
    ABP(0, 0),
    /**
     * <code>OTA = 1;</code>
     */
    OTA(1, 1),
    ;

    /**
     * <code>ABP = 0;</code>
     */
    public static final int ABP_VALUE = 0;
    /**
     * <code>OTA = 1;</code>
     */
    public static final int OTA_VALUE = 1;


    public final int getNumber() { return value; }

    public static Activtion valueOf(int value) {
      switch (value) {
        case 0: return ABP;
        case 1: return OTA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Activtion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Activtion>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Activtion>() {
            public Activtion findValueByNumber(int number) {
              return Activtion.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(0);
    }

    private static final Activtion[] VALUES = values();

    public static Activtion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Activtion(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Activtion)
  }

  /**
   * Protobuf enum {@code ClassType}
   */
  public enum ClassType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLASS_A = 0;</code>
     */
    CLASS_A(0, 0),
    /**
     * <code>CLASS_B = 1;</code>
     */
    CLASS_B(1, 1),
    /**
     * <code>CLASS_C = 2;</code>
     */
    CLASS_C(2, 2),
    ;

    /**
     * <code>CLASS_A = 0;</code>
     */
    public static final int CLASS_A_VALUE = 0;
    /**
     * <code>CLASS_B = 1;</code>
     */
    public static final int CLASS_B_VALUE = 1;
    /**
     * <code>CLASS_C = 2;</code>
     */
    public static final int CLASS_C_VALUE = 2;


    public final int getNumber() { return value; }

    public static ClassType valueOf(int value) {
      switch (value) {
        case 0: return CLASS_A;
        case 1: return CLASS_B;
        case 2: return CLASS_C;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClassType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ClassType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClassType>() {
            public ClassType findValueByNumber(int number) {
              return ClassType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(1);
    }

    private static final ClassType[] VALUES = values();

    public static ClassType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ClassType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ClassType)
  }

  /**
   * Protobuf enum {@code SensorError}
   */
  public enum SensorError
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SENSOR_ERR_NONE = 0;</code>
     */
    SENSOR_ERR_NONE(0, 0),
    /**
     * <code>SENSOR_ERR_NO_DATA = 1;</code>
     */
    SENSOR_ERR_NO_DATA(1, 1),
    /**
     * <code>SENSOR_ERR_CRC = 2;</code>
     */
    SENSOR_ERR_CRC(2, 2),
    /**
     * <code>SENSOR_ERR_DATA = 3;</code>
     */
    SENSOR_ERR_DATA(3, 3),
    /**
     * <code>SENSOR_ERR_FAULT = 4;</code>
     */
    SENSOR_ERR_FAULT(4, 4),
    /**
     * <code>SENSOR_ERR_ALARM = 5;</code>
     */
    SENSOR_ERR_ALARM(5, 5),
    /**
     * <code>SENSOR_ERR_ALARM_HIGH = 6;</code>
     */
    SENSOR_ERR_ALARM_HIGH(6, 6),
    /**
     * <code>SENSOR_ERR_ALARM_LOW = 7;</code>
     */
    SENSOR_ERR_ALARM_LOW(7, 7),
    /**
     * <code>SENSOR_ERR_UNKNOWN = 127;</code>
     */
    SENSOR_ERR_UNKNOWN(8, 127),
    ;

    /**
     * <code>SENSOR_ERR_NONE = 0;</code>
     */
    public static final int SENSOR_ERR_NONE_VALUE = 0;
    /**
     * <code>SENSOR_ERR_NO_DATA = 1;</code>
     */
    public static final int SENSOR_ERR_NO_DATA_VALUE = 1;
    /**
     * <code>SENSOR_ERR_CRC = 2;</code>
     */
    public static final int SENSOR_ERR_CRC_VALUE = 2;
    /**
     * <code>SENSOR_ERR_DATA = 3;</code>
     */
    public static final int SENSOR_ERR_DATA_VALUE = 3;
    /**
     * <code>SENSOR_ERR_FAULT = 4;</code>
     */
    public static final int SENSOR_ERR_FAULT_VALUE = 4;
    /**
     * <code>SENSOR_ERR_ALARM = 5;</code>
     */
    public static final int SENSOR_ERR_ALARM_VALUE = 5;
    /**
     * <code>SENSOR_ERR_ALARM_HIGH = 6;</code>
     */
    public static final int SENSOR_ERR_ALARM_HIGH_VALUE = 6;
    /**
     * <code>SENSOR_ERR_ALARM_LOW = 7;</code>
     */
    public static final int SENSOR_ERR_ALARM_LOW_VALUE = 7;
    /**
     * <code>SENSOR_ERR_UNKNOWN = 127;</code>
     */
    public static final int SENSOR_ERR_UNKNOWN_VALUE = 127;


    public final int getNumber() { return value; }

    public static SensorError valueOf(int value) {
      switch (value) {
        case 0: return SENSOR_ERR_NONE;
        case 1: return SENSOR_ERR_NO_DATA;
        case 2: return SENSOR_ERR_CRC;
        case 3: return SENSOR_ERR_DATA;
        case 4: return SENSOR_ERR_FAULT;
        case 5: return SENSOR_ERR_ALARM;
        case 6: return SENSOR_ERR_ALARM_HIGH;
        case 7: return SENSOR_ERR_ALARM_LOW;
        case 127: return SENSOR_ERR_UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorError>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SensorError>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorError>() {
            public SensorError findValueByNumber(int number) {
              return SensorError.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(2);
    }

    private static final SensorError[] VALUES = values();

    public static SensorError valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SensorError(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SensorError)
  }

  /**
   * Protobuf enum {@code SensorType}
   */
  public enum SensorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SENSOR_TYPE_TEMP = 0;</code>
     */
    SENSOR_TYPE_TEMP(0, 0),
    /**
     * <code>SENSOR_TYPE_HUMI = 1;</code>
     */
    SENSOR_TYPE_HUMI(1, 1),
    /**
     * <code>SENSOR_TYPE_LIGHT = 2;</code>
     */
    SENSOR_TYPE_LIGHT(2, 2),
    /**
     * <code>SENSOR_TYPE_GPS = 3;</code>
     */
    SENSOR_TYPE_GPS(3, 3),
    /**
     * <code>SENSOR_TYPE_ANGLE = 4;</code>
     */
    SENSOR_TYPE_ANGLE(4, 4),
    /**
     * <code>SENSOR_TYPE_PM2_5 = 5;</code>
     */
    SENSOR_TYPE_PM2_5(5, 5),
    /**
     * <code>SENSOR_TYPE_PM10 = 6;</code>
     */
    SENSOR_TYPE_PM10(6, 6),
    /**
     * <code>SENSOR_TYPE_LEAK = 7;</code>
     */
    SENSOR_TYPE_LEAK(7, 7),
    /**
     * <code>SENSOR_TYPE_CO = 8;</code>
     */
    SENSOR_TYPE_CO(8, 8),
    /**
     * <code>SENSOR_TYPE_CO2 = 9;</code>
     */
    SENSOR_TYPE_CO2(9, 9),
    /**
     * <code>SENSOR_TYPE_NO2 = 10;</code>
     */
    SENSOR_TYPE_NO2(10, 10),
    /**
     * <code>SENSOR_TYPE_CH4 = 11;</code>
     */
    SENSOR_TYPE_CH4(11, 11),
    /**
     * <code>SENSOR_TYPE_LPG = 12;</code>
     */
    SENSOR_TYPE_LPG(12, 12),
    /**
     * <code>SENSOR_TYPE_FLAME = 13;</code>
     */
    SENSOR_TYPE_FLAME(13, 13),
    /**
     * <code>SENSOR_TYPE_ARTIFICIAL_GAS = 14;</code>
     */
    SENSOR_TYPE_ARTIFICIAL_GAS(14, 14),
    /**
     * <code>SENSOR_TYPE_WATER_GAGE = 15;</code>
     */
    SENSOR_TYPE_WATER_GAGE(15, 15),
    /**
     * <code>SENSOR_TYPE_TRACKER = 16;</code>
     */
    SENSOR_TYPE_TRACKER(16, 16),
    ;

    /**
     * <code>SENSOR_TYPE_TEMP = 0;</code>
     */
    public static final int SENSOR_TYPE_TEMP_VALUE = 0;
    /**
     * <code>SENSOR_TYPE_HUMI = 1;</code>
     */
    public static final int SENSOR_TYPE_HUMI_VALUE = 1;
    /**
     * <code>SENSOR_TYPE_LIGHT = 2;</code>
     */
    public static final int SENSOR_TYPE_LIGHT_VALUE = 2;
    /**
     * <code>SENSOR_TYPE_GPS = 3;</code>
     */
    public static final int SENSOR_TYPE_GPS_VALUE = 3;
    /**
     * <code>SENSOR_TYPE_ANGLE = 4;</code>
     */
    public static final int SENSOR_TYPE_ANGLE_VALUE = 4;
    /**
     * <code>SENSOR_TYPE_PM2_5 = 5;</code>
     */
    public static final int SENSOR_TYPE_PM2_5_VALUE = 5;
    /**
     * <code>SENSOR_TYPE_PM10 = 6;</code>
     */
    public static final int SENSOR_TYPE_PM10_VALUE = 6;
    /**
     * <code>SENSOR_TYPE_LEAK = 7;</code>
     */
    public static final int SENSOR_TYPE_LEAK_VALUE = 7;
    /**
     * <code>SENSOR_TYPE_CO = 8;</code>
     */
    public static final int SENSOR_TYPE_CO_VALUE = 8;
    /**
     * <code>SENSOR_TYPE_CO2 = 9;</code>
     */
    public static final int SENSOR_TYPE_CO2_VALUE = 9;
    /**
     * <code>SENSOR_TYPE_NO2 = 10;</code>
     */
    public static final int SENSOR_TYPE_NO2_VALUE = 10;
    /**
     * <code>SENSOR_TYPE_CH4 = 11;</code>
     */
    public static final int SENSOR_TYPE_CH4_VALUE = 11;
    /**
     * <code>SENSOR_TYPE_LPG = 12;</code>
     */
    public static final int SENSOR_TYPE_LPG_VALUE = 12;
    /**
     * <code>SENSOR_TYPE_FLAME = 13;</code>
     */
    public static final int SENSOR_TYPE_FLAME_VALUE = 13;
    /**
     * <code>SENSOR_TYPE_ARTIFICIAL_GAS = 14;</code>
     */
    public static final int SENSOR_TYPE_ARTIFICIAL_GAS_VALUE = 14;
    /**
     * <code>SENSOR_TYPE_WATER_GAGE = 15;</code>
     */
    public static final int SENSOR_TYPE_WATER_GAGE_VALUE = 15;
    /**
     * <code>SENSOR_TYPE_TRACKER = 16;</code>
     */
    public static final int SENSOR_TYPE_TRACKER_VALUE = 16;


    public final int getNumber() { return value; }

    public static SensorType valueOf(int value) {
      switch (value) {
        case 0: return SENSOR_TYPE_TEMP;
        case 1: return SENSOR_TYPE_HUMI;
        case 2: return SENSOR_TYPE_LIGHT;
        case 3: return SENSOR_TYPE_GPS;
        case 4: return SENSOR_TYPE_ANGLE;
        case 5: return SENSOR_TYPE_PM2_5;
        case 6: return SENSOR_TYPE_PM10;
        case 7: return SENSOR_TYPE_LEAK;
        case 8: return SENSOR_TYPE_CO;
        case 9: return SENSOR_TYPE_CO2;
        case 10: return SENSOR_TYPE_NO2;
        case 11: return SENSOR_TYPE_CH4;
        case 12: return SENSOR_TYPE_LPG;
        case 13: return SENSOR_TYPE_FLAME;
        case 14: return SENSOR_TYPE_ARTIFICIAL_GAS;
        case 15: return SENSOR_TYPE_WATER_GAGE;
        case 16: return SENSOR_TYPE_TRACKER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
            public SensorType findValueByNumber(int number) {
              return SensorType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(3);
    }

    private static final SensorType[] VALUES = values();

    public static SensorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SensorType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SensorType)
  }

  /**
   * Protobuf enum {@code SensorStatus}
   */
  public enum SensorStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SENSORO_STATUS_NONE = 0;</code>
     */
    SENSORO_STATUS_NONE(0, 0),
    /**
     * <code>SENSORO_STATUS_SELF_INSPECTION = 1;</code>
     */
    SENSORO_STATUS_SELF_INSPECTION(1, 1),
    /**
     * <code>SENSORO_STATUS_ALARM = 2;</code>
     */
    SENSORO_STATUS_ALARM(2, 2),
    ;

    /**
     * <code>SENSORO_STATUS_NONE = 0;</code>
     */
    public static final int SENSORO_STATUS_NONE_VALUE = 0;
    /**
     * <code>SENSORO_STATUS_SELF_INSPECTION = 1;</code>
     */
    public static final int SENSORO_STATUS_SELF_INSPECTION_VALUE = 1;
    /**
     * <code>SENSORO_STATUS_ALARM = 2;</code>
     */
    public static final int SENSORO_STATUS_ALARM_VALUE = 2;


    public final int getNumber() { return value; }

    public static SensorStatus valueOf(int value) {
      switch (value) {
        case 0: return SENSORO_STATUS_NONE;
        case 1: return SENSORO_STATUS_SELF_INSPECTION;
        case 2: return SENSORO_STATUS_ALARM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SensorStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorStatus>() {
            public SensorStatus findValueByNumber(int number) {
              return SensorStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(4);
    }

    private static final SensorStatus[] VALUES = values();

    public static SensorStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SensorStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SensorStatus)
  }

  /**
   * Protobuf enum {@code AppCmd}
   */
  public enum AppCmd
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>APP_CMD_NONE = 0;</code>
     */
    APP_CMD_NONE(0, 0),
    /**
     * <code>APP_CMD_RESET = 1;</code>
     */
    APP_CMD_RESET(1, 1),
    /**
     * <code>APP_CMD_FAC_RESET = 2;</code>
     */
    APP_CMD_FAC_RESET(2, 2),
    /**
     * <code>APP_CMD_DFU = 3;</code>
     */
    APP_CMD_DFU(3, 3),
    ;

    /**
     * <code>APP_CMD_NONE = 0;</code>
     */
    public static final int APP_CMD_NONE_VALUE = 0;
    /**
     * <code>APP_CMD_RESET = 1;</code>
     */
    public static final int APP_CMD_RESET_VALUE = 1;
    /**
     * <code>APP_CMD_FAC_RESET = 2;</code>
     */
    public static final int APP_CMD_FAC_RESET_VALUE = 2;
    /**
     * <code>APP_CMD_DFU = 3;</code>
     */
    public static final int APP_CMD_DFU_VALUE = 3;


    public final int getNumber() { return value; }

    public static AppCmd valueOf(int value) {
      switch (value) {
        case 0: return APP_CMD_NONE;
        case 1: return APP_CMD_RESET;
        case 2: return APP_CMD_FAC_RESET;
        case 3: return APP_CMD_DFU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AppCmd>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AppCmd>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AppCmd>() {
            public AppCmd findValueByNumber(int number) {
              return AppCmd.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(5);
    }

    private static final AppCmd[] VALUES = values();

    public static AppCmd valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AppCmd(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AppCmd)
  }

  /**
   * Protobuf enum {@code NodeState}
   */
  public enum NodeState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NODE_STATE_UNKNOWN = 0;</code>
     */
    NODE_STATE_UNKNOWN(0, 0),
    /**
     * <code>NODE_STATE_STATIC = 1;</code>
     */
    NODE_STATE_STATIC(1, 1),
    /**
     * <code>NODE_STATE_MOVE = 2;</code>
     */
    NODE_STATE_MOVE(2, 2),
    ;

    /**
     * <code>NODE_STATE_UNKNOWN = 0;</code>
     */
    public static final int NODE_STATE_UNKNOWN_VALUE = 0;
    /**
     * <code>NODE_STATE_STATIC = 1;</code>
     */
    public static final int NODE_STATE_STATIC_VALUE = 1;
    /**
     * <code>NODE_STATE_MOVE = 2;</code>
     */
    public static final int NODE_STATE_MOVE_VALUE = 2;


    public final int getNumber() { return value; }

    public static NodeState valueOf(int value) {
      switch (value) {
        case 0: return NODE_STATE_UNKNOWN;
        case 1: return NODE_STATE_STATIC;
        case 2: return NODE_STATE_MOVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NodeState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NodeState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NodeState>() {
            public NodeState findValueByNumber(int number) {
              return NodeState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(6);
    }

    private static final NodeState[] VALUES = values();

    public static NodeState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NodeState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NodeState)
  }

  /**
   * Protobuf enum {@code NodeAlarm}
   */
  public enum NodeAlarm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NODE_ALARM_NONE = 0;</code>
     */
    NODE_ALARM_NONE(0, 0),
    /**
     * <code>NODE_ALARM_STATIC = 1;</code>
     */
    NODE_ALARM_STATIC(1, 1),
    /**
     * <code>NODE_ALARM_MOVE = 2;</code>
     */
    NODE_ALARM_MOVE(2, 2),
    /**
     * <code>NODE_ALARM_COLLISION = 3;</code>
     */
    NODE_ALARM_COLLISION(3, 3),
    /**
     * <code>NODE_ALARM_ROLL = 4;</code>
     */
    NODE_ALARM_ROLL(4, 4),
    /**
     * <code>NODE_ALARM_INVERTED = 5;</code>
     */
    NODE_ALARM_INVERTED(5, 5),
    /**
     * <code>NODE_ALARM_FALL = 6;</code>
     */
    NODE_ALARM_FALL(6, 6),
    ;

    /**
     * <code>NODE_ALARM_NONE = 0;</code>
     */
    public static final int NODE_ALARM_NONE_VALUE = 0;
    /**
     * <code>NODE_ALARM_STATIC = 1;</code>
     */
    public static final int NODE_ALARM_STATIC_VALUE = 1;
    /**
     * <code>NODE_ALARM_MOVE = 2;</code>
     */
    public static final int NODE_ALARM_MOVE_VALUE = 2;
    /**
     * <code>NODE_ALARM_COLLISION = 3;</code>
     */
    public static final int NODE_ALARM_COLLISION_VALUE = 3;
    /**
     * <code>NODE_ALARM_ROLL = 4;</code>
     */
    public static final int NODE_ALARM_ROLL_VALUE = 4;
    /**
     * <code>NODE_ALARM_INVERTED = 5;</code>
     */
    public static final int NODE_ALARM_INVERTED_VALUE = 5;
    /**
     * <code>NODE_ALARM_FALL = 6;</code>
     */
    public static final int NODE_ALARM_FALL_VALUE = 6;


    public final int getNumber() { return value; }

    public static NodeAlarm valueOf(int value) {
      switch (value) {
        case 0: return NODE_ALARM_NONE;
        case 1: return NODE_ALARM_STATIC;
        case 2: return NODE_ALARM_MOVE;
        case 3: return NODE_ALARM_COLLISION;
        case 4: return NODE_ALARM_ROLL;
        case 5: return NODE_ALARM_INVERTED;
        case 6: return NODE_ALARM_FALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NodeAlarm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NodeAlarm>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NodeAlarm>() {
            public NodeAlarm findValueByNumber(int number) {
              return NodeAlarm.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(7);
    }

    private static final NodeAlarm[] VALUES = values();

    public static NodeAlarm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NodeAlarm(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NodeAlarm)
  }

  /**
   * Protobuf enum {@code SmokeCtrl}
   */
  public enum SmokeCtrl
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SMOKE_CTRL_NONE = 0;</code>
     */
    SMOKE_CTRL_NONE(0, 0),
    /**
     * <code>SMOKE_ERASURE = 1;</code>
     */
    SMOKE_ERASURE(1, 1),
    /**
     * <code>SMOKE_INSPECTION_TEST = 2;</code>
     */
    SMOKE_INSPECTION_TEST(2, 2),
    /**
     * <code>SMOKE_INSPECTION_OVER = 3;</code>
     */
    SMOKE_INSPECTION_OVER(3, 3),
    ;

    /**
     * <code>SMOKE_CTRL_NONE = 0;</code>
     */
    public static final int SMOKE_CTRL_NONE_VALUE = 0;
    /**
     * <code>SMOKE_ERASURE = 1;</code>
     */
    public static final int SMOKE_ERASURE_VALUE = 1;
    /**
     * <code>SMOKE_INSPECTION_TEST = 2;</code>
     */
    public static final int SMOKE_INSPECTION_TEST_VALUE = 2;
    /**
     * <code>SMOKE_INSPECTION_OVER = 3;</code>
     */
    public static final int SMOKE_INSPECTION_OVER_VALUE = 3;


    public final int getNumber() { return value; }

    public static SmokeCtrl valueOf(int value) {
      switch (value) {
        case 0: return SMOKE_CTRL_NONE;
        case 1: return SMOKE_ERASURE;
        case 2: return SMOKE_INSPECTION_TEST;
        case 3: return SMOKE_INSPECTION_OVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SmokeCtrl>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SmokeCtrl>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SmokeCtrl>() {
            public SmokeCtrl findValueByNumber(int number) {
              return SmokeCtrl.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(8);
    }

    private static final SmokeCtrl[] VALUES = values();

    public static SmokeCtrl valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SmokeCtrl(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SmokeCtrl)
  }

  /**
   * Protobuf enum {@code TrackerCtrl}
   */
  public enum TrackerCtrl
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRACKER_Ctrl = 0;</code>
     */
    TRACKER_Ctrl(0, 0),
    /**
     * <code>TRACKER_BOOT = 1;</code>
     */
    TRACKER_BOOT(1, 1),
    /**
     * <code>TRACKER_SHUTDOWN = 2;</code>
     */
    TRACKER_SHUTDOWN(2, 2),
    /**
     * <code>TRACKER_CALL_START = 3;</code>
     */
    TRACKER_CALL_START(3, 3),
    /**
     * <code>TRACKER_CALL_END = 4;</code>
     */
    TRACKER_CALL_END(4, 4),
    /**
     * <code>TRACKER_EMERGENCE_START = 5;</code>
     */
    TRACKER_EMERGENCE_START(5, 5),
    /**
     * <code>TRACKER_EMERGENCE_END = 6;</code>
     */
    TRACKER_EMERGENCE_END(6, 6),
    ;

    /**
     * <code>TRACKER_Ctrl = 0;</code>
     */
    public static final int TRACKER_Ctrl_VALUE = 0;
    /**
     * <code>TRACKER_BOOT = 1;</code>
     */
    public static final int TRACKER_BOOT_VALUE = 1;
    /**
     * <code>TRACKER_SHUTDOWN = 2;</code>
     */
    public static final int TRACKER_SHUTDOWN_VALUE = 2;
    /**
     * <code>TRACKER_CALL_START = 3;</code>
     */
    public static final int TRACKER_CALL_START_VALUE = 3;
    /**
     * <code>TRACKER_CALL_END = 4;</code>
     */
    public static final int TRACKER_CALL_END_VALUE = 4;
    /**
     * <code>TRACKER_EMERGENCE_START = 5;</code>
     */
    public static final int TRACKER_EMERGENCE_START_VALUE = 5;
    /**
     * <code>TRACKER_EMERGENCE_END = 6;</code>
     */
    public static final int TRACKER_EMERGENCE_END_VALUE = 6;


    public final int getNumber() { return value; }

    public static TrackerCtrl valueOf(int value) {
      switch (value) {
        case 0: return TRACKER_Ctrl;
        case 1: return TRACKER_BOOT;
        case 2: return TRACKER_SHUTDOWN;
        case 3: return TRACKER_CALL_START;
        case 4: return TRACKER_CALL_END;
        case 5: return TRACKER_EMERGENCE_START;
        case 6: return TRACKER_EMERGENCE_END;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrackerCtrl>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TrackerCtrl>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrackerCtrl>() {
            public TrackerCtrl findValueByNumber(int number) {
              return TrackerCtrl.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgNode1V1M5.getDescriptor().getEnumTypes().get(9);
    }

    private static final TrackerCtrl[] VALUES = values();

    public static TrackerCtrl valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TrackerCtrl(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TrackerCtrl)
  }

  public interface LoraParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes devEui = 1;
    /**
     * <code>optional bytes devEui = 1;</code>
     */
    boolean hasDevEui();
    /**
     * <code>optional bytes devEui = 1;</code>
     */
    com.google.protobuf.ByteString getDevEui();

    // optional bytes appEui = 2;
    /**
     * <code>optional bytes appEui = 2;</code>
     */
    boolean hasAppEui();
    /**
     * <code>optional bytes appEui = 2;</code>
     */
    com.google.protobuf.ByteString getAppEui();

    // optional bytes appKey = 3;
    /**
     * <code>optional bytes appKey = 3;</code>
     */
    boolean hasAppKey();
    /**
     * <code>optional bytes appKey = 3;</code>
     */
    com.google.protobuf.ByteString getAppKey();

    // optional bytes appSkey = 4;
    /**
     * <code>optional bytes appSkey = 4;</code>
     */
    boolean hasAppSkey();
    /**
     * <code>optional bytes appSkey = 4;</code>
     */
    com.google.protobuf.ByteString getAppSkey();

    // optional bytes nwkSkey = 5;
    /**
     * <code>optional bytes nwkSkey = 5;</code>
     */
    boolean hasNwkSkey();
    /**
     * <code>optional bytes nwkSkey = 5;</code>
     */
    com.google.protobuf.ByteString getNwkSkey();

    // optional uint32 devAddr = 6;
    /**
     * <code>optional uint32 devAddr = 6;</code>
     */
    boolean hasDevAddr();
    /**
     * <code>optional uint32 devAddr = 6;</code>
     */
    int getDevAddr();

    // optional uint32 datarate = 7;
    /**
     * <code>optional uint32 datarate = 7;</code>
     */
    boolean hasDatarate();
    /**
     * <code>optional uint32 datarate = 7;</code>
     */
    int getDatarate();

    // optional sint32 txPower = 8;
    /**
     * <code>optional sint32 txPower = 8;</code>
     */
    boolean hasTxPower();
    /**
     * <code>optional sint32 txPower = 8;</code>
     */
    int getTxPower();

    // optional uint32 adr = 9;
    /**
     * <code>optional uint32 adr = 9;</code>
     */
    boolean hasAdr();
    /**
     * <code>optional uint32 adr = 9;</code>
     */
    int getAdr();

    // optional .Activtion activition = 10;
    /**
     * <code>optional .Activtion activition = 10;</code>
     */
    boolean hasActivition();
    /**
     * <code>optional .Activtion activition = 10;</code>
     */
    MsgNode1V1M5.Activtion getActivition();

    // optional .ClassType classType = 11;
    /**
     * <code>optional .ClassType classType = 11;</code>
     */
    boolean hasClassType();
    /**
     * <code>optional .ClassType classType = 11;</code>
     */
    MsgNode1V1M5.ClassType getClassType();

    // optional uint32 delay = 12;
    /**
     * <code>optional uint32 delay = 12;</code>
     */
    boolean hasDelay();
    /**
     * <code>optional uint32 delay = 12;</code>
     */
    int getDelay();

    // repeated uint32 channelMask = 13;
    /**
     * <code>repeated uint32 channelMask = 13;</code>
     */
    java.util.List<Integer> getChannelMaskList();
    /**
     * <code>repeated uint32 channelMask = 13;</code>
     */
    int getChannelMaskCount();
    /**
     * <code>repeated uint32 channelMask = 13;</code>
     */
    int getChannelMask(int index);

    // optional uint32 maxEIRP = 14;
    /**
     * <code>optional uint32 maxEIRP = 14;</code>
     */
    boolean hasMaxEIRP();
    /**
     * <code>optional uint32 maxEIRP = 14;</code>
     */
    int getMaxEIRP();

    // optional uint32 sglStatus = 15;
    /**
     * <code>optional uint32 sglStatus = 15;</code>
     */
    boolean hasSglStatus();
    /**
     * <code>optional uint32 sglStatus = 15;</code>
     */
    int getSglStatus();

    // optional uint32 sglFrequency = 16;
    /**
     * <code>optional uint32 sglFrequency = 16;</code>
     */
    boolean hasSglFrequency();
    /**
     * <code>optional uint32 sglFrequency = 16;</code>
     */
    int getSglFrequency();

    // optional uint32 sglDatarate = 17;
    /**
     * <code>optional uint32 sglDatarate = 17;</code>
     */
    boolean hasSglDatarate();
    /**
     * <code>optional uint32 sglDatarate = 17;</code>
     */
    int getSglDatarate();
  }
  /**
   * Protobuf type {@code LoraParam}
   */
  public static final class LoraParam extends
      com.google.protobuf.GeneratedMessage
      implements LoraParamOrBuilder {
    // Use LoraParam.newBuilder() to construct.
    private LoraParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraParam defaultInstance;
    public static LoraParam getDefaultInstance() {
      return defaultInstance;
    }

    public LoraParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              devEui_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              appEui_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              appKey_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              appSkey_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              nwkSkey_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              devAddr_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              datarate_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              txPower_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              adr_ = input.readUInt32();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.Activtion value = MsgNode1V1M5.Activtion.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                activition_ = value;
              }
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.ClassType value = MsgNode1V1M5.ClassType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                classType_ = value;
              }
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              delay_ = input.readUInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                channelMask_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              channelMask_.add(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                channelMask_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                channelMask_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              maxEIRP_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              sglStatus_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              sglFrequency_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              sglDatarate_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          channelMask_ = java.util.Collections.unmodifiableList(channelMask_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_LoraParam_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_LoraParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.LoraParam.class, MsgNode1V1M5.LoraParam.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraParam> PARSER =
        new com.google.protobuf.AbstractParser<LoraParam>() {
      public LoraParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraParam(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<LoraParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes devEui = 1;
    public static final int DEVEUI_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString devEui_;
    /**
     * <code>optional bytes devEui = 1;</code>
     */
    public boolean hasDevEui() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes devEui = 1;</code>
     */
    public com.google.protobuf.ByteString getDevEui() {
      return devEui_;
    }

    // optional bytes appEui = 2;
    public static final int APPEUI_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString appEui_;
    /**
     * <code>optional bytes appEui = 2;</code>
     */
    public boolean hasAppEui() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes appEui = 2;</code>
     */
    public com.google.protobuf.ByteString getAppEui() {
      return appEui_;
    }

    // optional bytes appKey = 3;
    public static final int APPKEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString appKey_;
    /**
     * <code>optional bytes appKey = 3;</code>
     */
    public boolean hasAppKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes appKey = 3;</code>
     */
    public com.google.protobuf.ByteString getAppKey() {
      return appKey_;
    }

    // optional bytes appSkey = 4;
    public static final int APPSKEY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString appSkey_;
    /**
     * <code>optional bytes appSkey = 4;</code>
     */
    public boolean hasAppSkey() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes appSkey = 4;</code>
     */
    public com.google.protobuf.ByteString getAppSkey() {
      return appSkey_;
    }

    // optional bytes nwkSkey = 5;
    public static final int NWKSKEY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString nwkSkey_;
    /**
     * <code>optional bytes nwkSkey = 5;</code>
     */
    public boolean hasNwkSkey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes nwkSkey = 5;</code>
     */
    public com.google.protobuf.ByteString getNwkSkey() {
      return nwkSkey_;
    }

    // optional uint32 devAddr = 6;
    public static final int DEVADDR_FIELD_NUMBER = 6;
    private int devAddr_;
    /**
     * <code>optional uint32 devAddr = 6;</code>
     */
    public boolean hasDevAddr() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 devAddr = 6;</code>
     */
    public int getDevAddr() {
      return devAddr_;
    }

    // optional uint32 datarate = 7;
    public static final int DATARATE_FIELD_NUMBER = 7;
    private int datarate_;
    /**
     * <code>optional uint32 datarate = 7;</code>
     */
    public boolean hasDatarate() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 datarate = 7;</code>
     */
    public int getDatarate() {
      return datarate_;
    }

    // optional sint32 txPower = 8;
    public static final int TXPOWER_FIELD_NUMBER = 8;
    private int txPower_;
    /**
     * <code>optional sint32 txPower = 8;</code>
     */
    public boolean hasTxPower() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 txPower = 8;</code>
     */
    public int getTxPower() {
      return txPower_;
    }

    // optional uint32 adr = 9;
    public static final int ADR_FIELD_NUMBER = 9;
    private int adr_;
    /**
     * <code>optional uint32 adr = 9;</code>
     */
    public boolean hasAdr() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 adr = 9;</code>
     */
    public int getAdr() {
      return adr_;
    }

    // optional .Activtion activition = 10;
    public static final int ACTIVITION_FIELD_NUMBER = 10;
    private MsgNode1V1M5.Activtion activition_;
    /**
     * <code>optional .Activtion activition = 10;</code>
     */
    public boolean hasActivition() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .Activtion activition = 10;</code>
     */
    public MsgNode1V1M5.Activtion getActivition() {
      return activition_;
    }

    // optional .ClassType classType = 11;
    public static final int CLASSTYPE_FIELD_NUMBER = 11;
    private MsgNode1V1M5.ClassType classType_;
    /**
     * <code>optional .ClassType classType = 11;</code>
     */
    public boolean hasClassType() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .ClassType classType = 11;</code>
     */
    public MsgNode1V1M5.ClassType getClassType() {
      return classType_;
    }

    // optional uint32 delay = 12;
    public static final int DELAY_FIELD_NUMBER = 12;
    private int delay_;
    /**
     * <code>optional uint32 delay = 12;</code>
     */
    public boolean hasDelay() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 delay = 12;</code>
     */
    public int getDelay() {
      return delay_;
    }

    // repeated uint32 channelMask = 13;
    public static final int CHANNELMASK_FIELD_NUMBER = 13;
    private java.util.List<Integer> channelMask_;
    /**
     * <code>repeated uint32 channelMask = 13;</code>
     */
    public java.util.List<Integer>
        getChannelMaskList() {
      return channelMask_;
    }
    /**
     * <code>repeated uint32 channelMask = 13;</code>
     */
    public int getChannelMaskCount() {
      return channelMask_.size();
    }
    /**
     * <code>repeated uint32 channelMask = 13;</code>
     */
    public int getChannelMask(int index) {
      return channelMask_.get(index);
    }

    // optional uint32 maxEIRP = 14;
    public static final int MAXEIRP_FIELD_NUMBER = 14;
    private int maxEIRP_;
    /**
     * <code>optional uint32 maxEIRP = 14;</code>
     */
    public boolean hasMaxEIRP() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 maxEIRP = 14;</code>
     */
    public int getMaxEIRP() {
      return maxEIRP_;
    }

    // optional uint32 sglStatus = 15;
    public static final int SGLSTATUS_FIELD_NUMBER = 15;
    private int sglStatus_;
    /**
     * <code>optional uint32 sglStatus = 15;</code>
     */
    public boolean hasSglStatus() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 sglStatus = 15;</code>
     */
    public int getSglStatus() {
      return sglStatus_;
    }

    // optional uint32 sglFrequency = 16;
    public static final int SGLFREQUENCY_FIELD_NUMBER = 16;
    private int sglFrequency_;
    /**
     * <code>optional uint32 sglFrequency = 16;</code>
     */
    public boolean hasSglFrequency() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 sglFrequency = 16;</code>
     */
    public int getSglFrequency() {
      return sglFrequency_;
    }

    // optional uint32 sglDatarate = 17;
    public static final int SGLDATARATE_FIELD_NUMBER = 17;
    private int sglDatarate_;
    /**
     * <code>optional uint32 sglDatarate = 17;</code>
     */
    public boolean hasSglDatarate() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 sglDatarate = 17;</code>
     */
    public int getSglDatarate() {
      return sglDatarate_;
    }

    private void initFields() {
      devEui_ = com.google.protobuf.ByteString.EMPTY;
      appEui_ = com.google.protobuf.ByteString.EMPTY;
      appKey_ = com.google.protobuf.ByteString.EMPTY;
      appSkey_ = com.google.protobuf.ByteString.EMPTY;
      nwkSkey_ = com.google.protobuf.ByteString.EMPTY;
      devAddr_ = 0;
      datarate_ = 0;
      txPower_ = 0;
      adr_ = 0;
      activition_ = MsgNode1V1M5.Activtion.ABP;
      classType_ = MsgNode1V1M5.ClassType.CLASS_A;
      delay_ = 0;
      channelMask_ = java.util.Collections.emptyList();
      maxEIRP_ = 0;
      sglStatus_ = 0;
      sglFrequency_ = 0;
      sglDatarate_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, devEui_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, appEui_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, appKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, appSkey_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, nwkSkey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, devAddr_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, datarate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, txPower_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, adr_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(10, activition_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(11, classType_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, delay_);
      }
      for (int i = 0; i < channelMask_.size(); i++) {
        output.writeUInt32(13, channelMask_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(14, maxEIRP_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(15, sglStatus_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(16, sglFrequency_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(17, sglDatarate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, devEui_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, appEui_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, appKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, appSkey_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, nwkSkey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, devAddr_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, datarate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, txPower_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, adr_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, activition_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, classType_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, delay_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < channelMask_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(channelMask_.get(i));
        }
        size += dataSize;
        size += 1 * getChannelMaskList().size();
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, maxEIRP_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, sglStatus_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, sglFrequency_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, sglDatarate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.LoraParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.LoraParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.LoraParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.LoraParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.LoraParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.LoraParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.LoraParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.LoraParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.LoraParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.LoraParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.LoraParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LoraParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.LoraParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_LoraParam_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_LoraParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.LoraParam.class, MsgNode1V1M5.LoraParam.Builder.class);
      }

      // Construct using MsgNode1V1M5.LoraParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        devEui_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        appEui_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        appKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        appSkey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        nwkSkey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        devAddr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        datarate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        txPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        adr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        activition_ = MsgNode1V1M5.Activtion.ABP;
        bitField0_ = (bitField0_ & ~0x00000200);
        classType_ = MsgNode1V1M5.ClassType.CLASS_A;
        bitField0_ = (bitField0_ & ~0x00000400);
        delay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        channelMask_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        maxEIRP_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        sglStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        sglFrequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        sglDatarate_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_LoraParam_descriptor;
      }

      public MsgNode1V1M5.LoraParam getDefaultInstanceForType() {
        return MsgNode1V1M5.LoraParam.getDefaultInstance();
      }

      public MsgNode1V1M5.LoraParam build() {
        MsgNode1V1M5.LoraParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.LoraParam buildPartial() {
        MsgNode1V1M5.LoraParam result = new MsgNode1V1M5.LoraParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.devEui_ = devEui_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.appEui_ = appEui_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.appKey_ = appKey_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.appSkey_ = appSkey_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nwkSkey_ = nwkSkey_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.devAddr_ = devAddr_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.datarate_ = datarate_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.txPower_ = txPower_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.adr_ = adr_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.activition_ = activition_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.classType_ = classType_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.delay_ = delay_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          channelMask_ = java.util.Collections.unmodifiableList(channelMask_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.channelMask_ = channelMask_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.maxEIRP_ = maxEIRP_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.sglStatus_ = sglStatus_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.sglFrequency_ = sglFrequency_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.sglDatarate_ = sglDatarate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.LoraParam) {
          return mergeFrom((MsgNode1V1M5.LoraParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.LoraParam other) {
        if (other == MsgNode1V1M5.LoraParam.getDefaultInstance()) return this;
        if (other.hasDevEui()) {
          setDevEui(other.getDevEui());
        }
        if (other.hasAppEui()) {
          setAppEui(other.getAppEui());
        }
        if (other.hasAppKey()) {
          setAppKey(other.getAppKey());
        }
        if (other.hasAppSkey()) {
          setAppSkey(other.getAppSkey());
        }
        if (other.hasNwkSkey()) {
          setNwkSkey(other.getNwkSkey());
        }
        if (other.hasDevAddr()) {
          setDevAddr(other.getDevAddr());
        }
        if (other.hasDatarate()) {
          setDatarate(other.getDatarate());
        }
        if (other.hasTxPower()) {
          setTxPower(other.getTxPower());
        }
        if (other.hasAdr()) {
          setAdr(other.getAdr());
        }
        if (other.hasActivition()) {
          setActivition(other.getActivition());
        }
        if (other.hasClassType()) {
          setClassType(other.getClassType());
        }
        if (other.hasDelay()) {
          setDelay(other.getDelay());
        }
        if (!other.channelMask_.isEmpty()) {
          if (channelMask_.isEmpty()) {
            channelMask_ = other.channelMask_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureChannelMaskIsMutable();
            channelMask_.addAll(other.channelMask_);
          }
          onChanged();
        }
        if (other.hasMaxEIRP()) {
          setMaxEIRP(other.getMaxEIRP());
        }
        if (other.hasSglStatus()) {
          setSglStatus(other.getSglStatus());
        }
        if (other.hasSglFrequency()) {
          setSglFrequency(other.getSglFrequency());
        }
        if (other.hasSglDatarate()) {
          setSglDatarate(other.getSglDatarate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.LoraParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.LoraParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes devEui = 1;
      private com.google.protobuf.ByteString devEui_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes devEui = 1;</code>
       */
      public boolean hasDevEui() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes devEui = 1;</code>
       */
      public com.google.protobuf.ByteString getDevEui() {
        return devEui_;
      }
      /**
       * <code>optional bytes devEui = 1;</code>
       */
      public Builder setDevEui(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        devEui_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes devEui = 1;</code>
       */
      public Builder clearDevEui() {
        bitField0_ = (bitField0_ & ~0x00000001);
        devEui_ = getDefaultInstance().getDevEui();
        onChanged();
        return this;
      }

      // optional bytes appEui = 2;
      private com.google.protobuf.ByteString appEui_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes appEui = 2;</code>
       */
      public boolean hasAppEui() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes appEui = 2;</code>
       */
      public com.google.protobuf.ByteString getAppEui() {
        return appEui_;
      }
      /**
       * <code>optional bytes appEui = 2;</code>
       */
      public Builder setAppEui(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appEui_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes appEui = 2;</code>
       */
      public Builder clearAppEui() {
        bitField0_ = (bitField0_ & ~0x00000002);
        appEui_ = getDefaultInstance().getAppEui();
        onChanged();
        return this;
      }

      // optional bytes appKey = 3;
      private com.google.protobuf.ByteString appKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes appKey = 3;</code>
       */
      public boolean hasAppKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes appKey = 3;</code>
       */
      public com.google.protobuf.ByteString getAppKey() {
        return appKey_;
      }
      /**
       * <code>optional bytes appKey = 3;</code>
       */
      public Builder setAppKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        appKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes appKey = 3;</code>
       */
      public Builder clearAppKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        appKey_ = getDefaultInstance().getAppKey();
        onChanged();
        return this;
      }

      // optional bytes appSkey = 4;
      private com.google.protobuf.ByteString appSkey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes appSkey = 4;</code>
       */
      public boolean hasAppSkey() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes appSkey = 4;</code>
       */
      public com.google.protobuf.ByteString getAppSkey() {
        return appSkey_;
      }
      /**
       * <code>optional bytes appSkey = 4;</code>
       */
      public Builder setAppSkey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        appSkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes appSkey = 4;</code>
       */
      public Builder clearAppSkey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        appSkey_ = getDefaultInstance().getAppSkey();
        onChanged();
        return this;
      }

      // optional bytes nwkSkey = 5;
      private com.google.protobuf.ByteString nwkSkey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes nwkSkey = 5;</code>
       */
      public boolean hasNwkSkey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes nwkSkey = 5;</code>
       */
      public com.google.protobuf.ByteString getNwkSkey() {
        return nwkSkey_;
      }
      /**
       * <code>optional bytes nwkSkey = 5;</code>
       */
      public Builder setNwkSkey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        nwkSkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes nwkSkey = 5;</code>
       */
      public Builder clearNwkSkey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nwkSkey_ = getDefaultInstance().getNwkSkey();
        onChanged();
        return this;
      }

      // optional uint32 devAddr = 6;
      private int devAddr_ ;
      /**
       * <code>optional uint32 devAddr = 6;</code>
       */
      public boolean hasDevAddr() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 devAddr = 6;</code>
       */
      public int getDevAddr() {
        return devAddr_;
      }
      /**
       * <code>optional uint32 devAddr = 6;</code>
       */
      public Builder setDevAddr(int value) {
        bitField0_ |= 0x00000020;
        devAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 devAddr = 6;</code>
       */
      public Builder clearDevAddr() {
        bitField0_ = (bitField0_ & ~0x00000020);
        devAddr_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 datarate = 7;
      private int datarate_ ;
      /**
       * <code>optional uint32 datarate = 7;</code>
       */
      public boolean hasDatarate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 datarate = 7;</code>
       */
      public int getDatarate() {
        return datarate_;
      }
      /**
       * <code>optional uint32 datarate = 7;</code>
       */
      public Builder setDatarate(int value) {
        bitField0_ |= 0x00000040;
        datarate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 datarate = 7;</code>
       */
      public Builder clearDatarate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        datarate_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 txPower = 8;
      private int txPower_ ;
      /**
       * <code>optional sint32 txPower = 8;</code>
       */
      public boolean hasTxPower() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 txPower = 8;</code>
       */
      public int getTxPower() {
        return txPower_;
      }
      /**
       * <code>optional sint32 txPower = 8;</code>
       */
      public Builder setTxPower(int value) {
        bitField0_ |= 0x00000080;
        txPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 txPower = 8;</code>
       */
      public Builder clearTxPower() {
        bitField0_ = (bitField0_ & ~0x00000080);
        txPower_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 adr = 9;
      private int adr_ ;
      /**
       * <code>optional uint32 adr = 9;</code>
       */
      public boolean hasAdr() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 adr = 9;</code>
       */
      public int getAdr() {
        return adr_;
      }
      /**
       * <code>optional uint32 adr = 9;</code>
       */
      public Builder setAdr(int value) {
        bitField0_ |= 0x00000100;
        adr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 adr = 9;</code>
       */
      public Builder clearAdr() {
        bitField0_ = (bitField0_ & ~0x00000100);
        adr_ = 0;
        onChanged();
        return this;
      }

      // optional .Activtion activition = 10;
      private MsgNode1V1M5.Activtion activition_ = MsgNode1V1M5.Activtion.ABP;
      /**
       * <code>optional .Activtion activition = 10;</code>
       */
      public boolean hasActivition() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .Activtion activition = 10;</code>
       */
      public MsgNode1V1M5.Activtion getActivition() {
        return activition_;
      }
      /**
       * <code>optional .Activtion activition = 10;</code>
       */
      public Builder setActivition(MsgNode1V1M5.Activtion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        activition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Activtion activition = 10;</code>
       */
      public Builder clearActivition() {
        bitField0_ = (bitField0_ & ~0x00000200);
        activition_ = MsgNode1V1M5.Activtion.ABP;
        onChanged();
        return this;
      }

      // optional .ClassType classType = 11;
      private MsgNode1V1M5.ClassType classType_ = MsgNode1V1M5.ClassType.CLASS_A;
      /**
       * <code>optional .ClassType classType = 11;</code>
       */
      public boolean hasClassType() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .ClassType classType = 11;</code>
       */
      public MsgNode1V1M5.ClassType getClassType() {
        return classType_;
      }
      /**
       * <code>optional .ClassType classType = 11;</code>
       */
      public Builder setClassType(MsgNode1V1M5.ClassType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        classType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ClassType classType = 11;</code>
       */
      public Builder clearClassType() {
        bitField0_ = (bitField0_ & ~0x00000400);
        classType_ = MsgNode1V1M5.ClassType.CLASS_A;
        onChanged();
        return this;
      }

      // optional uint32 delay = 12;
      private int delay_ ;
      /**
       * <code>optional uint32 delay = 12;</code>
       */
      public boolean hasDelay() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 delay = 12;</code>
       */
      public int getDelay() {
        return delay_;
      }
      /**
       * <code>optional uint32 delay = 12;</code>
       */
      public Builder setDelay(int value) {
        bitField0_ |= 0x00000800;
        delay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 delay = 12;</code>
       */
      public Builder clearDelay() {
        bitField0_ = (bitField0_ & ~0x00000800);
        delay_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 channelMask = 13;
      private java.util.List<Integer> channelMask_ = java.util.Collections.emptyList();
      private void ensureChannelMaskIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          channelMask_ = new java.util.ArrayList<Integer>(channelMask_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated uint32 channelMask = 13;</code>
       */
      public java.util.List<Integer>
          getChannelMaskList() {
        return java.util.Collections.unmodifiableList(channelMask_);
      }
      /**
       * <code>repeated uint32 channelMask = 13;</code>
       */
      public int getChannelMaskCount() {
        return channelMask_.size();
      }
      /**
       * <code>repeated uint32 channelMask = 13;</code>
       */
      public int getChannelMask(int index) {
        return channelMask_.get(index);
      }
      /**
       * <code>repeated uint32 channelMask = 13;</code>
       */
      public Builder setChannelMask(
          int index, int value) {
        ensureChannelMaskIsMutable();
        channelMask_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 channelMask = 13;</code>
       */
      public Builder addChannelMask(int value) {
        ensureChannelMaskIsMutable();
        channelMask_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 channelMask = 13;</code>
       */
      public Builder addAllChannelMask(
          Iterable<? extends Integer> values) {
        ensureChannelMaskIsMutable();
        super.addAll(values, channelMask_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 channelMask = 13;</code>
       */
      public Builder clearChannelMask() {
        channelMask_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // optional uint32 maxEIRP = 14;
      private int maxEIRP_ ;
      /**
       * <code>optional uint32 maxEIRP = 14;</code>
       */
      public boolean hasMaxEIRP() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 maxEIRP = 14;</code>
       */
      public int getMaxEIRP() {
        return maxEIRP_;
      }
      /**
       * <code>optional uint32 maxEIRP = 14;</code>
       */
      public Builder setMaxEIRP(int value) {
        bitField0_ |= 0x00002000;
        maxEIRP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 maxEIRP = 14;</code>
       */
      public Builder clearMaxEIRP() {
        bitField0_ = (bitField0_ & ~0x00002000);
        maxEIRP_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 sglStatus = 15;
      private int sglStatus_ ;
      /**
       * <code>optional uint32 sglStatus = 15;</code>
       */
      public boolean hasSglStatus() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 sglStatus = 15;</code>
       */
      public int getSglStatus() {
        return sglStatus_;
      }
      /**
       * <code>optional uint32 sglStatus = 15;</code>
       */
      public Builder setSglStatus(int value) {
        bitField0_ |= 0x00004000;
        sglStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sglStatus = 15;</code>
       */
      public Builder clearSglStatus() {
        bitField0_ = (bitField0_ & ~0x00004000);
        sglStatus_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 sglFrequency = 16;
      private int sglFrequency_ ;
      /**
       * <code>optional uint32 sglFrequency = 16;</code>
       */
      public boolean hasSglFrequency() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 sglFrequency = 16;</code>
       */
      public int getSglFrequency() {
        return sglFrequency_;
      }
      /**
       * <code>optional uint32 sglFrequency = 16;</code>
       */
      public Builder setSglFrequency(int value) {
        bitField0_ |= 0x00008000;
        sglFrequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sglFrequency = 16;</code>
       */
      public Builder clearSglFrequency() {
        bitField0_ = (bitField0_ & ~0x00008000);
        sglFrequency_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 sglDatarate = 17;
      private int sglDatarate_ ;
      /**
       * <code>optional uint32 sglDatarate = 17;</code>
       */
      public boolean hasSglDatarate() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 sglDatarate = 17;</code>
       */
      public int getSglDatarate() {
        return sglDatarate_;
      }
      /**
       * <code>optional uint32 sglDatarate = 17;</code>
       */
      public Builder setSglDatarate(int value) {
        bitField0_ |= 0x00010000;
        sglDatarate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sglDatarate = 17;</code>
       */
      public Builder clearSglDatarate() {
        bitField0_ = (bitField0_ & ~0x00010000);
        sglDatarate_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LoraParam)
    }

    static {
      defaultInstance = new LoraParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LoraParam)
  }

  public interface BleParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional float bleInterval = 1;
    /**
     * <code>optional float bleInterval = 1;</code>
     */
    boolean hasBleInterval();
    /**
     * <code>optional float bleInterval = 1;</code>
     */
    float getBleInterval();

    // optional sint32 bleTxp = 2;
    /**
     * <code>optional sint32 bleTxp = 2;</code>
     */
    boolean hasBleTxp();
    /**
     * <code>optional sint32 bleTxp = 2;</code>
     */
    int getBleTxp();

    // optional uint32 bleOnTime = 3;
    /**
     * <code>optional uint32 bleOnTime = 3;</code>
     */
    boolean hasBleOnTime();
    /**
     * <code>optional uint32 bleOnTime = 3;</code>
     */
    int getBleOnTime();

    // optional uint32 bleOffTime = 4;
    /**
     * <code>optional uint32 bleOffTime = 4;</code>
     */
    boolean hasBleOffTime();
    /**
     * <code>optional uint32 bleOffTime = 4;</code>
     */
    int getBleOffTime();

    // optional uint32 bleOnOff = 5;
    /**
     * <code>optional uint32 bleOnOff = 5;</code>
     */
    boolean hasBleOnOff();
    /**
     * <code>optional uint32 bleOnOff = 5;</code>
     */
    int getBleOnOff();
  }
  /**
   * Protobuf type {@code BleParam}
   */
  public static final class BleParam extends
      com.google.protobuf.GeneratedMessage
      implements BleParamOrBuilder {
    // Use BleParam.newBuilder() to construct.
    private BleParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BleParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BleParam defaultInstance;
    public static BleParam getDefaultInstance() {
      return defaultInstance;
    }

    public BleParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BleParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              bleInterval_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bleTxp_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bleOnTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              bleOffTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bleOnOff_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_BleParam_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_BleParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.BleParam.class, MsgNode1V1M5.BleParam.Builder.class);
    }

    public static com.google.protobuf.Parser<BleParam> PARSER =
        new com.google.protobuf.AbstractParser<BleParam>() {
      public BleParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BleParam(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<BleParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional float bleInterval = 1;
    public static final int BLEINTERVAL_FIELD_NUMBER = 1;
    private float bleInterval_;
    /**
     * <code>optional float bleInterval = 1;</code>
     */
    public boolean hasBleInterval() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float bleInterval = 1;</code>
     */
    public float getBleInterval() {
      return bleInterval_;
    }

    // optional sint32 bleTxp = 2;
    public static final int BLETXP_FIELD_NUMBER = 2;
    private int bleTxp_;
    /**
     * <code>optional sint32 bleTxp = 2;</code>
     */
    public boolean hasBleTxp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 bleTxp = 2;</code>
     */
    public int getBleTxp() {
      return bleTxp_;
    }

    // optional uint32 bleOnTime = 3;
    public static final int BLEONTIME_FIELD_NUMBER = 3;
    private int bleOnTime_;
    /**
     * <code>optional uint32 bleOnTime = 3;</code>
     */
    public boolean hasBleOnTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 bleOnTime = 3;</code>
     */
    public int getBleOnTime() {
      return bleOnTime_;
    }

    // optional uint32 bleOffTime = 4;
    public static final int BLEOFFTIME_FIELD_NUMBER = 4;
    private int bleOffTime_;
    /**
     * <code>optional uint32 bleOffTime = 4;</code>
     */
    public boolean hasBleOffTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 bleOffTime = 4;</code>
     */
    public int getBleOffTime() {
      return bleOffTime_;
    }

    // optional uint32 bleOnOff = 5;
    public static final int BLEONOFF_FIELD_NUMBER = 5;
    private int bleOnOff_;
    /**
     * <code>optional uint32 bleOnOff = 5;</code>
     */
    public boolean hasBleOnOff() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 bleOnOff = 5;</code>
     */
    public int getBleOnOff() {
      return bleOnOff_;
    }

    private void initFields() {
      bleInterval_ = 0F;
      bleTxp_ = 0;
      bleOnTime_ = 0;
      bleOffTime_ = 0;
      bleOnOff_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, bleInterval_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, bleTxp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, bleOnTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, bleOffTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, bleOnOff_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, bleInterval_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, bleTxp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, bleOnTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, bleOffTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, bleOnOff_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.BleParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.BleParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.BleParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.BleParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.BleParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.BleParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.BleParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.BleParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.BleParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.BleParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.BleParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BleParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.BleParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_BleParam_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_BleParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.BleParam.class, MsgNode1V1M5.BleParam.Builder.class);
      }

      // Construct using MsgNode1V1M5.BleParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bleInterval_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        bleTxp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bleOnTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        bleOffTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bleOnOff_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_BleParam_descriptor;
      }

      public MsgNode1V1M5.BleParam getDefaultInstanceForType() {
        return MsgNode1V1M5.BleParam.getDefaultInstance();
      }

      public MsgNode1V1M5.BleParam build() {
        MsgNode1V1M5.BleParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.BleParam buildPartial() {
        MsgNode1V1M5.BleParam result = new MsgNode1V1M5.BleParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bleInterval_ = bleInterval_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bleTxp_ = bleTxp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bleOnTime_ = bleOnTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bleOffTime_ = bleOffTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bleOnOff_ = bleOnOff_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.BleParam) {
          return mergeFrom((MsgNode1V1M5.BleParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.BleParam other) {
        if (other == MsgNode1V1M5.BleParam.getDefaultInstance()) return this;
        if (other.hasBleInterval()) {
          setBleInterval(other.getBleInterval());
        }
        if (other.hasBleTxp()) {
          setBleTxp(other.getBleTxp());
        }
        if (other.hasBleOnTime()) {
          setBleOnTime(other.getBleOnTime());
        }
        if (other.hasBleOffTime()) {
          setBleOffTime(other.getBleOffTime());
        }
        if (other.hasBleOnOff()) {
          setBleOnOff(other.getBleOnOff());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.BleParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.BleParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional float bleInterval = 1;
      private float bleInterval_ ;
      /**
       * <code>optional float bleInterval = 1;</code>
       */
      public boolean hasBleInterval() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float bleInterval = 1;</code>
       */
      public float getBleInterval() {
        return bleInterval_;
      }
      /**
       * <code>optional float bleInterval = 1;</code>
       */
      public Builder setBleInterval(float value) {
        bitField0_ |= 0x00000001;
        bleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float bleInterval = 1;</code>
       */
      public Builder clearBleInterval() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bleInterval_ = 0F;
        onChanged();
        return this;
      }

      // optional sint32 bleTxp = 2;
      private int bleTxp_ ;
      /**
       * <code>optional sint32 bleTxp = 2;</code>
       */
      public boolean hasBleTxp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 bleTxp = 2;</code>
       */
      public int getBleTxp() {
        return bleTxp_;
      }
      /**
       * <code>optional sint32 bleTxp = 2;</code>
       */
      public Builder setBleTxp(int value) {
        bitField0_ |= 0x00000002;
        bleTxp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 bleTxp = 2;</code>
       */
      public Builder clearBleTxp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bleTxp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 bleOnTime = 3;
      private int bleOnTime_ ;
      /**
       * <code>optional uint32 bleOnTime = 3;</code>
       */
      public boolean hasBleOnTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 bleOnTime = 3;</code>
       */
      public int getBleOnTime() {
        return bleOnTime_;
      }
      /**
       * <code>optional uint32 bleOnTime = 3;</code>
       */
      public Builder setBleOnTime(int value) {
        bitField0_ |= 0x00000004;
        bleOnTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bleOnTime = 3;</code>
       */
      public Builder clearBleOnTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bleOnTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 bleOffTime = 4;
      private int bleOffTime_ ;
      /**
       * <code>optional uint32 bleOffTime = 4;</code>
       */
      public boolean hasBleOffTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 bleOffTime = 4;</code>
       */
      public int getBleOffTime() {
        return bleOffTime_;
      }
      /**
       * <code>optional uint32 bleOffTime = 4;</code>
       */
      public Builder setBleOffTime(int value) {
        bitField0_ |= 0x00000008;
        bleOffTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bleOffTime = 4;</code>
       */
      public Builder clearBleOffTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bleOffTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 bleOnOff = 5;
      private int bleOnOff_ ;
      /**
       * <code>optional uint32 bleOnOff = 5;</code>
       */
      public boolean hasBleOnOff() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 bleOnOff = 5;</code>
       */
      public int getBleOnOff() {
        return bleOnOff_;
      }
      /**
       * <code>optional uint32 bleOnOff = 5;</code>
       */
      public Builder setBleOnOff(int value) {
        bitField0_ |= 0x00000010;
        bleOnOff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bleOnOff = 5;</code>
       */
      public Builder clearBleOnOff() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bleOnOff_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BleParam)
    }

    static {
      defaultInstance = new BleParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BleParam)
  }

  public interface SensorDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional float data = 1;
    /**
     * <code>optional float data = 1;</code>
     */
    boolean hasData();
    /**
     * <code>optional float data = 1;</code>
     */
    float getData();

    // optional float alarmHigh = 2;
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    boolean hasAlarmHigh();
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    float getAlarmHigh();

    // optional float alarmLow = 3;
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    boolean hasAlarmLow();
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    float getAlarmLow();

    // optional uint32 calibration = 4;
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    boolean hasCalibration();
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    int getCalibration();

    // optional .SensorError error = 5;
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    boolean hasError();
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    MsgNode1V1M5.SensorError getError();

    // optional uint32 status = 6;
    /**
     * <code>optional uint32 status = 6;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 6;</code>
     */
    int getStatus();

    // optional float alarmStepHigh = 7;
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    boolean hasAlarmStepHigh();
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    float getAlarmStepHigh();

    // optional float alarmStepLow = 8;
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    boolean hasAlarmStepLow();
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    float getAlarmStepLow();
  }
  /**
   * Protobuf type {@code SensorData}
   */
  public static final class SensorData extends
      com.google.protobuf.GeneratedMessage
      implements SensorDataOrBuilder {
    // Use SensorData.newBuilder() to construct.
    private SensorData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorData defaultInstance;
    public static SensorData getDefaultInstance() {
      return defaultInstance;
    }

    public SensorData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              data_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              alarmHigh_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              alarmLow_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              calibration_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SensorError value = MsgNode1V1M5.SensorError.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                error_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              status_ = input.readUInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              alarmStepHigh_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              alarmStepLow_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_SensorData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_SensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.SensorData.class, MsgNode1V1M5.SensorData.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorData> PARSER =
        new com.google.protobuf.AbstractParser<SensorData>() {
      public SensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorData(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<SensorData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional float data = 1;
    public static final int DATA_FIELD_NUMBER = 1;
    private float data_;
    /**
     * <code>optional float data = 1;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float data = 1;</code>
     */
    public float getData() {
      return data_;
    }

    // optional float alarmHigh = 2;
    public static final int ALARMHIGH_FIELD_NUMBER = 2;
    private float alarmHigh_;
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    public boolean hasAlarmHigh() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    public float getAlarmHigh() {
      return alarmHigh_;
    }

    // optional float alarmLow = 3;
    public static final int ALARMLOW_FIELD_NUMBER = 3;
    private float alarmLow_;
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    public boolean hasAlarmLow() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    public float getAlarmLow() {
      return alarmLow_;
    }

    // optional uint32 calibration = 4;
    public static final int CALIBRATION_FIELD_NUMBER = 4;
    private int calibration_;
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    public boolean hasCalibration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    public int getCalibration() {
      return calibration_;
    }

    // optional .SensorError error = 5;
    public static final int ERROR_FIELD_NUMBER = 5;
    private MsgNode1V1M5.SensorError error_;
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    public MsgNode1V1M5.SensorError getError() {
      return error_;
    }

    // optional uint32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>optional uint32 status = 6;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 status = 6;</code>
     */
    public int getStatus() {
      return status_;
    }

    // optional float alarmStepHigh = 7;
    public static final int ALARMSTEPHIGH_FIELD_NUMBER = 7;
    private float alarmStepHigh_;
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    public boolean hasAlarmStepHigh() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    public float getAlarmStepHigh() {
      return alarmStepHigh_;
    }

    // optional float alarmStepLow = 8;
    public static final int ALARMSTEPLOW_FIELD_NUMBER = 8;
    private float alarmStepLow_;
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    public boolean hasAlarmStepLow() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    public float getAlarmStepLow() {
      return alarmStepLow_;
    }

    private void initFields() {
      data_ = 0F;
      alarmHigh_ = 0F;
      alarmLow_ = 0F;
      calibration_ = 0;
      error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      status_ = 0;
      alarmStepHigh_ = 0F;
      alarmStepLow_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, alarmHigh_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, alarmLow_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, calibration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, error_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, alarmStepLow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, alarmHigh_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, alarmLow_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, calibration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, error_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, alarmStepLow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.SensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.SensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.SensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.SensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.SensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.SensorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.SensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_SensorData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_SensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.SensorData.class, MsgNode1V1M5.SensorData.Builder.class);
      }

      // Construct using MsgNode1V1M5.SensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        data_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        alarmHigh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmLow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        calibration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        alarmStepHigh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepLow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_SensorData_descriptor;
      }

      public MsgNode1V1M5.SensorData getDefaultInstanceForType() {
        return MsgNode1V1M5.SensorData.getDefaultInstance();
      }

      public MsgNode1V1M5.SensorData build() {
        MsgNode1V1M5.SensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.SensorData buildPartial() {
        MsgNode1V1M5.SensorData result = new MsgNode1V1M5.SensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.alarmHigh_ = alarmHigh_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.alarmLow_ = alarmLow_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.calibration_ = calibration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.alarmStepHigh_ = alarmStepHigh_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.alarmStepLow_ = alarmStepLow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.SensorData) {
          return mergeFrom((MsgNode1V1M5.SensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.SensorData other) {
        if (other == MsgNode1V1M5.SensorData.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasAlarmHigh()) {
          setAlarmHigh(other.getAlarmHigh());
        }
        if (other.hasAlarmLow()) {
          setAlarmLow(other.getAlarmLow());
        }
        if (other.hasCalibration()) {
          setCalibration(other.getCalibration());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAlarmStepHigh()) {
          setAlarmStepHigh(other.getAlarmStepHigh());
        }
        if (other.hasAlarmStepLow()) {
          setAlarmStepLow(other.getAlarmStepLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.SensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.SensorData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional float data = 1;
      private float data_ ;
      /**
       * <code>optional float data = 1;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float data = 1;</code>
       */
      public float getData() {
        return data_;
      }
      /**
       * <code>optional float data = 1;</code>
       */
      public Builder setData(float value) {
        bitField0_ |= 0x00000001;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float data = 1;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmHigh = 2;
      private float alarmHigh_ ;
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public boolean hasAlarmHigh() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public float getAlarmHigh() {
        return alarmHigh_;
      }
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public Builder setAlarmHigh(float value) {
        bitField0_ |= 0x00000002;
        alarmHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public Builder clearAlarmHigh() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmHigh_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmLow = 3;
      private float alarmLow_ ;
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public boolean hasAlarmLow() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public float getAlarmLow() {
        return alarmLow_;
      }
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public Builder setAlarmLow(float value) {
        bitField0_ |= 0x00000004;
        alarmLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public Builder clearAlarmLow() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alarmLow_ = 0F;
        onChanged();
        return this;
      }

      // optional uint32 calibration = 4;
      private int calibration_ ;
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public boolean hasCalibration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public int getCalibration() {
        return calibration_;
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public Builder setCalibration(int value) {
        bitField0_ |= 0x00000008;
        calibration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public Builder clearCalibration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calibration_ = 0;
        onChanged();
        return this;
      }

      // optional .SensorError error = 5;
      private MsgNode1V1M5.SensorError error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public MsgNode1V1M5.SensorError getError() {
        return error_;
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public Builder setError(MsgNode1V1M5.SensorError value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000010);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        onChanged();
        return this;
      }

      // optional uint32 status = 6;
      private int status_ ;
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional float alarmStepHigh = 7;
      private float alarmStepHigh_ ;
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public boolean hasAlarmStepHigh() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public float getAlarmStepHigh() {
        return alarmStepHigh_;
      }
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public Builder setAlarmStepHigh(float value) {
        bitField0_ |= 0x00000040;
        alarmStepHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public Builder clearAlarmStepHigh() {
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepHigh_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmStepLow = 8;
      private float alarmStepLow_ ;
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public boolean hasAlarmStepLow() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public float getAlarmStepLow() {
        return alarmStepLow_;
      }
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public Builder setAlarmStepLow(float value) {
        bitField0_ |= 0x00000080;
        alarmStepLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public Builder clearAlarmStepLow() {
        bitField0_ = (bitField0_ & ~0x00000080);
        alarmStepLow_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SensorData)
    }

    static {
      defaultInstance = new SensorData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SensorData)
  }

  public interface SensorDataIntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .SensorType type = 1;
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    MsgNode1V1M5.SensorType getType();

    // optional sint32 data = 2;
    /**
     * <code>optional sint32 data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional sint32 data = 2;</code>
     */
    int getData();

    // optional sint32 alarmHigh = 3;
    /**
     * <code>optional sint32 alarmHigh = 3;</code>
     */
    boolean hasAlarmHigh();
    /**
     * <code>optional sint32 alarmHigh = 3;</code>
     */
    int getAlarmHigh();

    // optional sint32 alarmLow = 4;
    /**
     * <code>optional sint32 alarmLow = 4;</code>
     */
    boolean hasAlarmLow();
    /**
     * <code>optional sint32 alarmLow = 4;</code>
     */
    int getAlarmLow();

    // optional sint32 calibration = 5;
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    boolean hasCalibration();
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    int getCalibration();

    // optional .SensorError error = 6;
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    boolean hasError();
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    MsgNode1V1M5.SensorError getError();

    // optional uint32 status = 7;
    /**
     * <code>optional uint32 status = 7;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 7;</code>
     */
    int getStatus();

    // optional sint32 alarmStepHigh = 8;
    /**
     * <code>optional sint32 alarmStepHigh = 8;</code>
     */
    boolean hasAlarmStepHigh();
    /**
     * <code>optional sint32 alarmStepHigh = 8;</code>
     */
    int getAlarmStepHigh();

    // optional sint32 alarmStepLow = 9;
    /**
     * <code>optional sint32 alarmStepLow = 9;</code>
     */
    boolean hasAlarmStepLow();
    /**
     * <code>optional sint32 alarmStepLow = 9;</code>
     */
    int getAlarmStepLow();
  }
  /**
   * Protobuf type {@code SensorDataInt}
   */
  public static final class SensorDataInt extends
      com.google.protobuf.GeneratedMessage
      implements SensorDataIntOrBuilder {
    // Use SensorDataInt.newBuilder() to construct.
    private SensorDataInt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorDataInt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorDataInt defaultInstance;
    public static SensorDataInt getDefaultInstance() {
      return defaultInstance;
    }

    public SensorDataInt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorDataInt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SensorType value = MsgNode1V1M5.SensorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              data_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              alarmHigh_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              alarmLow_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              calibration_ = input.readSInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SensorError value = MsgNode1V1M5.SensorError.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                error_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              status_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              alarmStepHigh_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              alarmStepLow_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_SensorDataInt_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_SensorDataInt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.SensorDataInt.class, MsgNode1V1M5.SensorDataInt.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorDataInt> PARSER =
        new com.google.protobuf.AbstractParser<SensorDataInt>() {
      public SensorDataInt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorDataInt(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<SensorDataInt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .SensorType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private MsgNode1V1M5.SensorType type_;
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    public MsgNode1V1M5.SensorType getType() {
      return type_;
    }

    // optional sint32 data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private int data_;
    /**
     * <code>optional sint32 data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 data = 2;</code>
     */
    public int getData() {
      return data_;
    }

    // optional sint32 alarmHigh = 3;
    public static final int ALARMHIGH_FIELD_NUMBER = 3;
    private int alarmHigh_;
    /**
     * <code>optional sint32 alarmHigh = 3;</code>
     */
    public boolean hasAlarmHigh() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 alarmHigh = 3;</code>
     */
    public int getAlarmHigh() {
      return alarmHigh_;
    }

    // optional sint32 alarmLow = 4;
    public static final int ALARMLOW_FIELD_NUMBER = 4;
    private int alarmLow_;
    /**
     * <code>optional sint32 alarmLow = 4;</code>
     */
    public boolean hasAlarmLow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 alarmLow = 4;</code>
     */
    public int getAlarmLow() {
      return alarmLow_;
    }

    // optional sint32 calibration = 5;
    public static final int CALIBRATION_FIELD_NUMBER = 5;
    private int calibration_;
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    public boolean hasCalibration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    public int getCalibration() {
      return calibration_;
    }

    // optional .SensorError error = 6;
    public static final int ERROR_FIELD_NUMBER = 6;
    private MsgNode1V1M5.SensorError error_;
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    public MsgNode1V1M5.SensorError getError() {
      return error_;
    }

    // optional uint32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <code>optional uint32 status = 7;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 status = 7;</code>
     */
    public int getStatus() {
      return status_;
    }

    // optional sint32 alarmStepHigh = 8;
    public static final int ALARMSTEPHIGH_FIELD_NUMBER = 8;
    private int alarmStepHigh_;
    /**
     * <code>optional sint32 alarmStepHigh = 8;</code>
     */
    public boolean hasAlarmStepHigh() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 alarmStepHigh = 8;</code>
     */
    public int getAlarmStepHigh() {
      return alarmStepHigh_;
    }

    // optional sint32 alarmStepLow = 9;
    public static final int ALARMSTEPLOW_FIELD_NUMBER = 9;
    private int alarmStepLow_;
    /**
     * <code>optional sint32 alarmStepLow = 9;</code>
     */
    public boolean hasAlarmStepLow() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint32 alarmStepLow = 9;</code>
     */
    public int getAlarmStepLow() {
      return alarmStepLow_;
    }

    private void initFields() {
      type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
      data_ = 0;
      alarmHigh_ = 0;
      alarmLow_ = 0;
      calibration_ = 0;
      error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      status_ = 0;
      alarmStepHigh_ = 0;
      alarmStepLow_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, alarmHigh_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, alarmLow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, calibration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, error_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(9, alarmStepLow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, alarmHigh_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, alarmLow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, calibration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, error_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, alarmStepLow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.SensorDataInt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.SensorDataInt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataInt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.SensorDataInt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataInt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.SensorDataInt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataInt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.SensorDataInt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataInt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.SensorDataInt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.SensorDataInt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SensorDataInt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.SensorDataIntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_SensorDataInt_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_SensorDataInt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.SensorDataInt.class, MsgNode1V1M5.SensorDataInt.Builder.class);
      }

      // Construct using MsgNode1V1M5.SensorDataInt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmHigh_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        alarmLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        calibration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepHigh_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        alarmStepLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_SensorDataInt_descriptor;
      }

      public MsgNode1V1M5.SensorDataInt getDefaultInstanceForType() {
        return MsgNode1V1M5.SensorDataInt.getDefaultInstance();
      }

      public MsgNode1V1M5.SensorDataInt build() {
        MsgNode1V1M5.SensorDataInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.SensorDataInt buildPartial() {
        MsgNode1V1M5.SensorDataInt result = new MsgNode1V1M5.SensorDataInt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.alarmHigh_ = alarmHigh_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.alarmLow_ = alarmLow_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.calibration_ = calibration_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.alarmStepHigh_ = alarmStepHigh_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.alarmStepLow_ = alarmStepLow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.SensorDataInt) {
          return mergeFrom((MsgNode1V1M5.SensorDataInt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.SensorDataInt other) {
        if (other == MsgNode1V1M5.SensorDataInt.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasAlarmHigh()) {
          setAlarmHigh(other.getAlarmHigh());
        }
        if (other.hasAlarmLow()) {
          setAlarmLow(other.getAlarmLow());
        }
        if (other.hasCalibration()) {
          setCalibration(other.getCalibration());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAlarmStepHigh()) {
          setAlarmStepHigh(other.getAlarmStepHigh());
        }
        if (other.hasAlarmStepLow()) {
          setAlarmStepLow(other.getAlarmStepLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.SensorDataInt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.SensorDataInt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .SensorType type = 1;
      private MsgNode1V1M5.SensorType type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public MsgNode1V1M5.SensorType getType() {
        return type_;
      }
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public Builder setType(MsgNode1V1M5.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
        onChanged();
        return this;
      }

      // optional sint32 data = 2;
      private int data_ ;
      /**
       * <code>optional sint32 data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 data = 2;</code>
       */
      public int getData() {
        return data_;
      }
      /**
       * <code>optional sint32 data = 2;</code>
       */
      public Builder setData(int value) {
        bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 data = 2;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 alarmHigh = 3;
      private int alarmHigh_ ;
      /**
       * <code>optional sint32 alarmHigh = 3;</code>
       */
      public boolean hasAlarmHigh() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 alarmHigh = 3;</code>
       */
      public int getAlarmHigh() {
        return alarmHigh_;
      }
      /**
       * <code>optional sint32 alarmHigh = 3;</code>
       */
      public Builder setAlarmHigh(int value) {
        bitField0_ |= 0x00000004;
        alarmHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmHigh = 3;</code>
       */
      public Builder clearAlarmHigh() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alarmHigh_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 alarmLow = 4;
      private int alarmLow_ ;
      /**
       * <code>optional sint32 alarmLow = 4;</code>
       */
      public boolean hasAlarmLow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 alarmLow = 4;</code>
       */
      public int getAlarmLow() {
        return alarmLow_;
      }
      /**
       * <code>optional sint32 alarmLow = 4;</code>
       */
      public Builder setAlarmLow(int value) {
        bitField0_ |= 0x00000008;
        alarmLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmLow = 4;</code>
       */
      public Builder clearAlarmLow() {
        bitField0_ = (bitField0_ & ~0x00000008);
        alarmLow_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 calibration = 5;
      private int calibration_ ;
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public boolean hasCalibration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public int getCalibration() {
        return calibration_;
      }
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public Builder setCalibration(int value) {
        bitField0_ |= 0x00000010;
        calibration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public Builder clearCalibration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        calibration_ = 0;
        onChanged();
        return this;
      }

      // optional .SensorError error = 6;
      private MsgNode1V1M5.SensorError error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public MsgNode1V1M5.SensorError getError() {
        return error_;
      }
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public Builder setError(MsgNode1V1M5.SensorError value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000020);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        onChanged();
        return this;
      }

      // optional uint32 status = 7;
      private int status_ ;
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000040;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 alarmStepHigh = 8;
      private int alarmStepHigh_ ;
      /**
       * <code>optional sint32 alarmStepHigh = 8;</code>
       */
      public boolean hasAlarmStepHigh() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 alarmStepHigh = 8;</code>
       */
      public int getAlarmStepHigh() {
        return alarmStepHigh_;
      }
      /**
       * <code>optional sint32 alarmStepHigh = 8;</code>
       */
      public Builder setAlarmStepHigh(int value) {
        bitField0_ |= 0x00000080;
        alarmStepHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmStepHigh = 8;</code>
       */
      public Builder clearAlarmStepHigh() {
        bitField0_ = (bitField0_ & ~0x00000080);
        alarmStepHigh_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 alarmStepLow = 9;
      private int alarmStepLow_ ;
      /**
       * <code>optional sint32 alarmStepLow = 9;</code>
       */
      public boolean hasAlarmStepLow() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint32 alarmStepLow = 9;</code>
       */
      public int getAlarmStepLow() {
        return alarmStepLow_;
      }
      /**
       * <code>optional sint32 alarmStepLow = 9;</code>
       */
      public Builder setAlarmStepLow(int value) {
        bitField0_ |= 0x00000100;
        alarmStepLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmStepLow = 9;</code>
       */
      public Builder clearAlarmStepLow() {
        bitField0_ = (bitField0_ & ~0x00000100);
        alarmStepLow_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SensorDataInt)
    }

    static {
      defaultInstance = new SensorDataInt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SensorDataInt)
  }

  public interface SensorDataFloatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .SensorType type = 1;
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    MsgNode1V1M5.SensorType getType();

    // optional float data = 2;
    /**
     * <code>optional float data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional float data = 2;</code>
     */
    float getData();

    // optional float alarmHigh = 3;
    /**
     * <code>optional float alarmHigh = 3;</code>
     */
    boolean hasAlarmHigh();
    /**
     * <code>optional float alarmHigh = 3;</code>
     */
    float getAlarmHigh();

    // optional float alarmLow = 4;
    /**
     * <code>optional float alarmLow = 4;</code>
     */
    boolean hasAlarmLow();
    /**
     * <code>optional float alarmLow = 4;</code>
     */
    float getAlarmLow();

    // optional sint32 calibration = 5;
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    boolean hasCalibration();
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    int getCalibration();

    // optional .SensorError error = 6;
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    boolean hasError();
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    MsgNode1V1M5.SensorError getError();

    // optional uint32 status = 7;
    /**
     * <code>optional uint32 status = 7;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 7;</code>
     */
    int getStatus();

    // optional float alarmStepHigh = 8;
    /**
     * <code>optional float alarmStepHigh = 8;</code>
     */
    boolean hasAlarmStepHigh();
    /**
     * <code>optional float alarmStepHigh = 8;</code>
     */
    float getAlarmStepHigh();

    // optional float alarmStepLow = 9;
    /**
     * <code>optional float alarmStepLow = 9;</code>
     */
    boolean hasAlarmStepLow();
    /**
     * <code>optional float alarmStepLow = 9;</code>
     */
    float getAlarmStepLow();
  }
  /**
   * Protobuf type {@code SensorDataFloat}
   */
  public static final class SensorDataFloat extends
      com.google.protobuf.GeneratedMessage
      implements SensorDataFloatOrBuilder {
    // Use SensorDataFloat.newBuilder() to construct.
    private SensorDataFloat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorDataFloat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorDataFloat defaultInstance;
    public static SensorDataFloat getDefaultInstance() {
      return defaultInstance;
    }

    public SensorDataFloat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorDataFloat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SensorType value = MsgNode1V1M5.SensorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              data_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              alarmHigh_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              alarmLow_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              calibration_ = input.readSInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SensorError value = MsgNode1V1M5.SensorError.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                error_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              status_ = input.readUInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              alarmStepHigh_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              alarmStepLow_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_SensorDataFloat_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_SensorDataFloat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.SensorDataFloat.class, MsgNode1V1M5.SensorDataFloat.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorDataFloat> PARSER =
        new com.google.protobuf.AbstractParser<SensorDataFloat>() {
      public SensorDataFloat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorDataFloat(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<SensorDataFloat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .SensorType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private MsgNode1V1M5.SensorType type_;
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SensorType type = 1;</code>
     */
    public MsgNode1V1M5.SensorType getType() {
      return type_;
    }

    // optional float data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private float data_;
    /**
     * <code>optional float data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float data = 2;</code>
     */
    public float getData() {
      return data_;
    }

    // optional float alarmHigh = 3;
    public static final int ALARMHIGH_FIELD_NUMBER = 3;
    private float alarmHigh_;
    /**
     * <code>optional float alarmHigh = 3;</code>
     */
    public boolean hasAlarmHigh() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float alarmHigh = 3;</code>
     */
    public float getAlarmHigh() {
      return alarmHigh_;
    }

    // optional float alarmLow = 4;
    public static final int ALARMLOW_FIELD_NUMBER = 4;
    private float alarmLow_;
    /**
     * <code>optional float alarmLow = 4;</code>
     */
    public boolean hasAlarmLow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float alarmLow = 4;</code>
     */
    public float getAlarmLow() {
      return alarmLow_;
    }

    // optional sint32 calibration = 5;
    public static final int CALIBRATION_FIELD_NUMBER = 5;
    private int calibration_;
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    public boolean hasCalibration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 calibration = 5;</code>
     */
    public int getCalibration() {
      return calibration_;
    }

    // optional .SensorError error = 6;
    public static final int ERROR_FIELD_NUMBER = 6;
    private MsgNode1V1M5.SensorError error_;
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .SensorError error = 6;</code>
     */
    public MsgNode1V1M5.SensorError getError() {
      return error_;
    }

    // optional uint32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <code>optional uint32 status = 7;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 status = 7;</code>
     */
    public int getStatus() {
      return status_;
    }

    // optional float alarmStepHigh = 8;
    public static final int ALARMSTEPHIGH_FIELD_NUMBER = 8;
    private float alarmStepHigh_;
    /**
     * <code>optional float alarmStepHigh = 8;</code>
     */
    public boolean hasAlarmStepHigh() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float alarmStepHigh = 8;</code>
     */
    public float getAlarmStepHigh() {
      return alarmStepHigh_;
    }

    // optional float alarmStepLow = 9;
    public static final int ALARMSTEPLOW_FIELD_NUMBER = 9;
    private float alarmStepLow_;
    /**
     * <code>optional float alarmStepLow = 9;</code>
     */
    public boolean hasAlarmStepLow() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float alarmStepLow = 9;</code>
     */
    public float getAlarmStepLow() {
      return alarmStepLow_;
    }

    private void initFields() {
      type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
      data_ = 0F;
      alarmHigh_ = 0F;
      alarmLow_ = 0F;
      calibration_ = 0;
      error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      status_ = 0;
      alarmStepHigh_ = 0F;
      alarmStepLow_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, alarmHigh_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, alarmLow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, calibration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, error_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, alarmStepLow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, alarmHigh_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, alarmLow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, calibration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, error_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, alarmStepLow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.SensorDataFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.SensorDataFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.SensorDataFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.SensorDataFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.SensorDataFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.SensorDataFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.SensorDataFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.SensorDataFloat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SensorDataFloat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.SensorDataFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_SensorDataFloat_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_SensorDataFloat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.SensorDataFloat.class, MsgNode1V1M5.SensorDataFloat.Builder.class);
      }

      // Construct using MsgNode1V1M5.SensorDataFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmHigh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        alarmLow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        calibration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepHigh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        alarmStepLow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_SensorDataFloat_descriptor;
      }

      public MsgNode1V1M5.SensorDataFloat getDefaultInstanceForType() {
        return MsgNode1V1M5.SensorDataFloat.getDefaultInstance();
      }

      public MsgNode1V1M5.SensorDataFloat build() {
        MsgNode1V1M5.SensorDataFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.SensorDataFloat buildPartial() {
        MsgNode1V1M5.SensorDataFloat result = new MsgNode1V1M5.SensorDataFloat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.alarmHigh_ = alarmHigh_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.alarmLow_ = alarmLow_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.calibration_ = calibration_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.alarmStepHigh_ = alarmStepHigh_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.alarmStepLow_ = alarmStepLow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.SensorDataFloat) {
          return mergeFrom((MsgNode1V1M5.SensorDataFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.SensorDataFloat other) {
        if (other == MsgNode1V1M5.SensorDataFloat.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasAlarmHigh()) {
          setAlarmHigh(other.getAlarmHigh());
        }
        if (other.hasAlarmLow()) {
          setAlarmLow(other.getAlarmLow());
        }
        if (other.hasCalibration()) {
          setCalibration(other.getCalibration());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAlarmStepHigh()) {
          setAlarmStepHigh(other.getAlarmStepHigh());
        }
        if (other.hasAlarmStepLow()) {
          setAlarmStepLow(other.getAlarmStepLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.SensorDataFloat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.SensorDataFloat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .SensorType type = 1;
      private MsgNode1V1M5.SensorType type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public MsgNode1V1M5.SensorType getType() {
        return type_;
      }
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public Builder setType(MsgNode1V1M5.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SensorType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = MsgNode1V1M5.SensorType.SENSOR_TYPE_TEMP;
        onChanged();
        return this;
      }

      // optional float data = 2;
      private float data_ ;
      /**
       * <code>optional float data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float data = 2;</code>
       */
      public float getData() {
        return data_;
      }
      /**
       * <code>optional float data = 2;</code>
       */
      public Builder setData(float value) {
        bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float data = 2;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmHigh = 3;
      private float alarmHigh_ ;
      /**
       * <code>optional float alarmHigh = 3;</code>
       */
      public boolean hasAlarmHigh() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float alarmHigh = 3;</code>
       */
      public float getAlarmHigh() {
        return alarmHigh_;
      }
      /**
       * <code>optional float alarmHigh = 3;</code>
       */
      public Builder setAlarmHigh(float value) {
        bitField0_ |= 0x00000004;
        alarmHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmHigh = 3;</code>
       */
      public Builder clearAlarmHigh() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alarmHigh_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmLow = 4;
      private float alarmLow_ ;
      /**
       * <code>optional float alarmLow = 4;</code>
       */
      public boolean hasAlarmLow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float alarmLow = 4;</code>
       */
      public float getAlarmLow() {
        return alarmLow_;
      }
      /**
       * <code>optional float alarmLow = 4;</code>
       */
      public Builder setAlarmLow(float value) {
        bitField0_ |= 0x00000008;
        alarmLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmLow = 4;</code>
       */
      public Builder clearAlarmLow() {
        bitField0_ = (bitField0_ & ~0x00000008);
        alarmLow_ = 0F;
        onChanged();
        return this;
      }

      // optional sint32 calibration = 5;
      private int calibration_ ;
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public boolean hasCalibration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public int getCalibration() {
        return calibration_;
      }
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public Builder setCalibration(int value) {
        bitField0_ |= 0x00000010;
        calibration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 calibration = 5;</code>
       */
      public Builder clearCalibration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        calibration_ = 0;
        onChanged();
        return this;
      }

      // optional .SensorError error = 6;
      private MsgNode1V1M5.SensorError error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public MsgNode1V1M5.SensorError getError() {
        return error_;
      }
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public Builder setError(MsgNode1V1M5.SensorError value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SensorError error = 6;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000020);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        onChanged();
        return this;
      }

      // optional uint32 status = 7;
      private int status_ ;
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000040;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 7;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional float alarmStepHigh = 8;
      private float alarmStepHigh_ ;
      /**
       * <code>optional float alarmStepHigh = 8;</code>
       */
      public boolean hasAlarmStepHigh() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float alarmStepHigh = 8;</code>
       */
      public float getAlarmStepHigh() {
        return alarmStepHigh_;
      }
      /**
       * <code>optional float alarmStepHigh = 8;</code>
       */
      public Builder setAlarmStepHigh(float value) {
        bitField0_ |= 0x00000080;
        alarmStepHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmStepHigh = 8;</code>
       */
      public Builder clearAlarmStepHigh() {
        bitField0_ = (bitField0_ & ~0x00000080);
        alarmStepHigh_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmStepLow = 9;
      private float alarmStepLow_ ;
      /**
       * <code>optional float alarmStepLow = 9;</code>
       */
      public boolean hasAlarmStepLow() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float alarmStepLow = 9;</code>
       */
      public float getAlarmStepLow() {
        return alarmStepLow_;
      }
      /**
       * <code>optional float alarmStepLow = 9;</code>
       */
      public Builder setAlarmStepLow(float value) {
        bitField0_ |= 0x00000100;
        alarmStepLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmStepLow = 9;</code>
       */
      public Builder clearAlarmStepLow() {
        bitField0_ = (bitField0_ & ~0x00000100);
        alarmStepLow_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SensorDataFloat)
    }

    static {
      defaultInstance = new SensorDataFloat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SensorDataFloat)
  }

  public interface MultiSensorDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated float data = 1;
    /**
     * <code>repeated float data = 1;</code>
     */
    java.util.List<Float> getDataList();
    /**
     * <code>repeated float data = 1;</code>
     */
    int getDataCount();
    /**
     * <code>repeated float data = 1;</code>
     */
    float getData(int index);

    // optional float alarmHigh = 2;
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    boolean hasAlarmHigh();
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    float getAlarmHigh();

    // optional float alarmLow = 3;
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    boolean hasAlarmLow();
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    float getAlarmLow();

    // optional uint32 calibration = 4;
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    boolean hasCalibration();
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    int getCalibration();

    // optional .SensorError error = 5;
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    boolean hasError();
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    MsgNode1V1M5.SensorError getError();

    // optional uint32 status = 6;
    /**
     * <code>optional uint32 status = 6;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 6;</code>
     */
    int getStatus();

    // optional float alarmStepHigh = 7;
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    boolean hasAlarmStepHigh();
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    float getAlarmStepHigh();

    // optional float alarmStepLow = 8;
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    boolean hasAlarmStepLow();
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    float getAlarmStepLow();
  }
  /**
   * Protobuf type {@code MultiSensorData}
   */
  public static final class MultiSensorData extends
      com.google.protobuf.GeneratedMessage
      implements MultiSensorDataOrBuilder {
    // Use MultiSensorData.newBuilder() to construct.
    private MultiSensorData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultiSensorData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultiSensorData defaultInstance;
    public static MultiSensorData getDefaultInstance() {
      return defaultInstance;
    }

    public MultiSensorData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MultiSensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                data_ = new java.util.ArrayList<Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.add(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                data_ = new java.util.ArrayList<Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                data_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              alarmHigh_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000002;
              alarmLow_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              calibration_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SensorError value = MsgNode1V1M5.SensorError.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                error_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              status_ = input.readUInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000020;
              alarmStepHigh_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000040;
              alarmStepLow_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_MultiSensorData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_MultiSensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.MultiSensorData.class, MsgNode1V1M5.MultiSensorData.Builder.class);
    }

    public static com.google.protobuf.Parser<MultiSensorData> PARSER =
        new com.google.protobuf.AbstractParser<MultiSensorData>() {
      public MultiSensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiSensorData(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<MultiSensorData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated float data = 1;
    public static final int DATA_FIELD_NUMBER = 1;
    private java.util.List<Float> data_;
    /**
     * <code>repeated float data = 1;</code>
     */
    public java.util.List<Float>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated float data = 1;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated float data = 1;</code>
     */
    public float getData(int index) {
      return data_.get(index);
    }

    // optional float alarmHigh = 2;
    public static final int ALARMHIGH_FIELD_NUMBER = 2;
    private float alarmHigh_;
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    public boolean hasAlarmHigh() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float alarmHigh = 2;</code>
     */
    public float getAlarmHigh() {
      return alarmHigh_;
    }

    // optional float alarmLow = 3;
    public static final int ALARMLOW_FIELD_NUMBER = 3;
    private float alarmLow_;
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    public boolean hasAlarmLow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float alarmLow = 3;</code>
     */
    public float getAlarmLow() {
      return alarmLow_;
    }

    // optional uint32 calibration = 4;
    public static final int CALIBRATION_FIELD_NUMBER = 4;
    private int calibration_;
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    public boolean hasCalibration() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    public int getCalibration() {
      return calibration_;
    }

    // optional .SensorError error = 5;
    public static final int ERROR_FIELD_NUMBER = 5;
    private MsgNode1V1M5.SensorError error_;
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    public MsgNode1V1M5.SensorError getError() {
      return error_;
    }

    // optional uint32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>optional uint32 status = 6;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 status = 6;</code>
     */
    public int getStatus() {
      return status_;
    }

    // optional float alarmStepHigh = 7;
    public static final int ALARMSTEPHIGH_FIELD_NUMBER = 7;
    private float alarmStepHigh_;
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    public boolean hasAlarmStepHigh() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float alarmStepHigh = 7;</code>
     */
    public float getAlarmStepHigh() {
      return alarmStepHigh_;
    }

    // optional float alarmStepLow = 8;
    public static final int ALARMSTEPLOW_FIELD_NUMBER = 8;
    private float alarmStepLow_;
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    public boolean hasAlarmStepLow() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float alarmStepLow = 8;</code>
     */
    public float getAlarmStepLow() {
      return alarmStepLow_;
    }

    private void initFields() {
      data_ = java.util.Collections.emptyList();
      alarmHigh_ = 0F;
      alarmLow_ = 0F;
      calibration_ = 0;
      error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      status_ = 0;
      alarmStepHigh_ = 0F;
      alarmStepLow_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < data_.size(); i++) {
        output.writeFloat(1, data_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(2, alarmHigh_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(3, alarmLow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, calibration_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(5, error_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(7, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(8, alarmStepLow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getDataList().size();
        size += dataSize;
        size += 1 * getDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, alarmHigh_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, alarmLow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, calibration_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, error_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, alarmStepLow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.MultiSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.MultiSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.MultiSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.MultiSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.MultiSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.MultiSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.MultiSensorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MultiSensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.MultiSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_MultiSensorData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_MultiSensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.MultiSensorData.class, MsgNode1V1M5.MultiSensorData.Builder.class);
      }

      // Construct using MsgNode1V1M5.MultiSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        alarmHigh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmLow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        calibration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        alarmStepHigh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepLow_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_MultiSensorData_descriptor;
      }

      public MsgNode1V1M5.MultiSensorData getDefaultInstanceForType() {
        return MsgNode1V1M5.MultiSensorData.getDefaultInstance();
      }

      public MsgNode1V1M5.MultiSensorData build() {
        MsgNode1V1M5.MultiSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.MultiSensorData buildPartial() {
        MsgNode1V1M5.MultiSensorData result = new MsgNode1V1M5.MultiSensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alarmHigh_ = alarmHigh_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.alarmLow_ = alarmLow_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calibration_ = calibration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.alarmStepHigh_ = alarmStepHigh_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.alarmStepLow_ = alarmStepLow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.MultiSensorData) {
          return mergeFrom((MsgNode1V1M5.MultiSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.MultiSensorData other) {
        if (other == MsgNode1V1M5.MultiSensorData.getDefaultInstance()) return this;
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        if (other.hasAlarmHigh()) {
          setAlarmHigh(other.getAlarmHigh());
        }
        if (other.hasAlarmLow()) {
          setAlarmLow(other.getAlarmLow());
        }
        if (other.hasCalibration()) {
          setCalibration(other.getCalibration());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAlarmStepHigh()) {
          setAlarmStepHigh(other.getAlarmStepHigh());
        }
        if (other.hasAlarmStepLow()) {
          setAlarmStepLow(other.getAlarmStepLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.MultiSensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.MultiSensorData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated float data = 1;
      private java.util.List<Float> data_ = java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = new java.util.ArrayList<Float>(data_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float data = 1;</code>
       */
      public java.util.List<Float>
          getDataList() {
        return java.util.Collections.unmodifiableList(data_);
      }
      /**
       * <code>repeated float data = 1;</code>
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated float data = 1;</code>
       */
      public float getData(int index) {
        return data_.get(index);
      }
      /**
       * <code>repeated float data = 1;</code>
       */
      public Builder setData(
          int index, float value) {
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float data = 1;</code>
       */
      public Builder addData(float value) {
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float data = 1;</code>
       */
      public Builder addAllData(
          Iterable<? extends Float> values) {
        ensureDataIsMutable();
        super.addAll(values, data_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float data = 1;</code>
       */
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional float alarmHigh = 2;
      private float alarmHigh_ ;
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public boolean hasAlarmHigh() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public float getAlarmHigh() {
        return alarmHigh_;
      }
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public Builder setAlarmHigh(float value) {
        bitField0_ |= 0x00000002;
        alarmHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmHigh = 2;</code>
       */
      public Builder clearAlarmHigh() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmHigh_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmLow = 3;
      private float alarmLow_ ;
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public boolean hasAlarmLow() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public float getAlarmLow() {
        return alarmLow_;
      }
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public Builder setAlarmLow(float value) {
        bitField0_ |= 0x00000004;
        alarmLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmLow = 3;</code>
       */
      public Builder clearAlarmLow() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alarmLow_ = 0F;
        onChanged();
        return this;
      }

      // optional uint32 calibration = 4;
      private int calibration_ ;
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public boolean hasCalibration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public int getCalibration() {
        return calibration_;
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public Builder setCalibration(int value) {
        bitField0_ |= 0x00000008;
        calibration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public Builder clearCalibration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calibration_ = 0;
        onChanged();
        return this;
      }

      // optional .SensorError error = 5;
      private MsgNode1V1M5.SensorError error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public MsgNode1V1M5.SensorError getError() {
        return error_;
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public Builder setError(MsgNode1V1M5.SensorError value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000010);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        onChanged();
        return this;
      }

      // optional uint32 status = 6;
      private int status_ ;
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional float alarmStepHigh = 7;
      private float alarmStepHigh_ ;
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public boolean hasAlarmStepHigh() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public float getAlarmStepHigh() {
        return alarmStepHigh_;
      }
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public Builder setAlarmStepHigh(float value) {
        bitField0_ |= 0x00000040;
        alarmStepHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmStepHigh = 7;</code>
       */
      public Builder clearAlarmStepHigh() {
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepHigh_ = 0F;
        onChanged();
        return this;
      }

      // optional float alarmStepLow = 8;
      private float alarmStepLow_ ;
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public boolean hasAlarmStepLow() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public float getAlarmStepLow() {
        return alarmStepLow_;
      }
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public Builder setAlarmStepLow(float value) {
        bitField0_ |= 0x00000080;
        alarmStepLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alarmStepLow = 8;</code>
       */
      public Builder clearAlarmStepLow() {
        bitField0_ = (bitField0_ & ~0x00000080);
        alarmStepLow_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MultiSensorData)
    }

    static {
      defaultInstance = new MultiSensorData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MultiSensorData)
  }

  public interface MultiSensorDataIntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated sint32 data = 1;
    /**
     * <code>repeated sint32 data = 1;</code>
     */
    java.util.List<Integer> getDataList();
    /**
     * <code>repeated sint32 data = 1;</code>
     */
    int getDataCount();
    /**
     * <code>repeated sint32 data = 1;</code>
     */
    int getData(int index);

    // optional sint32 alarmHigh = 2;
    /**
     * <code>optional sint32 alarmHigh = 2;</code>
     */
    boolean hasAlarmHigh();
    /**
     * <code>optional sint32 alarmHigh = 2;</code>
     */
    int getAlarmHigh();

    // optional sint32 alarmLow = 3;
    /**
     * <code>optional sint32 alarmLow = 3;</code>
     */
    boolean hasAlarmLow();
    /**
     * <code>optional sint32 alarmLow = 3;</code>
     */
    int getAlarmLow();

    // optional uint32 calibration = 4;
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    boolean hasCalibration();
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    int getCalibration();

    // optional .SensorError error = 5;
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    boolean hasError();
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    MsgNode1V1M5.SensorError getError();

    // optional uint32 status = 6;
    /**
     * <code>optional uint32 status = 6;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 6;</code>
     */
    int getStatus();

    // optional sint32 alarmStepHigh = 7;
    /**
     * <code>optional sint32 alarmStepHigh = 7;</code>
     */
    boolean hasAlarmStepHigh();
    /**
     * <code>optional sint32 alarmStepHigh = 7;</code>
     */
    int getAlarmStepHigh();

    // optional sint32 alarmStepLow = 8;
    /**
     * <code>optional sint32 alarmStepLow = 8;</code>
     */
    boolean hasAlarmStepLow();
    /**
     * <code>optional sint32 alarmStepLow = 8;</code>
     */
    int getAlarmStepLow();
  }
  /**
   * Protobuf type {@code MultiSensorDataInt}
   */
  public static final class MultiSensorDataInt extends
      com.google.protobuf.GeneratedMessage
      implements MultiSensorDataIntOrBuilder {
    // Use MultiSensorDataInt.newBuilder() to construct.
    private MultiSensorDataInt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultiSensorDataInt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultiSensorDataInt defaultInstance;
    public static MultiSensorDataInt getDefaultInstance() {
      return defaultInstance;
    }

    public MultiSensorDataInt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MultiSensorDataInt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                data_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.add(input.readSInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                data_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                data_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              alarmHigh_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              alarmLow_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              calibration_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SensorError value = MsgNode1V1M5.SensorError.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                error_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              status_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              alarmStepHigh_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              alarmStepLow_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_MultiSensorDataInt_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_MultiSensorDataInt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.MultiSensorDataInt.class, MsgNode1V1M5.MultiSensorDataInt.Builder.class);
    }

    public static com.google.protobuf.Parser<MultiSensorDataInt> PARSER =
        new com.google.protobuf.AbstractParser<MultiSensorDataInt>() {
      public MultiSensorDataInt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiSensorDataInt(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<MultiSensorDataInt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated sint32 data = 1;
    public static final int DATA_FIELD_NUMBER = 1;
    private java.util.List<Integer> data_;
    /**
     * <code>repeated sint32 data = 1;</code>
     */
    public java.util.List<Integer>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated sint32 data = 1;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated sint32 data = 1;</code>
     */
    public int getData(int index) {
      return data_.get(index);
    }

    // optional sint32 alarmHigh = 2;
    public static final int ALARMHIGH_FIELD_NUMBER = 2;
    private int alarmHigh_;
    /**
     * <code>optional sint32 alarmHigh = 2;</code>
     */
    public boolean hasAlarmHigh() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 alarmHigh = 2;</code>
     */
    public int getAlarmHigh() {
      return alarmHigh_;
    }

    // optional sint32 alarmLow = 3;
    public static final int ALARMLOW_FIELD_NUMBER = 3;
    private int alarmLow_;
    /**
     * <code>optional sint32 alarmLow = 3;</code>
     */
    public boolean hasAlarmLow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 alarmLow = 3;</code>
     */
    public int getAlarmLow() {
      return alarmLow_;
    }

    // optional uint32 calibration = 4;
    public static final int CALIBRATION_FIELD_NUMBER = 4;
    private int calibration_;
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    public boolean hasCalibration() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 calibration = 4;</code>
     */
    public int getCalibration() {
      return calibration_;
    }

    // optional .SensorError error = 5;
    public static final int ERROR_FIELD_NUMBER = 5;
    private MsgNode1V1M5.SensorError error_;
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .SensorError error = 5;</code>
     */
    public MsgNode1V1M5.SensorError getError() {
      return error_;
    }

    // optional uint32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>optional uint32 status = 6;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 status = 6;</code>
     */
    public int getStatus() {
      return status_;
    }

    // optional sint32 alarmStepHigh = 7;
    public static final int ALARMSTEPHIGH_FIELD_NUMBER = 7;
    private int alarmStepHigh_;
    /**
     * <code>optional sint32 alarmStepHigh = 7;</code>
     */
    public boolean hasAlarmStepHigh() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 alarmStepHigh = 7;</code>
     */
    public int getAlarmStepHigh() {
      return alarmStepHigh_;
    }

    // optional sint32 alarmStepLow = 8;
    public static final int ALARMSTEPLOW_FIELD_NUMBER = 8;
    private int alarmStepLow_;
    /**
     * <code>optional sint32 alarmStepLow = 8;</code>
     */
    public boolean hasAlarmStepLow() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 alarmStepLow = 8;</code>
     */
    public int getAlarmStepLow() {
      return alarmStepLow_;
    }

    private void initFields() {
      data_ = java.util.Collections.emptyList();
      alarmHigh_ = 0;
      alarmLow_ = 0;
      calibration_ = 0;
      error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      status_ = 0;
      alarmStepHigh_ = 0;
      alarmStepLow_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < data_.size(); i++) {
        output.writeSInt32(1, data_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(2, alarmHigh_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(3, alarmLow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, calibration_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(5, error_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(7, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(8, alarmStepLow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(data_.get(i));
        }
        size += dataSize;
        size += 1 * getDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, alarmHigh_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, alarmLow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, calibration_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, error_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, status_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, alarmStepHigh_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, alarmStepLow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.MultiSensorDataInt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.MultiSensorDataInt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MultiSensorDataInt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.MultiSensorDataIntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_MultiSensorDataInt_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_MultiSensorDataInt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.MultiSensorDataInt.class, MsgNode1V1M5.MultiSensorDataInt.Builder.class);
      }

      // Construct using MsgNode1V1M5.MultiSensorDataInt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        alarmHigh_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        calibration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        alarmStepHigh_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_MultiSensorDataInt_descriptor;
      }

      public MsgNode1V1M5.MultiSensorDataInt getDefaultInstanceForType() {
        return MsgNode1V1M5.MultiSensorDataInt.getDefaultInstance();
      }

      public MsgNode1V1M5.MultiSensorDataInt build() {
        MsgNode1V1M5.MultiSensorDataInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.MultiSensorDataInt buildPartial() {
        MsgNode1V1M5.MultiSensorDataInt result = new MsgNode1V1M5.MultiSensorDataInt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alarmHigh_ = alarmHigh_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.alarmLow_ = alarmLow_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calibration_ = calibration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.alarmStepHigh_ = alarmStepHigh_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.alarmStepLow_ = alarmStepLow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.MultiSensorDataInt) {
          return mergeFrom((MsgNode1V1M5.MultiSensorDataInt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.MultiSensorDataInt other) {
        if (other == MsgNode1V1M5.MultiSensorDataInt.getDefaultInstance()) return this;
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        if (other.hasAlarmHigh()) {
          setAlarmHigh(other.getAlarmHigh());
        }
        if (other.hasAlarmLow()) {
          setAlarmLow(other.getAlarmLow());
        }
        if (other.hasCalibration()) {
          setCalibration(other.getCalibration());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAlarmStepHigh()) {
          setAlarmStepHigh(other.getAlarmStepHigh());
        }
        if (other.hasAlarmStepLow()) {
          setAlarmStepLow(other.getAlarmStepLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.MultiSensorDataInt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.MultiSensorDataInt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated sint32 data = 1;
      private java.util.List<Integer> data_ = java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = new java.util.ArrayList<Integer>(data_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint32 data = 1;</code>
       */
      public java.util.List<Integer>
          getDataList() {
        return java.util.Collections.unmodifiableList(data_);
      }
      /**
       * <code>repeated sint32 data = 1;</code>
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated sint32 data = 1;</code>
       */
      public int getData(int index) {
        return data_.get(index);
      }
      /**
       * <code>repeated sint32 data = 1;</code>
       */
      public Builder setData(
          int index, int value) {
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 data = 1;</code>
       */
      public Builder addData(int value) {
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 data = 1;</code>
       */
      public Builder addAllData(
          Iterable<? extends Integer> values) {
        ensureDataIsMutable();
        super.addAll(values, data_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 data = 1;</code>
       */
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional sint32 alarmHigh = 2;
      private int alarmHigh_ ;
      /**
       * <code>optional sint32 alarmHigh = 2;</code>
       */
      public boolean hasAlarmHigh() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 alarmHigh = 2;</code>
       */
      public int getAlarmHigh() {
        return alarmHigh_;
      }
      /**
       * <code>optional sint32 alarmHigh = 2;</code>
       */
      public Builder setAlarmHigh(int value) {
        bitField0_ |= 0x00000002;
        alarmHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmHigh = 2;</code>
       */
      public Builder clearAlarmHigh() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alarmHigh_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 alarmLow = 3;
      private int alarmLow_ ;
      /**
       * <code>optional sint32 alarmLow = 3;</code>
       */
      public boolean hasAlarmLow() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 alarmLow = 3;</code>
       */
      public int getAlarmLow() {
        return alarmLow_;
      }
      /**
       * <code>optional sint32 alarmLow = 3;</code>
       */
      public Builder setAlarmLow(int value) {
        bitField0_ |= 0x00000004;
        alarmLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmLow = 3;</code>
       */
      public Builder clearAlarmLow() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alarmLow_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 calibration = 4;
      private int calibration_ ;
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public boolean hasCalibration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public int getCalibration() {
        return calibration_;
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public Builder setCalibration(int value) {
        bitField0_ |= 0x00000008;
        calibration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 calibration = 4;</code>
       */
      public Builder clearCalibration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calibration_ = 0;
        onChanged();
        return this;
      }

      // optional .SensorError error = 5;
      private MsgNode1V1M5.SensorError error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public MsgNode1V1M5.SensorError getError() {
        return error_;
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public Builder setError(MsgNode1V1M5.SensorError value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SensorError error = 5;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000010);
        error_ = MsgNode1V1M5.SensorError.SENSOR_ERR_NONE;
        onChanged();
        return this;
      }

      // optional uint32 status = 6;
      private int status_ ;
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 alarmStepHigh = 7;
      private int alarmStepHigh_ ;
      /**
       * <code>optional sint32 alarmStepHigh = 7;</code>
       */
      public boolean hasAlarmStepHigh() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 alarmStepHigh = 7;</code>
       */
      public int getAlarmStepHigh() {
        return alarmStepHigh_;
      }
      /**
       * <code>optional sint32 alarmStepHigh = 7;</code>
       */
      public Builder setAlarmStepHigh(int value) {
        bitField0_ |= 0x00000040;
        alarmStepHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmStepHigh = 7;</code>
       */
      public Builder clearAlarmStepHigh() {
        bitField0_ = (bitField0_ & ~0x00000040);
        alarmStepHigh_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 alarmStepLow = 8;
      private int alarmStepLow_ ;
      /**
       * <code>optional sint32 alarmStepLow = 8;</code>
       */
      public boolean hasAlarmStepLow() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 alarmStepLow = 8;</code>
       */
      public int getAlarmStepLow() {
        return alarmStepLow_;
      }
      /**
       * <code>optional sint32 alarmStepLow = 8;</code>
       */
      public Builder setAlarmStepLow(int value) {
        bitField0_ |= 0x00000080;
        alarmStepLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 alarmStepLow = 8;</code>
       */
      public Builder clearAlarmStepLow() {
        bitField0_ = (bitField0_ & ~0x00000080);
        alarmStepLow_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MultiSensorDataInt)
    }

    static {
      defaultInstance = new MultiSensorDataInt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MultiSensorDataInt)
  }

  public interface GpsDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional double latitude = 1;
    /**
     * <code>optional double latitude = 1;</code>
     */
    boolean hasLatitude();
    /**
     * <code>optional double latitude = 1;</code>
     */
    double getLatitude();

    // optional double longitude = 2;
    /**
     * <code>optional double longitude = 2;</code>
     */
    boolean hasLongitude();
    /**
     * <code>optional double longitude = 2;</code>
     */
    double getLongitude();

    // optional double altitude = 3;
    /**
     * <code>optional double altitude = 3;</code>
     */
    boolean hasAltitude();
    /**
     * <code>optional double altitude = 3;</code>
     */
    double getAltitude();
  }
  /**
   * Protobuf type {@code GpsData}
   */
  public static final class GpsData extends
      com.google.protobuf.GeneratedMessage
      implements GpsDataOrBuilder {
    // Use GpsData.newBuilder() to construct.
    private GpsData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsData defaultInstance;
    public static GpsData getDefaultInstance() {
      return defaultInstance;
    }

    public GpsData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              latitude_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              longitude_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              altitude_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_GpsData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_GpsData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.GpsData.class, MsgNode1V1M5.GpsData.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsData> PARSER =
        new com.google.protobuf.AbstractParser<GpsData>() {
      public GpsData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsData(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GpsData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional double latitude = 1;
    public static final int LATITUDE_FIELD_NUMBER = 1;
    private double latitude_;
    /**
     * <code>optional double latitude = 1;</code>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double latitude = 1;</code>
     */
    public double getLatitude() {
      return latitude_;
    }

    // optional double longitude = 2;
    public static final int LONGITUDE_FIELD_NUMBER = 2;
    private double longitude_;
    /**
     * <code>optional double longitude = 2;</code>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double longitude = 2;</code>
     */
    public double getLongitude() {
      return longitude_;
    }

    // optional double altitude = 3;
    public static final int ALTITUDE_FIELD_NUMBER = 3;
    private double altitude_;
    /**
     * <code>optional double altitude = 3;</code>
     */
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double altitude = 3;</code>
     */
    public double getAltitude() {
      return altitude_;
    }

    private void initFields() {
      latitude_ = 0D;
      longitude_ = 0D;
      altitude_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, altitude_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, altitude_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.GpsData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.GpsData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.GpsData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.GpsData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.GpsData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.GpsData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.GpsData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.GpsData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.GpsData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.GpsData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.GpsData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GpsData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.GpsDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_GpsData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_GpsData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.GpsData.class, MsgNode1V1M5.GpsData.Builder.class);
      }

      // Construct using MsgNode1V1M5.GpsData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        latitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        longitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        altitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_GpsData_descriptor;
      }

      public MsgNode1V1M5.GpsData getDefaultInstanceForType() {
        return MsgNode1V1M5.GpsData.getDefaultInstance();
      }

      public MsgNode1V1M5.GpsData build() {
        MsgNode1V1M5.GpsData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.GpsData buildPartial() {
        MsgNode1V1M5.GpsData result = new MsgNode1V1M5.GpsData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.altitude_ = altitude_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.GpsData) {
          return mergeFrom((MsgNode1V1M5.GpsData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.GpsData other) {
        if (other == MsgNode1V1M5.GpsData.getDefaultInstance()) return this;
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.GpsData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.GpsData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional double latitude = 1;
      private double latitude_ ;
      /**
       * <code>optional double latitude = 1;</code>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double latitude = 1;</code>
       */
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <code>optional double latitude = 1;</code>
       */
      public Builder setLatitude(double value) {
        bitField0_ |= 0x00000001;
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double latitude = 1;</code>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0D;
        onChanged();
        return this;
      }

      // optional double longitude = 2;
      private double longitude_ ;
      /**
       * <code>optional double longitude = 2;</code>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double longitude = 2;</code>
       */
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <code>optional double longitude = 2;</code>
       */
      public Builder setLongitude(double value) {
        bitField0_ |= 0x00000002;
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double longitude = 2;</code>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0D;
        onChanged();
        return this;
      }

      // optional double altitude = 3;
      private double altitude_ ;
      /**
       * <code>optional double altitude = 3;</code>
       */
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double altitude = 3;</code>
       */
      public double getAltitude() {
        return altitude_;
      }
      /**
       * <code>optional double altitude = 3;</code>
       */
      public Builder setAltitude(double value) {
        bitField0_ |= 0x00000004;
        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double altitude = 3;</code>
       */
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        altitude_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GpsData)
    }

    static {
      defaultInstance = new GpsData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GpsData)
  }

  public interface AxisDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional float x = 1;
    /**
     * <code>optional float x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>optional float x = 1;</code>
     */
    float getX();

    // optional float y = 2;
    /**
     * <code>optional float y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>optional float y = 2;</code>
     */
    float getY();

    // optional float z = 3;
    /**
     * <code>optional float z = 3;</code>
     */
    boolean hasZ();
    /**
     * <code>optional float z = 3;</code>
     */
    float getZ();
  }
  /**
   * Protobuf type {@code AxisData}
   */
  public static final class AxisData extends
      com.google.protobuf.GeneratedMessage
      implements AxisDataOrBuilder {
    // Use AxisData.newBuilder() to construct.
    private AxisData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AxisData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AxisData defaultInstance;
    public static AxisData getDefaultInstance() {
      return defaultInstance;
    }

    public AxisData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AxisData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              z_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_AxisData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_AxisData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.AxisData.class, MsgNode1V1M5.AxisData.Builder.class);
    }

    public static com.google.protobuf.Parser<AxisData> PARSER =
        new com.google.protobuf.AbstractParser<AxisData>() {
      public AxisData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AxisData(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<AxisData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>optional float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    // optional float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>optional float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    // optional float z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    /**
     * <code>optional float z = 3;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float z = 3;</code>
     */
    public float getZ() {
      return z_;
    }

    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, z_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.AxisData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.AxisData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.AxisData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.AxisData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.AxisData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.AxisData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.AxisData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.AxisData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.AxisData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.AxisData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.AxisData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AxisData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.AxisDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_AxisData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_AxisData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.AxisData.class, MsgNode1V1M5.AxisData.Builder.class);
      }

      // Construct using MsgNode1V1M5.AxisData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_AxisData_descriptor;
      }

      public MsgNode1V1M5.AxisData getDefaultInstanceForType() {
        return MsgNode1V1M5.AxisData.getDefaultInstance();
      }

      public MsgNode1V1M5.AxisData build() {
        MsgNode1V1M5.AxisData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.AxisData buildPartial() {
        MsgNode1V1M5.AxisData result = new MsgNode1V1M5.AxisData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.AxisData) {
          return mergeFrom((MsgNode1V1M5.AxisData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.AxisData other) {
        if (other == MsgNode1V1M5.AxisData.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.AxisData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.AxisData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional float x = 1;
      private float x_ ;
      /**
       * <code>optional float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      // optional float y = 2;
      private float y_ ;
      /**
       * <code>optional float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      // optional float z = 3;
      private float z_ ;
      /**
       * <code>optional float z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float z = 3;</code>
       */
      public float getZ() {
        return z_;
      }
      /**
       * <code>optional float z = 3;</code>
       */
      public Builder setZ(float value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float z = 3;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AxisData)
    }

    static {
      defaultInstance = new AxisData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AxisData)
  }

  public interface iBeaconOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes addr = 1;
    /**
     * <code>optional bytes addr = 1;</code>
     */
    boolean hasAddr();
    /**
     * <code>optional bytes addr = 1;</code>
     */
    com.google.protobuf.ByteString getAddr();

    // optional bytes umm = 2;
    /**
     * <code>optional bytes umm = 2;</code>
     */
    boolean hasUmm();
    /**
     * <code>optional bytes umm = 2;</code>
     */
    com.google.protobuf.ByteString getUmm();

    // optional sint32 rssi = 3;
    /**
     * <code>optional sint32 rssi = 3;</code>
     */
    boolean hasRssi();
    /**
     * <code>optional sint32 rssi = 3;</code>
     */
    int getRssi();
  }
  /**
   * Protobuf type {@code iBeacon}
   */
  public static final class iBeacon extends
      com.google.protobuf.GeneratedMessage
      implements iBeaconOrBuilder {
    // Use iBeacon.newBuilder() to construct.
    private iBeacon(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private iBeacon(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final iBeacon defaultInstance;
    public static iBeacon getDefaultInstance() {
      return defaultInstance;
    }

    public iBeacon getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private iBeacon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              addr_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              umm_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rssi_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_iBeacon_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_iBeacon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.iBeacon.class, MsgNode1V1M5.iBeacon.Builder.class);
    }

    public static com.google.protobuf.Parser<iBeacon> PARSER =
        new com.google.protobuf.AbstractParser<iBeacon>() {
      public iBeacon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new iBeacon(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<iBeacon> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes addr = 1;
    public static final int ADDR_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString addr_;
    /**
     * <code>optional bytes addr = 1;</code>
     */
    public boolean hasAddr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes addr = 1;</code>
     */
    public com.google.protobuf.ByteString getAddr() {
      return addr_;
    }

    // optional bytes umm = 2;
    public static final int UMM_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString umm_;
    /**
     * <code>optional bytes umm = 2;</code>
     */
    public boolean hasUmm() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes umm = 2;</code>
     */
    public com.google.protobuf.ByteString getUmm() {
      return umm_;
    }

    // optional sint32 rssi = 3;
    public static final int RSSI_FIELD_NUMBER = 3;
    private int rssi_;
    /**
     * <code>optional sint32 rssi = 3;</code>
     */
    public boolean hasRssi() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 rssi = 3;</code>
     */
    public int getRssi() {
      return rssi_;
    }

    private void initFields() {
      addr_ = com.google.protobuf.ByteString.EMPTY;
      umm_ = com.google.protobuf.ByteString.EMPTY;
      rssi_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, addr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, umm_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, rssi_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, addr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, umm_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, rssi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.iBeacon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.iBeacon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.iBeacon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.iBeacon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.iBeacon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.iBeacon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.iBeacon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.iBeacon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.iBeacon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.iBeacon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.iBeacon prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code iBeacon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.iBeaconOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_iBeacon_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_iBeacon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.iBeacon.class, MsgNode1V1M5.iBeacon.Builder.class);
      }

      // Construct using MsgNode1V1M5.iBeacon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        addr_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        umm_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        rssi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_iBeacon_descriptor;
      }

      public MsgNode1V1M5.iBeacon getDefaultInstanceForType() {
        return MsgNode1V1M5.iBeacon.getDefaultInstance();
      }

      public MsgNode1V1M5.iBeacon build() {
        MsgNode1V1M5.iBeacon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.iBeacon buildPartial() {
        MsgNode1V1M5.iBeacon result = new MsgNode1V1M5.iBeacon(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.addr_ = addr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.umm_ = umm_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rssi_ = rssi_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.iBeacon) {
          return mergeFrom((MsgNode1V1M5.iBeacon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.iBeacon other) {
        if (other == MsgNode1V1M5.iBeacon.getDefaultInstance()) return this;
        if (other.hasAddr()) {
          setAddr(other.getAddr());
        }
        if (other.hasUmm()) {
          setUmm(other.getUmm());
        }
        if (other.hasRssi()) {
          setRssi(other.getRssi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.iBeacon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.iBeacon) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes addr = 1;
      private com.google.protobuf.ByteString addr_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes addr = 1;</code>
       */
      public boolean hasAddr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes addr = 1;</code>
       */
      public com.google.protobuf.ByteString getAddr() {
        return addr_;
      }
      /**
       * <code>optional bytes addr = 1;</code>
       */
      public Builder setAddr(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        addr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes addr = 1;</code>
       */
      public Builder clearAddr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        addr_ = getDefaultInstance().getAddr();
        onChanged();
        return this;
      }

      // optional bytes umm = 2;
      private com.google.protobuf.ByteString umm_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes umm = 2;</code>
       */
      public boolean hasUmm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes umm = 2;</code>
       */
      public com.google.protobuf.ByteString getUmm() {
        return umm_;
      }
      /**
       * <code>optional bytes umm = 2;</code>
       */
      public Builder setUmm(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        umm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes umm = 2;</code>
       */
      public Builder clearUmm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        umm_ = getDefaultInstance().getUmm();
        onChanged();
        return this;
      }

      // optional sint32 rssi = 3;
      private int rssi_ ;
      /**
       * <code>optional sint32 rssi = 3;</code>
       */
      public boolean hasRssi() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 rssi = 3;</code>
       */
      public int getRssi() {
        return rssi_;
      }
      /**
       * <code>optional sint32 rssi = 3;</code>
       */
      public Builder setRssi(int value) {
        bitField0_ |= 0x00000004;
        rssi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 rssi = 3;</code>
       */
      public Builder clearRssi() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rssi_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:iBeacon)
    }

    static {
      defaultInstance = new iBeacon(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:iBeacon)
  }

  public interface AppParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .AppCmd cmd = 1;
    /**
     * <code>optional .AppCmd cmd = 1;</code>
     */
    boolean hasCmd();
    /**
     * <code>optional .AppCmd cmd = 1;</code>
     */
    MsgNode1V1M5.AppCmd getCmd();

    // optional uint32 uploadInterval = 2;
    /**
     * <code>optional uint32 uploadInterval = 2;</code>
     */
    boolean hasUploadInterval();
    /**
     * <code>optional uint32 uploadInterval = 2;</code>
     */
    int getUploadInterval();

    // optional uint32 syncTime = 3;
    /**
     * <code>optional uint32 syncTime = 3;</code>
     */
    boolean hasSyncTime();
    /**
     * <code>optional uint32 syncTime = 3;</code>
     */
    int getSyncTime();

    // optional .NodeState nodeState = 4;
    /**
     * <code>optional .NodeState nodeState = 4;</code>
     */
    boolean hasNodeState();
    /**
     * <code>optional .NodeState nodeState = 4;</code>
     */
    MsgNode1V1M5.NodeState getNodeState();

    // optional .NodeAlarm nodeAlarm = 5;
    /**
     * <code>optional .NodeAlarm nodeAlarm = 5;</code>
     */
    boolean hasNodeAlarm();
    /**
     * <code>optional .NodeAlarm nodeAlarm = 5;</code>
     */
    MsgNode1V1M5.NodeAlarm getNodeAlarm();

    // optional uint32 nodeAlarmSet = 6;
    /**
     * <code>optional uint32 nodeAlarmSet = 6;</code>
     */
    boolean hasNodeAlarmSet();
    /**
     * <code>optional uint32 nodeAlarmSet = 6;</code>
     */
    int getNodeAlarmSet();

    // optional uint32 confirm = 7;
    /**
     * <code>optional uint32 confirm = 7;</code>
     */
    boolean hasConfirm();
    /**
     * <code>optional uint32 confirm = 7;</code>
     */
    int getConfirm();

    // optional .SmokeCtrl smokeCtrl = 8;
    /**
     * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
     */
    boolean hasSmokeCtrl();
    /**
     * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
     */
    MsgNode1V1M5.SmokeCtrl getSmokeCtrl();

    // optional uint32 uploadRepeat = 9;
    /**
     * <code>optional uint32 uploadRepeat = 9;</code>
     */
    boolean hasUploadRepeat();
    /**
     * <code>optional uint32 uploadRepeat = 9;</code>
     */
    int getUploadRepeat();

    // optional uint32 alarmUploadInterval = 10;
    /**
     * <code>optional uint32 alarmUploadInterval = 10;</code>
     */
    boolean hasAlarmUploadInterval();
    /**
     * <code>optional uint32 alarmUploadInterval = 10;</code>
     */
    int getAlarmUploadInterval();

    // optional uint32 alarmUploadNb = 11;
    /**
     * <code>optional uint32 alarmUploadNb = 11;</code>
     */
    boolean hasAlarmUploadNb();
    /**
     * <code>optional uint32 alarmUploadNb = 11;</code>
     */
    int getAlarmUploadNb();

    // optional .TrackerCtrl trackerCtrl = 12;
    /**
     * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
     */
    boolean hasTrackerCtrl();
    /**
     * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
     */
    MsgNode1V1M5.TrackerCtrl getTrackerCtrl();

    // optional uint32 trackerEmergencyTime = 13;
    /**
     * <code>optional uint32 trackerEmergencyTime = 13;</code>
     */
    boolean hasTrackerEmergencyTime();
    /**
     * <code>optional uint32 trackerEmergencyTime = 13;</code>
     */
    int getTrackerEmergencyTime();
  }
  /**
   * Protobuf type {@code AppParam}
   */
  public static final class AppParam extends
      com.google.protobuf.GeneratedMessage
      implements AppParamOrBuilder {
    // Use AppParam.newBuilder() to construct.
    private AppParam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AppParam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AppParam defaultInstance;
    public static AppParam getDefaultInstance() {
      return defaultInstance;
    }

    public AppParam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AppParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.AppCmd value = MsgNode1V1M5.AppCmd.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                cmd_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              uploadInterval_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              syncTime_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.NodeState value = MsgNode1V1M5.NodeState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                nodeState_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.NodeAlarm value = MsgNode1V1M5.NodeAlarm.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                nodeAlarm_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              nodeAlarmSet_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              confirm_ = input.readUInt32();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.SmokeCtrl value = MsgNode1V1M5.SmokeCtrl.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                smokeCtrl_ = value;
              }
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              uploadRepeat_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              alarmUploadInterval_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              alarmUploadNb_ = input.readUInt32();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              MsgNode1V1M5.TrackerCtrl value = MsgNode1V1M5.TrackerCtrl.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                trackerCtrl_ = value;
              }
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              trackerEmergencyTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_AppParam_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_AppParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.AppParam.class, MsgNode1V1M5.AppParam.Builder.class);
    }

    public static com.google.protobuf.Parser<AppParam> PARSER =
        new com.google.protobuf.AbstractParser<AppParam>() {
      public AppParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AppParam(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<AppParam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .AppCmd cmd = 1;
    public static final int CMD_FIELD_NUMBER = 1;
    private MsgNode1V1M5.AppCmd cmd_;
    /**
     * <code>optional .AppCmd cmd = 1;</code>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .AppCmd cmd = 1;</code>
     */
    public MsgNode1V1M5.AppCmd getCmd() {
      return cmd_;
    }

    // optional uint32 uploadInterval = 2;
    public static final int UPLOADINTERVAL_FIELD_NUMBER = 2;
    private int uploadInterval_;
    /**
     * <code>optional uint32 uploadInterval = 2;</code>
     */
    public boolean hasUploadInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 uploadInterval = 2;</code>
     */
    public int getUploadInterval() {
      return uploadInterval_;
    }

    // optional uint32 syncTime = 3;
    public static final int SYNCTIME_FIELD_NUMBER = 3;
    private int syncTime_;
    /**
     * <code>optional uint32 syncTime = 3;</code>
     */
    public boolean hasSyncTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 syncTime = 3;</code>
     */
    public int getSyncTime() {
      return syncTime_;
    }

    // optional .NodeState nodeState = 4;
    public static final int NODESTATE_FIELD_NUMBER = 4;
    private MsgNode1V1M5.NodeState nodeState_;
    /**
     * <code>optional .NodeState nodeState = 4;</code>
     */
    public boolean hasNodeState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .NodeState nodeState = 4;</code>
     */
    public MsgNode1V1M5.NodeState getNodeState() {
      return nodeState_;
    }

    // optional .NodeAlarm nodeAlarm = 5;
    public static final int NODEALARM_FIELD_NUMBER = 5;
    private MsgNode1V1M5.NodeAlarm nodeAlarm_;
    /**
     * <code>optional .NodeAlarm nodeAlarm = 5;</code>
     */
    public boolean hasNodeAlarm() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .NodeAlarm nodeAlarm = 5;</code>
     */
    public MsgNode1V1M5.NodeAlarm getNodeAlarm() {
      return nodeAlarm_;
    }

    // optional uint32 nodeAlarmSet = 6;
    public static final int NODEALARMSET_FIELD_NUMBER = 6;
    private int nodeAlarmSet_;
    /**
     * <code>optional uint32 nodeAlarmSet = 6;</code>
     */
    public boolean hasNodeAlarmSet() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 nodeAlarmSet = 6;</code>
     */
    public int getNodeAlarmSet() {
      return nodeAlarmSet_;
    }

    // optional uint32 confirm = 7;
    public static final int CONFIRM_FIELD_NUMBER = 7;
    private int confirm_;
    /**
     * <code>optional uint32 confirm = 7;</code>
     */
    public boolean hasConfirm() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 confirm = 7;</code>
     */
    public int getConfirm() {
      return confirm_;
    }

    // optional .SmokeCtrl smokeCtrl = 8;
    public static final int SMOKECTRL_FIELD_NUMBER = 8;
    private MsgNode1V1M5.SmokeCtrl smokeCtrl_;
    /**
     * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
     */
    public boolean hasSmokeCtrl() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
     */
    public MsgNode1V1M5.SmokeCtrl getSmokeCtrl() {
      return smokeCtrl_;
    }

    // optional uint32 uploadRepeat = 9;
    public static final int UPLOADREPEAT_FIELD_NUMBER = 9;
    private int uploadRepeat_;
    /**
     * <code>optional uint32 uploadRepeat = 9;</code>
     */
    public boolean hasUploadRepeat() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 uploadRepeat = 9;</code>
     */
    public int getUploadRepeat() {
      return uploadRepeat_;
    }

    // optional uint32 alarmUploadInterval = 10;
    public static final int ALARMUPLOADINTERVAL_FIELD_NUMBER = 10;
    private int alarmUploadInterval_;
    /**
     * <code>optional uint32 alarmUploadInterval = 10;</code>
     */
    public boolean hasAlarmUploadInterval() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 alarmUploadInterval = 10;</code>
     */
    public int getAlarmUploadInterval() {
      return alarmUploadInterval_;
    }

    // optional uint32 alarmUploadNb = 11;
    public static final int ALARMUPLOADNB_FIELD_NUMBER = 11;
    private int alarmUploadNb_;
    /**
     * <code>optional uint32 alarmUploadNb = 11;</code>
     */
    public boolean hasAlarmUploadNb() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 alarmUploadNb = 11;</code>
     */
    public int getAlarmUploadNb() {
      return alarmUploadNb_;
    }

    // optional .TrackerCtrl trackerCtrl = 12;
    public static final int TRACKERCTRL_FIELD_NUMBER = 12;
    private MsgNode1V1M5.TrackerCtrl trackerCtrl_;
    /**
     * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
     */
    public boolean hasTrackerCtrl() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
     */
    public MsgNode1V1M5.TrackerCtrl getTrackerCtrl() {
      return trackerCtrl_;
    }

    // optional uint32 trackerEmergencyTime = 13;
    public static final int TRACKEREMERGENCYTIME_FIELD_NUMBER = 13;
    private int trackerEmergencyTime_;
    /**
     * <code>optional uint32 trackerEmergencyTime = 13;</code>
     */
    public boolean hasTrackerEmergencyTime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 trackerEmergencyTime = 13;</code>
     */
    public int getTrackerEmergencyTime() {
      return trackerEmergencyTime_;
    }

    private void initFields() {
      cmd_ = MsgNode1V1M5.AppCmd.APP_CMD_NONE;
      uploadInterval_ = 0;
      syncTime_ = 0;
      nodeState_ = MsgNode1V1M5.NodeState.NODE_STATE_UNKNOWN;
      nodeAlarm_ = MsgNode1V1M5.NodeAlarm.NODE_ALARM_NONE;
      nodeAlarmSet_ = 0;
      confirm_ = 0;
      smokeCtrl_ = MsgNode1V1M5.SmokeCtrl.SMOKE_CTRL_NONE;
      uploadRepeat_ = 0;
      alarmUploadInterval_ = 0;
      alarmUploadNb_ = 0;
      trackerCtrl_ = MsgNode1V1M5.TrackerCtrl.TRACKER_Ctrl;
      trackerEmergencyTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, uploadInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, syncTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, nodeState_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, nodeAlarm_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, nodeAlarmSet_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, confirm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, smokeCtrl_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, uploadRepeat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, alarmUploadInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, alarmUploadNb_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(12, trackerCtrl_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, trackerEmergencyTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cmd_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, uploadInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, syncTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, nodeState_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, nodeAlarm_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, nodeAlarmSet_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, confirm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, smokeCtrl_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, uploadRepeat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, alarmUploadInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, alarmUploadNb_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, trackerCtrl_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, trackerEmergencyTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.AppParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.AppParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.AppParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.AppParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.AppParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.AppParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.AppParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.AppParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.AppParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.AppParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.AppParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AppParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.AppParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_AppParam_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_AppParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.AppParam.class, MsgNode1V1M5.AppParam.Builder.class);
      }

      // Construct using MsgNode1V1M5.AppParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cmd_ = MsgNode1V1M5.AppCmd.APP_CMD_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        uploadInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        syncTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        nodeState_ = MsgNode1V1M5.NodeState.NODE_STATE_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000008);
        nodeAlarm_ = MsgNode1V1M5.NodeAlarm.NODE_ALARM_NONE;
        bitField0_ = (bitField0_ & ~0x00000010);
        nodeAlarmSet_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        confirm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        smokeCtrl_ = MsgNode1V1M5.SmokeCtrl.SMOKE_CTRL_NONE;
        bitField0_ = (bitField0_ & ~0x00000080);
        uploadRepeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        alarmUploadInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        alarmUploadNb_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        trackerCtrl_ = MsgNode1V1M5.TrackerCtrl.TRACKER_Ctrl;
        bitField0_ = (bitField0_ & ~0x00000800);
        trackerEmergencyTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_AppParam_descriptor;
      }

      public MsgNode1V1M5.AppParam getDefaultInstanceForType() {
        return MsgNode1V1M5.AppParam.getDefaultInstance();
      }

      public MsgNode1V1M5.AppParam build() {
        MsgNode1V1M5.AppParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.AppParam buildPartial() {
        MsgNode1V1M5.AppParam result = new MsgNode1V1M5.AppParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uploadInterval_ = uploadInterval_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.syncTime_ = syncTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nodeState_ = nodeState_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nodeAlarm_ = nodeAlarm_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nodeAlarmSet_ = nodeAlarmSet_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.confirm_ = confirm_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.smokeCtrl_ = smokeCtrl_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.uploadRepeat_ = uploadRepeat_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.alarmUploadInterval_ = alarmUploadInterval_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.alarmUploadNb_ = alarmUploadNb_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.trackerCtrl_ = trackerCtrl_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.trackerEmergencyTime_ = trackerEmergencyTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.AppParam) {
          return mergeFrom((MsgNode1V1M5.AppParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.AppParam other) {
        if (other == MsgNode1V1M5.AppParam.getDefaultInstance()) return this;
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasUploadInterval()) {
          setUploadInterval(other.getUploadInterval());
        }
        if (other.hasSyncTime()) {
          setSyncTime(other.getSyncTime());
        }
        if (other.hasNodeState()) {
          setNodeState(other.getNodeState());
        }
        if (other.hasNodeAlarm()) {
          setNodeAlarm(other.getNodeAlarm());
        }
        if (other.hasNodeAlarmSet()) {
          setNodeAlarmSet(other.getNodeAlarmSet());
        }
        if (other.hasConfirm()) {
          setConfirm(other.getConfirm());
        }
        if (other.hasSmokeCtrl()) {
          setSmokeCtrl(other.getSmokeCtrl());
        }
        if (other.hasUploadRepeat()) {
          setUploadRepeat(other.getUploadRepeat());
        }
        if (other.hasAlarmUploadInterval()) {
          setAlarmUploadInterval(other.getAlarmUploadInterval());
        }
        if (other.hasAlarmUploadNb()) {
          setAlarmUploadNb(other.getAlarmUploadNb());
        }
        if (other.hasTrackerCtrl()) {
          setTrackerCtrl(other.getTrackerCtrl());
        }
        if (other.hasTrackerEmergencyTime()) {
          setTrackerEmergencyTime(other.getTrackerEmergencyTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.AppParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.AppParam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .AppCmd cmd = 1;
      private MsgNode1V1M5.AppCmd cmd_ = MsgNode1V1M5.AppCmd.APP_CMD_NONE;
      /**
       * <code>optional .AppCmd cmd = 1;</code>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .AppCmd cmd = 1;</code>
       */
      public MsgNode1V1M5.AppCmd getCmd() {
        return cmd_;
      }
      /**
       * <code>optional .AppCmd cmd = 1;</code>
       */
      public Builder setCmd(MsgNode1V1M5.AppCmd value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .AppCmd cmd = 1;</code>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = MsgNode1V1M5.AppCmd.APP_CMD_NONE;
        onChanged();
        return this;
      }

      // optional uint32 uploadInterval = 2;
      private int uploadInterval_ ;
      /**
       * <code>optional uint32 uploadInterval = 2;</code>
       */
      public boolean hasUploadInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 uploadInterval = 2;</code>
       */
      public int getUploadInterval() {
        return uploadInterval_;
      }
      /**
       * <code>optional uint32 uploadInterval = 2;</code>
       */
      public Builder setUploadInterval(int value) {
        bitField0_ |= 0x00000002;
        uploadInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uploadInterval = 2;</code>
       */
      public Builder clearUploadInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uploadInterval_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 syncTime = 3;
      private int syncTime_ ;
      /**
       * <code>optional uint32 syncTime = 3;</code>
       */
      public boolean hasSyncTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 syncTime = 3;</code>
       */
      public int getSyncTime() {
        return syncTime_;
      }
      /**
       * <code>optional uint32 syncTime = 3;</code>
       */
      public Builder setSyncTime(int value) {
        bitField0_ |= 0x00000004;
        syncTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 syncTime = 3;</code>
       */
      public Builder clearSyncTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        syncTime_ = 0;
        onChanged();
        return this;
      }

      // optional .NodeState nodeState = 4;
      private MsgNode1V1M5.NodeState nodeState_ = MsgNode1V1M5.NodeState.NODE_STATE_UNKNOWN;
      /**
       * <code>optional .NodeState nodeState = 4;</code>
       */
      public boolean hasNodeState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .NodeState nodeState = 4;</code>
       */
      public MsgNode1V1M5.NodeState getNodeState() {
        return nodeState_;
      }
      /**
       * <code>optional .NodeState nodeState = 4;</code>
       */
      public Builder setNodeState(MsgNode1V1M5.NodeState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        nodeState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .NodeState nodeState = 4;</code>
       */
      public Builder clearNodeState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nodeState_ = MsgNode1V1M5.NodeState.NODE_STATE_UNKNOWN;
        onChanged();
        return this;
      }

      // optional .NodeAlarm nodeAlarm = 5;
      private MsgNode1V1M5.NodeAlarm nodeAlarm_ = MsgNode1V1M5.NodeAlarm.NODE_ALARM_NONE;
      /**
       * <code>optional .NodeAlarm nodeAlarm = 5;</code>
       */
      public boolean hasNodeAlarm() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .NodeAlarm nodeAlarm = 5;</code>
       */
      public MsgNode1V1M5.NodeAlarm getNodeAlarm() {
        return nodeAlarm_;
      }
      /**
       * <code>optional .NodeAlarm nodeAlarm = 5;</code>
       */
      public Builder setNodeAlarm(MsgNode1V1M5.NodeAlarm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        nodeAlarm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .NodeAlarm nodeAlarm = 5;</code>
       */
      public Builder clearNodeAlarm() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nodeAlarm_ = MsgNode1V1M5.NodeAlarm.NODE_ALARM_NONE;
        onChanged();
        return this;
      }

      // optional uint32 nodeAlarmSet = 6;
      private int nodeAlarmSet_ ;
      /**
       * <code>optional uint32 nodeAlarmSet = 6;</code>
       */
      public boolean hasNodeAlarmSet() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 nodeAlarmSet = 6;</code>
       */
      public int getNodeAlarmSet() {
        return nodeAlarmSet_;
      }
      /**
       * <code>optional uint32 nodeAlarmSet = 6;</code>
       */
      public Builder setNodeAlarmSet(int value) {
        bitField0_ |= 0x00000020;
        nodeAlarmSet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 nodeAlarmSet = 6;</code>
       */
      public Builder clearNodeAlarmSet() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nodeAlarmSet_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 confirm = 7;
      private int confirm_ ;
      /**
       * <code>optional uint32 confirm = 7;</code>
       */
      public boolean hasConfirm() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 confirm = 7;</code>
       */
      public int getConfirm() {
        return confirm_;
      }
      /**
       * <code>optional uint32 confirm = 7;</code>
       */
      public Builder setConfirm(int value) {
        bitField0_ |= 0x00000040;
        confirm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 confirm = 7;</code>
       */
      public Builder clearConfirm() {
        bitField0_ = (bitField0_ & ~0x00000040);
        confirm_ = 0;
        onChanged();
        return this;
      }

      // optional .SmokeCtrl smokeCtrl = 8;
      private MsgNode1V1M5.SmokeCtrl smokeCtrl_ = MsgNode1V1M5.SmokeCtrl.SMOKE_CTRL_NONE;
      /**
       * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
       */
      public boolean hasSmokeCtrl() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
       */
      public MsgNode1V1M5.SmokeCtrl getSmokeCtrl() {
        return smokeCtrl_;
      }
      /**
       * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
       */
      public Builder setSmokeCtrl(MsgNode1V1M5.SmokeCtrl value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        smokeCtrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .SmokeCtrl smokeCtrl = 8;</code>
       */
      public Builder clearSmokeCtrl() {
        bitField0_ = (bitField0_ & ~0x00000080);
        smokeCtrl_ = MsgNode1V1M5.SmokeCtrl.SMOKE_CTRL_NONE;
        onChanged();
        return this;
      }

      // optional uint32 uploadRepeat = 9;
      private int uploadRepeat_ ;
      /**
       * <code>optional uint32 uploadRepeat = 9;</code>
       */
      public boolean hasUploadRepeat() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 uploadRepeat = 9;</code>
       */
      public int getUploadRepeat() {
        return uploadRepeat_;
      }
      /**
       * <code>optional uint32 uploadRepeat = 9;</code>
       */
      public Builder setUploadRepeat(int value) {
        bitField0_ |= 0x00000100;
        uploadRepeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uploadRepeat = 9;</code>
       */
      public Builder clearUploadRepeat() {
        bitField0_ = (bitField0_ & ~0x00000100);
        uploadRepeat_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 alarmUploadInterval = 10;
      private int alarmUploadInterval_ ;
      /**
       * <code>optional uint32 alarmUploadInterval = 10;</code>
       */
      public boolean hasAlarmUploadInterval() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 alarmUploadInterval = 10;</code>
       */
      public int getAlarmUploadInterval() {
        return alarmUploadInterval_;
      }
      /**
       * <code>optional uint32 alarmUploadInterval = 10;</code>
       */
      public Builder setAlarmUploadInterval(int value) {
        bitField0_ |= 0x00000200;
        alarmUploadInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 alarmUploadInterval = 10;</code>
       */
      public Builder clearAlarmUploadInterval() {
        bitField0_ = (bitField0_ & ~0x00000200);
        alarmUploadInterval_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 alarmUploadNb = 11;
      private int alarmUploadNb_ ;
      /**
       * <code>optional uint32 alarmUploadNb = 11;</code>
       */
      public boolean hasAlarmUploadNb() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 alarmUploadNb = 11;</code>
       */
      public int getAlarmUploadNb() {
        return alarmUploadNb_;
      }
      /**
       * <code>optional uint32 alarmUploadNb = 11;</code>
       */
      public Builder setAlarmUploadNb(int value) {
        bitField0_ |= 0x00000400;
        alarmUploadNb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 alarmUploadNb = 11;</code>
       */
      public Builder clearAlarmUploadNb() {
        bitField0_ = (bitField0_ & ~0x00000400);
        alarmUploadNb_ = 0;
        onChanged();
        return this;
      }

      // optional .TrackerCtrl trackerCtrl = 12;
      private MsgNode1V1M5.TrackerCtrl trackerCtrl_ = MsgNode1V1M5.TrackerCtrl.TRACKER_Ctrl;
      /**
       * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
       */
      public boolean hasTrackerCtrl() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
       */
      public MsgNode1V1M5.TrackerCtrl getTrackerCtrl() {
        return trackerCtrl_;
      }
      /**
       * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
       */
      public Builder setTrackerCtrl(MsgNode1V1M5.TrackerCtrl value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        trackerCtrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .TrackerCtrl trackerCtrl = 12;</code>
       */
      public Builder clearTrackerCtrl() {
        bitField0_ = (bitField0_ & ~0x00000800);
        trackerCtrl_ = MsgNode1V1M5.TrackerCtrl.TRACKER_Ctrl;
        onChanged();
        return this;
      }

      // optional uint32 trackerEmergencyTime = 13;
      private int trackerEmergencyTime_ ;
      /**
       * <code>optional uint32 trackerEmergencyTime = 13;</code>
       */
      public boolean hasTrackerEmergencyTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 trackerEmergencyTime = 13;</code>
       */
      public int getTrackerEmergencyTime() {
        return trackerEmergencyTime_;
      }
      /**
       * <code>optional uint32 trackerEmergencyTime = 13;</code>
       */
      public Builder setTrackerEmergencyTime(int value) {
        bitField0_ |= 0x00001000;
        trackerEmergencyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 trackerEmergencyTime = 13;</code>
       */
      public Builder clearTrackerEmergencyTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        trackerEmergencyTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AppParam)
    }

    static {
      defaultInstance = new AppParam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AppParam)
  }

  public interface MsgNodeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 id = 1;
    /**
     * <code>optional uint32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     */
    int getId();

    // optional uint32 cmd = 2;
    /**
     * <code>optional uint32 cmd = 2;</code>
     */
    boolean hasCmd();
    /**
     * <code>optional uint32 cmd = 2;</code>
     */
    int getCmd();

    // optional uint32 cmdRet = 3;
    /**
     * <code>optional uint32 cmdRet = 3;</code>
     */
    boolean hasCmdRet();
    /**
     * <code>optional uint32 cmdRet = 3;</code>
     */
    int getCmdRet();

    // optional .LoraParam loraParam = 4;
    /**
     * <code>optional .LoraParam loraParam = 4;</code>
     */
    boolean hasLoraParam();
    /**
     * <code>optional .LoraParam loraParam = 4;</code>
     */
    MsgNode1V1M5.LoraParam getLoraParam();
    /**
     * <code>optional .LoraParam loraParam = 4;</code>
     */
    MsgNode1V1M5.LoraParamOrBuilder getLoraParamOrBuilder();

    // optional .BleParam bleParam = 5;
    /**
     * <code>optional .BleParam bleParam = 5;</code>
     */
    boolean hasBleParam();
    /**
     * <code>optional .BleParam bleParam = 5;</code>
     */
    MsgNode1V1M5.BleParam getBleParam();
    /**
     * <code>optional .BleParam bleParam = 5;</code>
     */
    MsgNode1V1M5.BleParamOrBuilder getBleParamOrBuilder();

    // optional .AppParam appParam = 6;
    /**
     * <code>optional .AppParam appParam = 6;</code>
     */
    boolean hasAppParam();
    /**
     * <code>optional .AppParam appParam = 6;</code>
     */
    MsgNode1V1M5.AppParam getAppParam();
    /**
     * <code>optional .AppParam appParam = 6;</code>
     */
    MsgNode1V1M5.AppParamOrBuilder getAppParamOrBuilder();

    // optional sint32 battery = 7;
    /**
     * <code>optional sint32 battery = 7;</code>
     */
    boolean hasBattery();
    /**
     * <code>optional sint32 battery = 7;</code>
     */
    int getBattery();

    // optional .GpsData gps = 8;
    /**
     * <code>optional .GpsData gps = 8;</code>
     */
    boolean hasGps();
    /**
     * <code>optional .GpsData gps = 8;</code>
     */
    MsgNode1V1M5.GpsData getGps();
    /**
     * <code>optional .GpsData gps = 8;</code>
     */
    MsgNode1V1M5.GpsDataOrBuilder getGpsOrBuilder();

    // optional .AxisData acceleration = 9;
    /**
     * <code>optional .AxisData acceleration = 9;</code>
     */
    boolean hasAcceleration();
    /**
     * <code>optional .AxisData acceleration = 9;</code>
     */
    MsgNode1V1M5.AxisData getAcceleration();
    /**
     * <code>optional .AxisData acceleration = 9;</code>
     */
    MsgNode1V1M5.AxisDataOrBuilder getAccelerationOrBuilder();

    // optional .AxisData magnetism = 10;
    /**
     * <code>optional .AxisData magnetism = 10;</code>
     */
    boolean hasMagnetism();
    /**
     * <code>optional .AxisData magnetism = 10;</code>
     */
    MsgNode1V1M5.AxisData getMagnetism();
    /**
     * <code>optional .AxisData magnetism = 10;</code>
     */
    MsgNode1V1M5.AxisDataOrBuilder getMagnetismOrBuilder();

    // optional .AxisData gyroscope = 11;
    /**
     * <code>optional .AxisData gyroscope = 11;</code>
     */
    boolean hasGyroscope();
    /**
     * <code>optional .AxisData gyroscope = 11;</code>
     */
    MsgNode1V1M5.AxisData getGyroscope();
    /**
     * <code>optional .AxisData gyroscope = 11;</code>
     */
    MsgNode1V1M5.AxisDataOrBuilder getGyroscopeOrBuilder();

    // optional .SensorData temperature = 12;
    /**
     * <code>optional .SensorData temperature = 12;</code>
     */
    boolean hasTemperature();
    /**
     * <code>optional .SensorData temperature = 12;</code>
     */
    MsgNode1V1M5.SensorData getTemperature();
    /**
     * <code>optional .SensorData temperature = 12;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getTemperatureOrBuilder();

    // optional .SensorData humidity = 13;
    /**
     * <code>optional .SensorData humidity = 13;</code>
     */
    boolean hasHumidity();
    /**
     * <code>optional .SensorData humidity = 13;</code>
     */
    MsgNode1V1M5.SensorData getHumidity();
    /**
     * <code>optional .SensorData humidity = 13;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getHumidityOrBuilder();

    // optional .SensorData light = 14;
    /**
     * <code>optional .SensorData light = 14;</code>
     */
    boolean hasLight();
    /**
     * <code>optional .SensorData light = 14;</code>
     */
    MsgNode1V1M5.SensorData getLight();
    /**
     * <code>optional .SensorData light = 14;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getLightOrBuilder();

    // optional .SensorData leak = 15;
    /**
     * <code>optional .SensorData leak = 15;</code>
     */
    boolean hasLeak();
    /**
     * <code>optional .SensorData leak = 15;</code>
     */
    MsgNode1V1M5.SensorData getLeak();
    /**
     * <code>optional .SensorData leak = 15;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getLeakOrBuilder();

    // optional .SensorData co = 16;
    /**
     * <code>optional .SensorData co = 16;</code>
     */
    boolean hasCo();
    /**
     * <code>optional .SensorData co = 16;</code>
     */
    MsgNode1V1M5.SensorData getCo();
    /**
     * <code>optional .SensorData co = 16;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getCoOrBuilder();

    // optional .SensorData co2 = 17;
    /**
     * <code>optional .SensorData co2 = 17;</code>
     */
    boolean hasCo2();
    /**
     * <code>optional .SensorData co2 = 17;</code>
     */
    MsgNode1V1M5.SensorData getCo2();
    /**
     * <code>optional .SensorData co2 = 17;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getCo2OrBuilder();

    // optional .SensorData so2 = 18;
    /**
     * <code>optional .SensorData so2 = 18;</code>
     */
    boolean hasSo2();
    /**
     * <code>optional .SensorData so2 = 18;</code>
     */
    MsgNode1V1M5.SensorData getSo2();
    /**
     * <code>optional .SensorData so2 = 18;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getSo2OrBuilder();

    // optional .SensorData no2 = 19;
    /**
     * <code>optional .SensorData no2 = 19;</code>
     */
    boolean hasNo2();
    /**
     * <code>optional .SensorData no2 = 19;</code>
     */
    MsgNode1V1M5.SensorData getNo2();
    /**
     * <code>optional .SensorData no2 = 19;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getNo2OrBuilder();

    // optional .SensorData ch4 = 20;
    /**
     * <code>optional .SensorData ch4 = 20;</code>
     */
    boolean hasCh4();
    /**
     * <code>optional .SensorData ch4 = 20;</code>
     */
    MsgNode1V1M5.SensorData getCh4();
    /**
     * <code>optional .SensorData ch4 = 20;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getCh4OrBuilder();

    // optional .SensorData ch2o = 21;
    /**
     * <code>optional .SensorData ch2o = 21;</code>
     */
    boolean hasCh2O();
    /**
     * <code>optional .SensorData ch2o = 21;</code>
     */
    MsgNode1V1M5.SensorData getCh2O();
    /**
     * <code>optional .SensorData ch2o = 21;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getCh2OOrBuilder();

    // optional .SensorData lpg = 22;
    /**
     * <code>optional .SensorData lpg = 22;</code>
     */
    boolean hasLpg();
    /**
     * <code>optional .SensorData lpg = 22;</code>
     */
    MsgNode1V1M5.SensorData getLpg();
    /**
     * <code>optional .SensorData lpg = 22;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getLpgOrBuilder();

    // optional .SensorData o3 = 23;
    /**
     * <code>optional .SensorData o3 = 23;</code>
     */
    boolean hasO3();
    /**
     * <code>optional .SensorData o3 = 23;</code>
     */
    MsgNode1V1M5.SensorData getO3();
    /**
     * <code>optional .SensorData o3 = 23;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getO3OrBuilder();

    // optional .SensorData pm1 = 24;
    /**
     * <code>optional .SensorData pm1 = 24;</code>
     */
    boolean hasPm1();
    /**
     * <code>optional .SensorData pm1 = 24;</code>
     */
    MsgNode1V1M5.SensorData getPm1();
    /**
     * <code>optional .SensorData pm1 = 24;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getPm1OrBuilder();

    // optional .SensorData pm2_5 = 25;
    /**
     * <code>optional .SensorData pm2_5 = 25;</code>
     */
    boolean hasPm25();
    /**
     * <code>optional .SensorData pm2_5 = 25;</code>
     */
    MsgNode1V1M5.SensorData getPm25();
    /**
     * <code>optional .SensorData pm2_5 = 25;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getPm25OrBuilder();

    // optional .SensorData pm10 = 26;
    /**
     * <code>optional .SensorData pm10 = 26;</code>
     */
    boolean hasPm10();
    /**
     * <code>optional .SensorData pm10 = 26;</code>
     */
    MsgNode1V1M5.SensorData getPm10();
    /**
     * <code>optional .SensorData pm10 = 26;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getPm10OrBuilder();

    // optional .SensorData angle = 27;
    /**
     * <code>optional .SensorData angle = 27;</code>
     */
    boolean hasAngle();
    /**
     * <code>optional .SensorData angle = 27;</code>
     */
    MsgNode1V1M5.SensorData getAngle();
    /**
     * <code>optional .SensorData angle = 27;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getAngleOrBuilder();

    // optional .SensorData cover = 28;
    /**
     * <code>optional .SensorData cover = 28;</code>
     */
    boolean hasCover();
    /**
     * <code>optional .SensorData cover = 28;</code>
     */
    MsgNode1V1M5.SensorData getCover();
    /**
     * <code>optional .SensorData cover = 28;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getCoverOrBuilder();

    // optional .SensorData level = 29;
    /**
     * <code>optional .SensorData level = 29;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional .SensorData level = 29;</code>
     */
    MsgNode1V1M5.SensorData getLevel();
    /**
     * <code>optional .SensorData level = 29;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getLevelOrBuilder();

    // optional .SensorData smoke = 30;
    /**
     * <code>optional .SensorData smoke = 30;</code>
     */
    boolean hasSmoke();
    /**
     * <code>optional .SensorData smoke = 30;</code>
     */
    MsgNode1V1M5.SensorData getSmoke();
    /**
     * <code>optional .SensorData smoke = 30;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getSmokeOrBuilder();

    // optional .SensorData pitch = 31;
    /**
     * <code>optional .SensorData pitch = 31;</code>
     */
    boolean hasPitch();
    /**
     * <code>optional .SensorData pitch = 31;</code>
     */
    MsgNode1V1M5.SensorData getPitch();
    /**
     * <code>optional .SensorData pitch = 31;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getPitchOrBuilder();

    // optional .SensorData roll = 32;
    /**
     * <code>optional .SensorData roll = 32;</code>
     */
    boolean hasRoll();
    /**
     * <code>optional .SensorData roll = 32;</code>
     */
    MsgNode1V1M5.SensorData getRoll();
    /**
     * <code>optional .SensorData roll = 32;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getRollOrBuilder();

    // optional .SensorData yaw = 33;
    /**
     * <code>optional .SensorData yaw = 33;</code>
     */
    boolean hasYaw();
    /**
     * <code>optional .SensorData yaw = 33;</code>
     */
    MsgNode1V1M5.SensorData getYaw();
    /**
     * <code>optional .SensorData yaw = 33;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getYawOrBuilder();

    // optional .SensorDataInt flame = 34;
    /**
     * <code>optional .SensorDataInt flame = 34;</code>
     */
    boolean hasFlame();
    /**
     * <code>optional .SensorDataInt flame = 34;</code>
     */
    MsgNode1V1M5.SensorDataInt getFlame();
    /**
     * <code>optional .SensorDataInt flame = 34;</code>
     */
    MsgNode1V1M5.SensorDataIntOrBuilder getFlameOrBuilder();

    // optional .SensorData artificialGas = 35;
    /**
     * <code>optional .SensorData artificialGas = 35;</code>
     */
    boolean hasArtificialGas();
    /**
     * <code>optional .SensorData artificialGas = 35;</code>
     */
    MsgNode1V1M5.SensorData getArtificialGas();
    /**
     * <code>optional .SensorData artificialGas = 35;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getArtificialGasOrBuilder();

    // optional .MultiSensorDataInt multiTemp = 36;
    /**
     * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
     */
    boolean hasMultiTemp();
    /**
     * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
     */
    MsgNode1V1M5.MultiSensorDataInt getMultiTemp();
    /**
     * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
     */
    MsgNode1V1M5.MultiSensorDataIntOrBuilder getMultiTempOrBuilder();

    // optional .SensorData waterPressure = 37;
    /**
     * <code>optional .SensorData waterPressure = 37;</code>
     */
    boolean hasWaterPressure();
    /**
     * <code>optional .SensorData waterPressure = 37;</code>
     */
    MsgNode1V1M5.SensorData getWaterPressure();
    /**
     * <code>optional .SensorData waterPressure = 37;</code>
     */
    MsgNode1V1M5.SensorDataOrBuilder getWaterPressureOrBuilder();

    // optional .iBeacon ibeacon = 38;
    /**
     * <code>optional .iBeacon ibeacon = 38;</code>
     */
    boolean hasIbeacon();
    /**
     * <code>optional .iBeacon ibeacon = 38;</code>
     */
    MsgNode1V1M5.iBeacon getIbeacon();
    /**
     * <code>optional .iBeacon ibeacon = 38;</code>
     */
    MsgNode1V1M5.iBeaconOrBuilder getIbeaconOrBuilder();
  }
  /**
   * Protobuf type {@code MsgNode}
   */
  public static final class MsgNode extends
      com.google.protobuf.GeneratedMessage
      implements MsgNodeOrBuilder {
    // Use MsgNode.newBuilder() to construct.
    private MsgNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MsgNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MsgNode defaultInstance;
    public static MsgNode getDefaultInstance() {
      return defaultInstance;
    }

    public MsgNode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MsgNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cmd_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cmdRet_ = input.readUInt32();
              break;
            }
            case 34: {
              MsgNode1V1M5.LoraParam.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = loraParam_.toBuilder();
              }
              loraParam_ = input.readMessage(MsgNode1V1M5.LoraParam.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loraParam_);
                loraParam_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              MsgNode1V1M5.BleParam.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = bleParam_.toBuilder();
              }
              bleParam_ = input.readMessage(MsgNode1V1M5.BleParam.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bleParam_);
                bleParam_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              MsgNode1V1M5.AppParam.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = appParam_.toBuilder();
              }
              appParam_ = input.readMessage(MsgNode1V1M5.AppParam.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(appParam_);
                appParam_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              battery_ = input.readSInt32();
              break;
            }
            case 66: {
              MsgNode1V1M5.GpsData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = gps_.toBuilder();
              }
              gps_ = input.readMessage(MsgNode1V1M5.GpsData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gps_);
                gps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              MsgNode1V1M5.AxisData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = acceleration_.toBuilder();
              }
              acceleration_ = input.readMessage(MsgNode1V1M5.AxisData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(acceleration_);
                acceleration_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              MsgNode1V1M5.AxisData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = magnetism_.toBuilder();
              }
              magnetism_ = input.readMessage(MsgNode1V1M5.AxisData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(magnetism_);
                magnetism_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              MsgNode1V1M5.AxisData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = gyroscope_.toBuilder();
              }
              gyroscope_ = input.readMessage(MsgNode1V1M5.AxisData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gyroscope_);
                gyroscope_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = temperature_.toBuilder();
              }
              temperature_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(temperature_);
                temperature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 106: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = humidity_.toBuilder();
              }
              humidity_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(humidity_);
                humidity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 114: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = light_.toBuilder();
              }
              light_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(light_);
                light_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 122: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = leak_.toBuilder();
              }
              leak_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leak_);
                leak_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 130: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = co_.toBuilder();
              }
              co_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(co_);
                co_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 138: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = co2_.toBuilder();
              }
              co2_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(co2_);
                co2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 146: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = so2_.toBuilder();
              }
              so2_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(so2_);
                so2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 154: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = no2_.toBuilder();
              }
              no2_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(no2_);
                no2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 162: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = ch4_.toBuilder();
              }
              ch4_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ch4_);
                ch4_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 170: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = ch2O_.toBuilder();
              }
              ch2O_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ch2O_);
                ch2O_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 178: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = lpg_.toBuilder();
              }
              lpg_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lpg_);
                lpg_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 186: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = o3_.toBuilder();
              }
              o3_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(o3_);
                o3_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 194: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = pm1_.toBuilder();
              }
              pm1_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pm1_);
                pm1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 202: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = pm25_.toBuilder();
              }
              pm25_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pm25_);
                pm25_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
            case 210: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x02000000) == 0x02000000)) {
                subBuilder = pm10_.toBuilder();
              }
              pm10_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pm10_);
                pm10_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x02000000;
              break;
            }
            case 218: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x04000000) == 0x04000000)) {
                subBuilder = angle_.toBuilder();
              }
              angle_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angle_);
                angle_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x04000000;
              break;
            }
            case 226: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x08000000) == 0x08000000)) {
                subBuilder = cover_.toBuilder();
              }
              cover_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cover_);
                cover_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x08000000;
              break;
            }
            case 234: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x10000000) == 0x10000000)) {
                subBuilder = level_.toBuilder();
              }
              level_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(level_);
                level_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x10000000;
              break;
            }
            case 242: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x20000000) == 0x20000000)) {
                subBuilder = smoke_.toBuilder();
              }
              smoke_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(smoke_);
                smoke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x20000000;
              break;
            }
            case 250: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = pitch_.toBuilder();
              }
              pitch_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pitch_);
                pitch_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 258: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField0_ & 0x80000000) == 0x80000000)) {
                subBuilder = roll_.toBuilder();
              }
              roll_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(roll_);
                roll_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x80000000;
              break;
            }
            case 266: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField1_ & 0x00000001) == 0x00000001)) {
                subBuilder = yaw_.toBuilder();
              }
              yaw_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(yaw_);
                yaw_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000001;
              break;
            }
            case 274: {
              MsgNode1V1M5.SensorDataInt.Builder subBuilder = null;
              if (((bitField1_ & 0x00000002) == 0x00000002)) {
                subBuilder = flame_.toBuilder();
              }
              flame_ = input.readMessage(MsgNode1V1M5.SensorDataInt.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flame_);
                flame_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000002;
              break;
            }
            case 282: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField1_ & 0x00000004) == 0x00000004)) {
                subBuilder = artificialGas_.toBuilder();
              }
              artificialGas_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(artificialGas_);
                artificialGas_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000004;
              break;
            }
            case 290: {
              MsgNode1V1M5.MultiSensorDataInt.Builder subBuilder = null;
              if (((bitField1_ & 0x00000008) == 0x00000008)) {
                subBuilder = multiTemp_.toBuilder();
              }
              multiTemp_ = input.readMessage(MsgNode1V1M5.MultiSensorDataInt.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multiTemp_);
                multiTemp_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000008;
              break;
            }
            case 298: {
              MsgNode1V1M5.SensorData.Builder subBuilder = null;
              if (((bitField1_ & 0x00000010) == 0x00000010)) {
                subBuilder = waterPressure_.toBuilder();
              }
              waterPressure_ = input.readMessage(MsgNode1V1M5.SensorData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(waterPressure_);
                waterPressure_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000010;
              break;
            }
            case 306: {
              MsgNode1V1M5.iBeacon.Builder subBuilder = null;
              if (((bitField1_ & 0x00000020) == 0x00000020)) {
                subBuilder = ibeacon_.toBuilder();
              }
              ibeacon_ = input.readMessage(MsgNode1V1M5.iBeacon.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ibeacon_);
                ibeacon_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgNode1V1M5.internal_static_MsgNode_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgNode1V1M5.internal_static_MsgNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgNode1V1M5.MsgNode.class, MsgNode1V1M5.MsgNode.Builder.class);
    }

    public static com.google.protobuf.Parser<MsgNode> PARSER =
        new com.google.protobuf.AbstractParser<MsgNode>() {
      public MsgNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgNode(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<MsgNode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // optional uint32 cmd = 2;
    public static final int CMD_FIELD_NUMBER = 2;
    private int cmd_;
    /**
     * <code>optional uint32 cmd = 2;</code>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 cmd = 2;</code>
     */
    public int getCmd() {
      return cmd_;
    }

    // optional uint32 cmdRet = 3;
    public static final int CMDRET_FIELD_NUMBER = 3;
    private int cmdRet_;
    /**
     * <code>optional uint32 cmdRet = 3;</code>
     */
    public boolean hasCmdRet() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 cmdRet = 3;</code>
     */
    public int getCmdRet() {
      return cmdRet_;
    }

    // optional .LoraParam loraParam = 4;
    public static final int LORAPARAM_FIELD_NUMBER = 4;
    private MsgNode1V1M5.LoraParam loraParam_;
    /**
     * <code>optional .LoraParam loraParam = 4;</code>
     */
    public boolean hasLoraParam() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .LoraParam loraParam = 4;</code>
     */
    public MsgNode1V1M5.LoraParam getLoraParam() {
      return loraParam_;
    }
    /**
     * <code>optional .LoraParam loraParam = 4;</code>
     */
    public MsgNode1V1M5.LoraParamOrBuilder getLoraParamOrBuilder() {
      return loraParam_;
    }

    // optional .BleParam bleParam = 5;
    public static final int BLEPARAM_FIELD_NUMBER = 5;
    private MsgNode1V1M5.BleParam bleParam_;
    /**
     * <code>optional .BleParam bleParam = 5;</code>
     */
    public boolean hasBleParam() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .BleParam bleParam = 5;</code>
     */
    public MsgNode1V1M5.BleParam getBleParam() {
      return bleParam_;
    }
    /**
     * <code>optional .BleParam bleParam = 5;</code>
     */
    public MsgNode1V1M5.BleParamOrBuilder getBleParamOrBuilder() {
      return bleParam_;
    }

    // optional .AppParam appParam = 6;
    public static final int APPPARAM_FIELD_NUMBER = 6;
    private MsgNode1V1M5.AppParam appParam_;
    /**
     * <code>optional .AppParam appParam = 6;</code>
     */
    public boolean hasAppParam() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .AppParam appParam = 6;</code>
     */
    public MsgNode1V1M5.AppParam getAppParam() {
      return appParam_;
    }
    /**
     * <code>optional .AppParam appParam = 6;</code>
     */
    public MsgNode1V1M5.AppParamOrBuilder getAppParamOrBuilder() {
      return appParam_;
    }

    // optional sint32 battery = 7;
    public static final int BATTERY_FIELD_NUMBER = 7;
    private int battery_;
    /**
     * <code>optional sint32 battery = 7;</code>
     */
    public boolean hasBattery() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 battery = 7;</code>
     */
    public int getBattery() {
      return battery_;
    }

    // optional .GpsData gps = 8;
    public static final int GPS_FIELD_NUMBER = 8;
    private MsgNode1V1M5.GpsData gps_;
    /**
     * <code>optional .GpsData gps = 8;</code>
     */
    public boolean hasGps() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .GpsData gps = 8;</code>
     */
    public MsgNode1V1M5.GpsData getGps() {
      return gps_;
    }
    /**
     * <code>optional .GpsData gps = 8;</code>
     */
    public MsgNode1V1M5.GpsDataOrBuilder getGpsOrBuilder() {
      return gps_;
    }

    // optional .AxisData acceleration = 9;
    public static final int ACCELERATION_FIELD_NUMBER = 9;
    private MsgNode1V1M5.AxisData acceleration_;
    /**
     * <code>optional .AxisData acceleration = 9;</code>
     */
    public boolean hasAcceleration() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .AxisData acceleration = 9;</code>
     */
    public MsgNode1V1M5.AxisData getAcceleration() {
      return acceleration_;
    }
    /**
     * <code>optional .AxisData acceleration = 9;</code>
     */
    public MsgNode1V1M5.AxisDataOrBuilder getAccelerationOrBuilder() {
      return acceleration_;
    }

    // optional .AxisData magnetism = 10;
    public static final int MAGNETISM_FIELD_NUMBER = 10;
    private MsgNode1V1M5.AxisData magnetism_;
    /**
     * <code>optional .AxisData magnetism = 10;</code>
     */
    public boolean hasMagnetism() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .AxisData magnetism = 10;</code>
     */
    public MsgNode1V1M5.AxisData getMagnetism() {
      return magnetism_;
    }
    /**
     * <code>optional .AxisData magnetism = 10;</code>
     */
    public MsgNode1V1M5.AxisDataOrBuilder getMagnetismOrBuilder() {
      return magnetism_;
    }

    // optional .AxisData gyroscope = 11;
    public static final int GYROSCOPE_FIELD_NUMBER = 11;
    private MsgNode1V1M5.AxisData gyroscope_;
    /**
     * <code>optional .AxisData gyroscope = 11;</code>
     */
    public boolean hasGyroscope() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .AxisData gyroscope = 11;</code>
     */
    public MsgNode1V1M5.AxisData getGyroscope() {
      return gyroscope_;
    }
    /**
     * <code>optional .AxisData gyroscope = 11;</code>
     */
    public MsgNode1V1M5.AxisDataOrBuilder getGyroscopeOrBuilder() {
      return gyroscope_;
    }

    // optional .SensorData temperature = 12;
    public static final int TEMPERATURE_FIELD_NUMBER = 12;
    private MsgNode1V1M5.SensorData temperature_;
    /**
     * <code>optional .SensorData temperature = 12;</code>
     */
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .SensorData temperature = 12;</code>
     */
    public MsgNode1V1M5.SensorData getTemperature() {
      return temperature_;
    }
    /**
     * <code>optional .SensorData temperature = 12;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getTemperatureOrBuilder() {
      return temperature_;
    }

    // optional .SensorData humidity = 13;
    public static final int HUMIDITY_FIELD_NUMBER = 13;
    private MsgNode1V1M5.SensorData humidity_;
    /**
     * <code>optional .SensorData humidity = 13;</code>
     */
    public boolean hasHumidity() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .SensorData humidity = 13;</code>
     */
    public MsgNode1V1M5.SensorData getHumidity() {
      return humidity_;
    }
    /**
     * <code>optional .SensorData humidity = 13;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getHumidityOrBuilder() {
      return humidity_;
    }

    // optional .SensorData light = 14;
    public static final int LIGHT_FIELD_NUMBER = 14;
    private MsgNode1V1M5.SensorData light_;
    /**
     * <code>optional .SensorData light = 14;</code>
     */
    public boolean hasLight() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .SensorData light = 14;</code>
     */
    public MsgNode1V1M5.SensorData getLight() {
      return light_;
    }
    /**
     * <code>optional .SensorData light = 14;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getLightOrBuilder() {
      return light_;
    }

    // optional .SensorData leak = 15;
    public static final int LEAK_FIELD_NUMBER = 15;
    private MsgNode1V1M5.SensorData leak_;
    /**
     * <code>optional .SensorData leak = 15;</code>
     */
    public boolean hasLeak() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .SensorData leak = 15;</code>
     */
    public MsgNode1V1M5.SensorData getLeak() {
      return leak_;
    }
    /**
     * <code>optional .SensorData leak = 15;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getLeakOrBuilder() {
      return leak_;
    }

    // optional .SensorData co = 16;
    public static final int CO_FIELD_NUMBER = 16;
    private MsgNode1V1M5.SensorData co_;
    /**
     * <code>optional .SensorData co = 16;</code>
     */
    public boolean hasCo() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .SensorData co = 16;</code>
     */
    public MsgNode1V1M5.SensorData getCo() {
      return co_;
    }
    /**
     * <code>optional .SensorData co = 16;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getCoOrBuilder() {
      return co_;
    }

    // optional .SensorData co2 = 17;
    public static final int CO2_FIELD_NUMBER = 17;
    private MsgNode1V1M5.SensorData co2_;
    /**
     * <code>optional .SensorData co2 = 17;</code>
     */
    public boolean hasCo2() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .SensorData co2 = 17;</code>
     */
    public MsgNode1V1M5.SensorData getCo2() {
      return co2_;
    }
    /**
     * <code>optional .SensorData co2 = 17;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getCo2OrBuilder() {
      return co2_;
    }

    // optional .SensorData so2 = 18;
    public static final int SO2_FIELD_NUMBER = 18;
    private MsgNode1V1M5.SensorData so2_;
    /**
     * <code>optional .SensorData so2 = 18;</code>
     */
    public boolean hasSo2() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .SensorData so2 = 18;</code>
     */
    public MsgNode1V1M5.SensorData getSo2() {
      return so2_;
    }
    /**
     * <code>optional .SensorData so2 = 18;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getSo2OrBuilder() {
      return so2_;
    }

    // optional .SensorData no2 = 19;
    public static final int NO2_FIELD_NUMBER = 19;
    private MsgNode1V1M5.SensorData no2_;
    /**
     * <code>optional .SensorData no2 = 19;</code>
     */
    public boolean hasNo2() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .SensorData no2 = 19;</code>
     */
    public MsgNode1V1M5.SensorData getNo2() {
      return no2_;
    }
    /**
     * <code>optional .SensorData no2 = 19;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getNo2OrBuilder() {
      return no2_;
    }

    // optional .SensorData ch4 = 20;
    public static final int CH4_FIELD_NUMBER = 20;
    private MsgNode1V1M5.SensorData ch4_;
    /**
     * <code>optional .SensorData ch4 = 20;</code>
     */
    public boolean hasCh4() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .SensorData ch4 = 20;</code>
     */
    public MsgNode1V1M5.SensorData getCh4() {
      return ch4_;
    }
    /**
     * <code>optional .SensorData ch4 = 20;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getCh4OrBuilder() {
      return ch4_;
    }

    // optional .SensorData ch2o = 21;
    public static final int CH2O_FIELD_NUMBER = 21;
    private MsgNode1V1M5.SensorData ch2O_;
    /**
     * <code>optional .SensorData ch2o = 21;</code>
     */
    public boolean hasCh2O() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .SensorData ch2o = 21;</code>
     */
    public MsgNode1V1M5.SensorData getCh2O() {
      return ch2O_;
    }
    /**
     * <code>optional .SensorData ch2o = 21;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getCh2OOrBuilder() {
      return ch2O_;
    }

    // optional .SensorData lpg = 22;
    public static final int LPG_FIELD_NUMBER = 22;
    private MsgNode1V1M5.SensorData lpg_;
    /**
     * <code>optional .SensorData lpg = 22;</code>
     */
    public boolean hasLpg() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .SensorData lpg = 22;</code>
     */
    public MsgNode1V1M5.SensorData getLpg() {
      return lpg_;
    }
    /**
     * <code>optional .SensorData lpg = 22;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getLpgOrBuilder() {
      return lpg_;
    }

    // optional .SensorData o3 = 23;
    public static final int O3_FIELD_NUMBER = 23;
    private MsgNode1V1M5.SensorData o3_;
    /**
     * <code>optional .SensorData o3 = 23;</code>
     */
    public boolean hasO3() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .SensorData o3 = 23;</code>
     */
    public MsgNode1V1M5.SensorData getO3() {
      return o3_;
    }
    /**
     * <code>optional .SensorData o3 = 23;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getO3OrBuilder() {
      return o3_;
    }

    // optional .SensorData pm1 = 24;
    public static final int PM1_FIELD_NUMBER = 24;
    private MsgNode1V1M5.SensorData pm1_;
    /**
     * <code>optional .SensorData pm1 = 24;</code>
     */
    public boolean hasPm1() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .SensorData pm1 = 24;</code>
     */
    public MsgNode1V1M5.SensorData getPm1() {
      return pm1_;
    }
    /**
     * <code>optional .SensorData pm1 = 24;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getPm1OrBuilder() {
      return pm1_;
    }

    // optional .SensorData pm2_5 = 25;
    public static final int PM2_5_FIELD_NUMBER = 25;
    private MsgNode1V1M5.SensorData pm25_;
    /**
     * <code>optional .SensorData pm2_5 = 25;</code>
     */
    public boolean hasPm25() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .SensorData pm2_5 = 25;</code>
     */
    public MsgNode1V1M5.SensorData getPm25() {
      return pm25_;
    }
    /**
     * <code>optional .SensorData pm2_5 = 25;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getPm25OrBuilder() {
      return pm25_;
    }

    // optional .SensorData pm10 = 26;
    public static final int PM10_FIELD_NUMBER = 26;
    private MsgNode1V1M5.SensorData pm10_;
    /**
     * <code>optional .SensorData pm10 = 26;</code>
     */
    public boolean hasPm10() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .SensorData pm10 = 26;</code>
     */
    public MsgNode1V1M5.SensorData getPm10() {
      return pm10_;
    }
    /**
     * <code>optional .SensorData pm10 = 26;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getPm10OrBuilder() {
      return pm10_;
    }

    // optional .SensorData angle = 27;
    public static final int ANGLE_FIELD_NUMBER = 27;
    private MsgNode1V1M5.SensorData angle_;
    /**
     * <code>optional .SensorData angle = 27;</code>
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .SensorData angle = 27;</code>
     */
    public MsgNode1V1M5.SensorData getAngle() {
      return angle_;
    }
    /**
     * <code>optional .SensorData angle = 27;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getAngleOrBuilder() {
      return angle_;
    }

    // optional .SensorData cover = 28;
    public static final int COVER_FIELD_NUMBER = 28;
    private MsgNode1V1M5.SensorData cover_;
    /**
     * <code>optional .SensorData cover = 28;</code>
     */
    public boolean hasCover() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .SensorData cover = 28;</code>
     */
    public MsgNode1V1M5.SensorData getCover() {
      return cover_;
    }
    /**
     * <code>optional .SensorData cover = 28;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getCoverOrBuilder() {
      return cover_;
    }

    // optional .SensorData level = 29;
    public static final int LEVEL_FIELD_NUMBER = 29;
    private MsgNode1V1M5.SensorData level_;
    /**
     * <code>optional .SensorData level = 29;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .SensorData level = 29;</code>
     */
    public MsgNode1V1M5.SensorData getLevel() {
      return level_;
    }
    /**
     * <code>optional .SensorData level = 29;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getLevelOrBuilder() {
      return level_;
    }

    // optional .SensorData smoke = 30;
    public static final int SMOKE_FIELD_NUMBER = 30;
    private MsgNode1V1M5.SensorData smoke_;
    /**
     * <code>optional .SensorData smoke = 30;</code>
     */
    public boolean hasSmoke() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .SensorData smoke = 30;</code>
     */
    public MsgNode1V1M5.SensorData getSmoke() {
      return smoke_;
    }
    /**
     * <code>optional .SensorData smoke = 30;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getSmokeOrBuilder() {
      return smoke_;
    }

    // optional .SensorData pitch = 31;
    public static final int PITCH_FIELD_NUMBER = 31;
    private MsgNode1V1M5.SensorData pitch_;
    /**
     * <code>optional .SensorData pitch = 31;</code>
     */
    public boolean hasPitch() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .SensorData pitch = 31;</code>
     */
    public MsgNode1V1M5.SensorData getPitch() {
      return pitch_;
    }
    /**
     * <code>optional .SensorData pitch = 31;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getPitchOrBuilder() {
      return pitch_;
    }

    // optional .SensorData roll = 32;
    public static final int ROLL_FIELD_NUMBER = 32;
    private MsgNode1V1M5.SensorData roll_;
    /**
     * <code>optional .SensorData roll = 32;</code>
     */
    public boolean hasRoll() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .SensorData roll = 32;</code>
     */
    public MsgNode1V1M5.SensorData getRoll() {
      return roll_;
    }
    /**
     * <code>optional .SensorData roll = 32;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getRollOrBuilder() {
      return roll_;
    }

    // optional .SensorData yaw = 33;
    public static final int YAW_FIELD_NUMBER = 33;
    private MsgNode1V1M5.SensorData yaw_;
    /**
     * <code>optional .SensorData yaw = 33;</code>
     */
    public boolean hasYaw() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SensorData yaw = 33;</code>
     */
    public MsgNode1V1M5.SensorData getYaw() {
      return yaw_;
    }
    /**
     * <code>optional .SensorData yaw = 33;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getYawOrBuilder() {
      return yaw_;
    }

    // optional .SensorDataInt flame = 34;
    public static final int FLAME_FIELD_NUMBER = 34;
    private MsgNode1V1M5.SensorDataInt flame_;
    /**
     * <code>optional .SensorDataInt flame = 34;</code>
     */
    public boolean hasFlame() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .SensorDataInt flame = 34;</code>
     */
    public MsgNode1V1M5.SensorDataInt getFlame() {
      return flame_;
    }
    /**
     * <code>optional .SensorDataInt flame = 34;</code>
     */
    public MsgNode1V1M5.SensorDataIntOrBuilder getFlameOrBuilder() {
      return flame_;
    }

    // optional .SensorData artificialGas = 35;
    public static final int ARTIFICIALGAS_FIELD_NUMBER = 35;
    private MsgNode1V1M5.SensorData artificialGas_;
    /**
     * <code>optional .SensorData artificialGas = 35;</code>
     */
    public boolean hasArtificialGas() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .SensorData artificialGas = 35;</code>
     */
    public MsgNode1V1M5.SensorData getArtificialGas() {
      return artificialGas_;
    }
    /**
     * <code>optional .SensorData artificialGas = 35;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getArtificialGasOrBuilder() {
      return artificialGas_;
    }

    // optional .MultiSensorDataInt multiTemp = 36;
    public static final int MULTITEMP_FIELD_NUMBER = 36;
    private MsgNode1V1M5.MultiSensorDataInt multiTemp_;
    /**
     * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
     */
    public boolean hasMultiTemp() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
     */
    public MsgNode1V1M5.MultiSensorDataInt getMultiTemp() {
      return multiTemp_;
    }
    /**
     * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
     */
    public MsgNode1V1M5.MultiSensorDataIntOrBuilder getMultiTempOrBuilder() {
      return multiTemp_;
    }

    // optional .SensorData waterPressure = 37;
    public static final int WATERPRESSURE_FIELD_NUMBER = 37;
    private MsgNode1V1M5.SensorData waterPressure_;
    /**
     * <code>optional .SensorData waterPressure = 37;</code>
     */
    public boolean hasWaterPressure() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .SensorData waterPressure = 37;</code>
     */
    public MsgNode1V1M5.SensorData getWaterPressure() {
      return waterPressure_;
    }
    /**
     * <code>optional .SensorData waterPressure = 37;</code>
     */
    public MsgNode1V1M5.SensorDataOrBuilder getWaterPressureOrBuilder() {
      return waterPressure_;
    }

    // optional .iBeacon ibeacon = 38;
    public static final int IBEACON_FIELD_NUMBER = 38;
    private MsgNode1V1M5.iBeacon ibeacon_;
    /**
     * <code>optional .iBeacon ibeacon = 38;</code>
     */
    public boolean hasIbeacon() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .iBeacon ibeacon = 38;</code>
     */
    public MsgNode1V1M5.iBeacon getIbeacon() {
      return ibeacon_;
    }
    /**
     * <code>optional .iBeacon ibeacon = 38;</code>
     */
    public MsgNode1V1M5.iBeaconOrBuilder getIbeaconOrBuilder() {
      return ibeacon_;
    }

    private void initFields() {
      id_ = 0;
      cmd_ = 0;
      cmdRet_ = 0;
      loraParam_ = MsgNode1V1M5.LoraParam.getDefaultInstance();
      bleParam_ = MsgNode1V1M5.BleParam.getDefaultInstance();
      appParam_ = MsgNode1V1M5.AppParam.getDefaultInstance();
      battery_ = 0;
      gps_ = MsgNode1V1M5.GpsData.getDefaultInstance();
      acceleration_ = MsgNode1V1M5.AxisData.getDefaultInstance();
      magnetism_ = MsgNode1V1M5.AxisData.getDefaultInstance();
      gyroscope_ = MsgNode1V1M5.AxisData.getDefaultInstance();
      temperature_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      humidity_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      light_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      leak_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      co_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      co2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      so2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      no2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      ch4_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      ch2O_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      lpg_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      o3_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      pm1_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      pm25_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      pm10_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      angle_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      cover_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      level_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      smoke_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      pitch_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      roll_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      yaw_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      flame_ = MsgNode1V1M5.SensorDataInt.getDefaultInstance();
      artificialGas_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      multiTemp_ = MsgNode1V1M5.MultiSensorDataInt.getDefaultInstance();
      waterPressure_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      ibeacon_ = MsgNode1V1M5.iBeacon.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, cmd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, cmdRet_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, loraParam_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, bleParam_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, appParam_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, battery_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, gps_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, acceleration_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, magnetism_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, gyroscope_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, temperature_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, humidity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, light_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(15, leak_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(16, co_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, co2_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(18, so2_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(19, no2_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(20, ch4_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(21, ch2O_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(22, lpg_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(23, o3_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(24, pm1_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(25, pm25_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(26, pm10_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(27, angle_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(28, cover_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(29, level_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(30, smoke_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(31, pitch_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(32, roll_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(33, yaw_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(34, flame_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(35, artificialGas_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(36, multiTemp_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(37, waterPressure_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(38, ibeacon_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, cmd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cmdRet_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, loraParam_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, bleParam_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, appParam_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, battery_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, gps_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, acceleration_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, magnetism_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, gyroscope_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, temperature_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, humidity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, light_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, leak_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, co_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, co2_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, so2_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, no2_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, ch4_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, ch2O_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, lpg_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, o3_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, pm1_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, pm25_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, pm10_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, angle_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, cover_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, level_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, smoke_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, pitch_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, roll_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, yaw_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, flame_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, artificialGas_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, multiTemp_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, waterPressure_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, ibeacon_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static MsgNode1V1M5.MsgNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.MsgNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.MsgNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgNode1V1M5.MsgNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgNode1V1M5.MsgNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.MsgNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.MsgNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static MsgNode1V1M5.MsgNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static MsgNode1V1M5.MsgNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static MsgNode1V1M5.MsgNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MsgNode1V1M5.MsgNode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MsgNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MsgNode1V1M5.MsgNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgNode1V1M5.internal_static_MsgNode_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgNode1V1M5.internal_static_MsgNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgNode1V1M5.MsgNode.class, MsgNode1V1M5.MsgNode.Builder.class);
      }

      // Construct using MsgNode1V1M5.MsgNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLoraParamFieldBuilder();
          getBleParamFieldBuilder();
          getAppParamFieldBuilder();
          getGpsFieldBuilder();
          getAccelerationFieldBuilder();
          getMagnetismFieldBuilder();
          getGyroscopeFieldBuilder();
          getTemperatureFieldBuilder();
          getHumidityFieldBuilder();
          getLightFieldBuilder();
          getLeakFieldBuilder();
          getCoFieldBuilder();
          getCo2FieldBuilder();
          getSo2FieldBuilder();
          getNo2FieldBuilder();
          getCh4FieldBuilder();
          getCh2OFieldBuilder();
          getLpgFieldBuilder();
          getO3FieldBuilder();
          getPm1FieldBuilder();
          getPm25FieldBuilder();
          getPm10FieldBuilder();
          getAngleFieldBuilder();
          getCoverFieldBuilder();
          getLevelFieldBuilder();
          getSmokeFieldBuilder();
          getPitchFieldBuilder();
          getRollFieldBuilder();
          getYawFieldBuilder();
          getFlameFieldBuilder();
          getArtificialGasFieldBuilder();
          getMultiTempFieldBuilder();
          getWaterPressureFieldBuilder();
          getIbeaconFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cmd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cmdRet_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (loraParamBuilder_ == null) {
          loraParam_ = MsgNode1V1M5.LoraParam.getDefaultInstance();
        } else {
          loraParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (bleParamBuilder_ == null) {
          bleParam_ = MsgNode1V1M5.BleParam.getDefaultInstance();
        } else {
          bleParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (appParamBuilder_ == null) {
          appParam_ = MsgNode1V1M5.AppParam.getDefaultInstance();
        } else {
          appParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        battery_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (gpsBuilder_ == null) {
          gps_ = MsgNode1V1M5.GpsData.getDefaultInstance();
        } else {
          gpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (accelerationBuilder_ == null) {
          acceleration_ = MsgNode1V1M5.AxisData.getDefaultInstance();
        } else {
          accelerationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (magnetismBuilder_ == null) {
          magnetism_ = MsgNode1V1M5.AxisData.getDefaultInstance();
        } else {
          magnetismBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (gyroscopeBuilder_ == null) {
          gyroscope_ = MsgNode1V1M5.AxisData.getDefaultInstance();
        } else {
          gyroscopeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (temperatureBuilder_ == null) {
          temperature_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          temperatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (humidityBuilder_ == null) {
          humidity_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          humidityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (lightBuilder_ == null) {
          light_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          lightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (leakBuilder_ == null) {
          leak_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          leakBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (coBuilder_ == null) {
          co_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          coBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (co2Builder_ == null) {
          co2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          co2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (so2Builder_ == null) {
          so2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          so2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (no2Builder_ == null) {
          no2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          no2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (ch4Builder_ == null) {
          ch4_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          ch4Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (ch2OBuilder_ == null) {
          ch2O_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          ch2OBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (lpgBuilder_ == null) {
          lpg_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          lpgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (o3Builder_ == null) {
          o3_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          o3Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (pm1Builder_ == null) {
          pm1_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          pm1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        if (pm25Builder_ == null) {
          pm25_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          pm25Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        if (pm10Builder_ == null) {
          pm10_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          pm10Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        if (angleBuilder_ == null) {
          angle_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          angleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        if (coverBuilder_ == null) {
          cover_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          coverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x08000000);
        if (levelBuilder_ == null) {
          level_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          levelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x10000000);
        if (smokeBuilder_ == null) {
          smoke_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          smokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        if (pitchBuilder_ == null) {
          pitch_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          pitchBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        if (rollBuilder_ == null) {
          roll_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          rollBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        if (yawBuilder_ == null) {
          yaw_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          yawBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        if (flameBuilder_ == null) {
          flame_ = MsgNode1V1M5.SensorDataInt.getDefaultInstance();
        } else {
          flameBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        if (artificialGasBuilder_ == null) {
          artificialGas_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          artificialGasBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000004);
        if (multiTempBuilder_ == null) {
          multiTemp_ = MsgNode1V1M5.MultiSensorDataInt.getDefaultInstance();
        } else {
          multiTempBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        if (waterPressureBuilder_ == null) {
          waterPressure_ = MsgNode1V1M5.SensorData.getDefaultInstance();
        } else {
          waterPressureBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000010);
        if (ibeaconBuilder_ == null) {
          ibeacon_ = MsgNode1V1M5.iBeacon.getDefaultInstance();
        } else {
          ibeaconBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgNode1V1M5.internal_static_MsgNode_descriptor;
      }

      public MsgNode1V1M5.MsgNode getDefaultInstanceForType() {
        return MsgNode1V1M5.MsgNode.getDefaultInstance();
      }

      public MsgNode1V1M5.MsgNode build() {
        MsgNode1V1M5.MsgNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgNode1V1M5.MsgNode buildPartial() {
        MsgNode1V1M5.MsgNode result = new MsgNode1V1M5.MsgNode(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cmd_ = cmd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cmdRet_ = cmdRet_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (loraParamBuilder_ == null) {
          result.loraParam_ = loraParam_;
        } else {
          result.loraParam_ = loraParamBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (bleParamBuilder_ == null) {
          result.bleParam_ = bleParam_;
        } else {
          result.bleParam_ = bleParamBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (appParamBuilder_ == null) {
          result.appParam_ = appParam_;
        } else {
          result.appParam_ = appParamBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.battery_ = battery_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (gpsBuilder_ == null) {
          result.gps_ = gps_;
        } else {
          result.gps_ = gpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (accelerationBuilder_ == null) {
          result.acceleration_ = acceleration_;
        } else {
          result.acceleration_ = accelerationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (magnetismBuilder_ == null) {
          result.magnetism_ = magnetism_;
        } else {
          result.magnetism_ = magnetismBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (gyroscopeBuilder_ == null) {
          result.gyroscope_ = gyroscope_;
        } else {
          result.gyroscope_ = gyroscopeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (temperatureBuilder_ == null) {
          result.temperature_ = temperature_;
        } else {
          result.temperature_ = temperatureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (humidityBuilder_ == null) {
          result.humidity_ = humidity_;
        } else {
          result.humidity_ = humidityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (lightBuilder_ == null) {
          result.light_ = light_;
        } else {
          result.light_ = lightBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (leakBuilder_ == null) {
          result.leak_ = leak_;
        } else {
          result.leak_ = leakBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (coBuilder_ == null) {
          result.co_ = co_;
        } else {
          result.co_ = coBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (co2Builder_ == null) {
          result.co2_ = co2_;
        } else {
          result.co2_ = co2Builder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (so2Builder_ == null) {
          result.so2_ = so2_;
        } else {
          result.so2_ = so2Builder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (no2Builder_ == null) {
          result.no2_ = no2_;
        } else {
          result.no2_ = no2Builder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (ch4Builder_ == null) {
          result.ch4_ = ch4_;
        } else {
          result.ch4_ = ch4Builder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (ch2OBuilder_ == null) {
          result.ch2O_ = ch2O_;
        } else {
          result.ch2O_ = ch2OBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (lpgBuilder_ == null) {
          result.lpg_ = lpg_;
        } else {
          result.lpg_ = lpgBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (o3Builder_ == null) {
          result.o3_ = o3_;
        } else {
          result.o3_ = o3Builder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (pm1Builder_ == null) {
          result.pm1_ = pm1_;
        } else {
          result.pm1_ = pm1Builder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (pm25Builder_ == null) {
          result.pm25_ = pm25_;
        } else {
          result.pm25_ = pm25Builder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        if (pm10Builder_ == null) {
          result.pm10_ = pm10_;
        } else {
          result.pm10_ = pm10Builder_.build();
        }
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        if (angleBuilder_ == null) {
          result.angle_ = angle_;
        } else {
          result.angle_ = angleBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        if (coverBuilder_ == null) {
          result.cover_ = cover_;
        } else {
          result.cover_ = coverBuilder_.build();
        }
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        if (levelBuilder_ == null) {
          result.level_ = level_;
        } else {
          result.level_ = levelBuilder_.build();
        }
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        if (smokeBuilder_ == null) {
          result.smoke_ = smoke_;
        } else {
          result.smoke_ = smokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (pitchBuilder_ == null) {
          result.pitch_ = pitch_;
        } else {
          result.pitch_ = pitchBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        if (rollBuilder_ == null) {
          result.roll_ = roll_;
        } else {
          result.roll_ = rollBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        if (yawBuilder_ == null) {
          result.yaw_ = yaw_;
        } else {
          result.yaw_ = yawBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        if (flameBuilder_ == null) {
          result.flame_ = flame_;
        } else {
          result.flame_ = flameBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        if (artificialGasBuilder_ == null) {
          result.artificialGas_ = artificialGas_;
        } else {
          result.artificialGas_ = artificialGasBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        if (multiTempBuilder_ == null) {
          result.multiTemp_ = multiTemp_;
        } else {
          result.multiTemp_ = multiTempBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        if (waterPressureBuilder_ == null) {
          result.waterPressure_ = waterPressure_;
        } else {
          result.waterPressure_ = waterPressureBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        if (ibeaconBuilder_ == null) {
          result.ibeacon_ = ibeacon_;
        } else {
          result.ibeacon_ = ibeaconBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgNode1V1M5.MsgNode) {
          return mergeFrom((MsgNode1V1M5.MsgNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgNode1V1M5.MsgNode other) {
        if (other == MsgNode1V1M5.MsgNode.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        if (other.hasCmdRet()) {
          setCmdRet(other.getCmdRet());
        }
        if (other.hasLoraParam()) {
          mergeLoraParam(other.getLoraParam());
        }
        if (other.hasBleParam()) {
          mergeBleParam(other.getBleParam());
        }
        if (other.hasAppParam()) {
          mergeAppParam(other.getAppParam());
        }
        if (other.hasBattery()) {
          setBattery(other.getBattery());
        }
        if (other.hasGps()) {
          mergeGps(other.getGps());
        }
        if (other.hasAcceleration()) {
          mergeAcceleration(other.getAcceleration());
        }
        if (other.hasMagnetism()) {
          mergeMagnetism(other.getMagnetism());
        }
        if (other.hasGyroscope()) {
          mergeGyroscope(other.getGyroscope());
        }
        if (other.hasTemperature()) {
          mergeTemperature(other.getTemperature());
        }
        if (other.hasHumidity()) {
          mergeHumidity(other.getHumidity());
        }
        if (other.hasLight()) {
          mergeLight(other.getLight());
        }
        if (other.hasLeak()) {
          mergeLeak(other.getLeak());
        }
        if (other.hasCo()) {
          mergeCo(other.getCo());
        }
        if (other.hasCo2()) {
          mergeCo2(other.getCo2());
        }
        if (other.hasSo2()) {
          mergeSo2(other.getSo2());
        }
        if (other.hasNo2()) {
          mergeNo2(other.getNo2());
        }
        if (other.hasCh4()) {
          mergeCh4(other.getCh4());
        }
        if (other.hasCh2O()) {
          mergeCh2O(other.getCh2O());
        }
        if (other.hasLpg()) {
          mergeLpg(other.getLpg());
        }
        if (other.hasO3()) {
          mergeO3(other.getO3());
        }
        if (other.hasPm1()) {
          mergePm1(other.getPm1());
        }
        if (other.hasPm25()) {
          mergePm25(other.getPm25());
        }
        if (other.hasPm10()) {
          mergePm10(other.getPm10());
        }
        if (other.hasAngle()) {
          mergeAngle(other.getAngle());
        }
        if (other.hasCover()) {
          mergeCover(other.getCover());
        }
        if (other.hasLevel()) {
          mergeLevel(other.getLevel());
        }
        if (other.hasSmoke()) {
          mergeSmoke(other.getSmoke());
        }
        if (other.hasPitch()) {
          mergePitch(other.getPitch());
        }
        if (other.hasRoll()) {
          mergeRoll(other.getRoll());
        }
        if (other.hasYaw()) {
          mergeYaw(other.getYaw());
        }
        if (other.hasFlame()) {
          mergeFlame(other.getFlame());
        }
        if (other.hasArtificialGas()) {
          mergeArtificialGas(other.getArtificialGas());
        }
        if (other.hasMultiTemp()) {
          mergeMultiTemp(other.getMultiTemp());
        }
        if (other.hasWaterPressure()) {
          mergeWaterPressure(other.getWaterPressure());
        }
        if (other.hasIbeacon()) {
          mergeIbeacon(other.getIbeacon());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgNode1V1M5.MsgNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgNode1V1M5.MsgNode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // optional uint32 id = 1;
      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 cmd = 2;
      private int cmd_ ;
      /**
       * <code>optional uint32 cmd = 2;</code>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 cmd = 2;</code>
       */
      public int getCmd() {
        return cmd_;
      }
      /**
       * <code>optional uint32 cmd = 2;</code>
       */
      public Builder setCmd(int value) {
        bitField0_ |= 0x00000002;
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cmd = 2;</code>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 cmdRet = 3;
      private int cmdRet_ ;
      /**
       * <code>optional uint32 cmdRet = 3;</code>
       */
      public boolean hasCmdRet() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 cmdRet = 3;</code>
       */
      public int getCmdRet() {
        return cmdRet_;
      }
      /**
       * <code>optional uint32 cmdRet = 3;</code>
       */
      public Builder setCmdRet(int value) {
        bitField0_ |= 0x00000004;
        cmdRet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cmdRet = 3;</code>
       */
      public Builder clearCmdRet() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cmdRet_ = 0;
        onChanged();
        return this;
      }

      // optional .LoraParam loraParam = 4;
      private MsgNode1V1M5.LoraParam loraParam_ = MsgNode1V1M5.LoraParam.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          LoraParam, LoraParam.Builder, LoraParamOrBuilder> loraParamBuilder_;
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public boolean hasLoraParam() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public MsgNode1V1M5.LoraParam getLoraParam() {
        if (loraParamBuilder_ == null) {
          return loraParam_;
        } else {
          return loraParamBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public Builder setLoraParam(MsgNode1V1M5.LoraParam value) {
        if (loraParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loraParam_ = value;
          onChanged();
        } else {
          loraParamBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public Builder setLoraParam(
          MsgNode1V1M5.LoraParam.Builder builderForValue) {
        if (loraParamBuilder_ == null) {
          loraParam_ = builderForValue.build();
          onChanged();
        } else {
          loraParamBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public Builder mergeLoraParam(MsgNode1V1M5.LoraParam value) {
        if (loraParamBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              loraParam_ != MsgNode1V1M5.LoraParam.getDefaultInstance()) {
            loraParam_ =
              MsgNode1V1M5.LoraParam.newBuilder(loraParam_).mergeFrom(value).buildPartial();
          } else {
            loraParam_ = value;
          }
          onChanged();
        } else {
          loraParamBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public Builder clearLoraParam() {
        if (loraParamBuilder_ == null) {
          loraParam_ = MsgNode1V1M5.LoraParam.getDefaultInstance();
          onChanged();
        } else {
          loraParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public MsgNode1V1M5.LoraParam.Builder getLoraParamBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLoraParamFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      public MsgNode1V1M5.LoraParamOrBuilder getLoraParamOrBuilder() {
        if (loraParamBuilder_ != null) {
          return loraParamBuilder_.getMessageOrBuilder();
        } else {
          return loraParam_;
        }
      }
      /**
       * <code>optional .LoraParam loraParam = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          LoraParam, LoraParam.Builder, LoraParamOrBuilder>
          getLoraParamFieldBuilder() {
        if (loraParamBuilder_ == null) {
          loraParamBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              LoraParam, LoraParam.Builder, LoraParamOrBuilder>(
                  loraParam_,
                  getParentForChildren(),
                  isClean());
          loraParam_ = null;
        }
        return loraParamBuilder_;
      }

      // optional .BleParam bleParam = 5;
      private MsgNode1V1M5.BleParam bleParam_ = MsgNode1V1M5.BleParam.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          BleParam, BleParam.Builder, BleParamOrBuilder> bleParamBuilder_;
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public boolean hasBleParam() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public MsgNode1V1M5.BleParam getBleParam() {
        if (bleParamBuilder_ == null) {
          return bleParam_;
        } else {
          return bleParamBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public Builder setBleParam(MsgNode1V1M5.BleParam value) {
        if (bleParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bleParam_ = value;
          onChanged();
        } else {
          bleParamBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public Builder setBleParam(
          MsgNode1V1M5.BleParam.Builder builderForValue) {
        if (bleParamBuilder_ == null) {
          bleParam_ = builderForValue.build();
          onChanged();
        } else {
          bleParamBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public Builder mergeBleParam(MsgNode1V1M5.BleParam value) {
        if (bleParamBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              bleParam_ != MsgNode1V1M5.BleParam.getDefaultInstance()) {
            bleParam_ =
              MsgNode1V1M5.BleParam.newBuilder(bleParam_).mergeFrom(value).buildPartial();
          } else {
            bleParam_ = value;
          }
          onChanged();
        } else {
          bleParamBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public Builder clearBleParam() {
        if (bleParamBuilder_ == null) {
          bleParam_ = MsgNode1V1M5.BleParam.getDefaultInstance();
          onChanged();
        } else {
          bleParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public MsgNode1V1M5.BleParam.Builder getBleParamBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBleParamFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      public MsgNode1V1M5.BleParamOrBuilder getBleParamOrBuilder() {
        if (bleParamBuilder_ != null) {
          return bleParamBuilder_.getMessageOrBuilder();
        } else {
          return bleParam_;
        }
      }
      /**
       * <code>optional .BleParam bleParam = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          BleParam, BleParam.Builder, BleParamOrBuilder>
          getBleParamFieldBuilder() {
        if (bleParamBuilder_ == null) {
          bleParamBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              BleParam, BleParam.Builder, BleParamOrBuilder>(
                  bleParam_,
                  getParentForChildren(),
                  isClean());
          bleParam_ = null;
        }
        return bleParamBuilder_;
      }

      // optional .AppParam appParam = 6;
      private MsgNode1V1M5.AppParam appParam_ = MsgNode1V1M5.AppParam.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AppParam, AppParam.Builder, AppParamOrBuilder> appParamBuilder_;
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public boolean hasAppParam() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public MsgNode1V1M5.AppParam getAppParam() {
        if (appParamBuilder_ == null) {
          return appParam_;
        } else {
          return appParamBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public Builder setAppParam(MsgNode1V1M5.AppParam value) {
        if (appParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          appParam_ = value;
          onChanged();
        } else {
          appParamBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public Builder setAppParam(
          MsgNode1V1M5.AppParam.Builder builderForValue) {
        if (appParamBuilder_ == null) {
          appParam_ = builderForValue.build();
          onChanged();
        } else {
          appParamBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public Builder mergeAppParam(MsgNode1V1M5.AppParam value) {
        if (appParamBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              appParam_ != MsgNode1V1M5.AppParam.getDefaultInstance()) {
            appParam_ =
              MsgNode1V1M5.AppParam.newBuilder(appParam_).mergeFrom(value).buildPartial();
          } else {
            appParam_ = value;
          }
          onChanged();
        } else {
          appParamBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public Builder clearAppParam() {
        if (appParamBuilder_ == null) {
          appParam_ = MsgNode1V1M5.AppParam.getDefaultInstance();
          onChanged();
        } else {
          appParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public MsgNode1V1M5.AppParam.Builder getAppParamBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getAppParamFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      public MsgNode1V1M5.AppParamOrBuilder getAppParamOrBuilder() {
        if (appParamBuilder_ != null) {
          return appParamBuilder_.getMessageOrBuilder();
        } else {
          return appParam_;
        }
      }
      /**
       * <code>optional .AppParam appParam = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AppParam, AppParam.Builder, AppParamOrBuilder>
          getAppParamFieldBuilder() {
        if (appParamBuilder_ == null) {
          appParamBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AppParam, AppParam.Builder, AppParamOrBuilder>(
                  appParam_,
                  getParentForChildren(),
                  isClean());
          appParam_ = null;
        }
        return appParamBuilder_;
      }

      // optional sint32 battery = 7;
      private int battery_ ;
      /**
       * <code>optional sint32 battery = 7;</code>
       */
      public boolean hasBattery() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 battery = 7;</code>
       */
      public int getBattery() {
        return battery_;
      }
      /**
       * <code>optional sint32 battery = 7;</code>
       */
      public Builder setBattery(int value) {
        bitField0_ |= 0x00000040;
        battery_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 battery = 7;</code>
       */
      public Builder clearBattery() {
        bitField0_ = (bitField0_ & ~0x00000040);
        battery_ = 0;
        onChanged();
        return this;
      }

      // optional .GpsData gps = 8;
      private MsgNode1V1M5.GpsData gps_ = MsgNode1V1M5.GpsData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          GpsData, GpsData.Builder, GpsDataOrBuilder> gpsBuilder_;
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public boolean hasGps() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public MsgNode1V1M5.GpsData getGps() {
        if (gpsBuilder_ == null) {
          return gps_;
        } else {
          return gpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public Builder setGps(MsgNode1V1M5.GpsData value) {
        if (gpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gps_ = value;
          onChanged();
        } else {
          gpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public Builder setGps(
          MsgNode1V1M5.GpsData.Builder builderForValue) {
        if (gpsBuilder_ == null) {
          gps_ = builderForValue.build();
          onChanged();
        } else {
          gpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public Builder mergeGps(MsgNode1V1M5.GpsData value) {
        if (gpsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              gps_ != MsgNode1V1M5.GpsData.getDefaultInstance()) {
            gps_ =
              MsgNode1V1M5.GpsData.newBuilder(gps_).mergeFrom(value).buildPartial();
          } else {
            gps_ = value;
          }
          onChanged();
        } else {
          gpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public Builder clearGps() {
        if (gpsBuilder_ == null) {
          gps_ = MsgNode1V1M5.GpsData.getDefaultInstance();
          onChanged();
        } else {
          gpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public MsgNode1V1M5.GpsData.Builder getGpsBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      public MsgNode1V1M5.GpsDataOrBuilder getGpsOrBuilder() {
        if (gpsBuilder_ != null) {
          return gpsBuilder_.getMessageOrBuilder();
        } else {
          return gps_;
        }
      }
      /**
       * <code>optional .GpsData gps = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          GpsData, GpsData.Builder, GpsDataOrBuilder>
          getGpsFieldBuilder() {
        if (gpsBuilder_ == null) {
          gpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              GpsData, GpsData.Builder, GpsDataOrBuilder>(
                  gps_,
                  getParentForChildren(),
                  isClean());
          gps_ = null;
        }
        return gpsBuilder_;
      }

      // optional .AxisData acceleration = 9;
      private MsgNode1V1M5.AxisData acceleration_ = MsgNode1V1M5.AxisData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AxisData, AxisData.Builder, AxisDataOrBuilder> accelerationBuilder_;
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public boolean hasAcceleration() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public MsgNode1V1M5.AxisData getAcceleration() {
        if (accelerationBuilder_ == null) {
          return acceleration_;
        } else {
          return accelerationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public Builder setAcceleration(MsgNode1V1M5.AxisData value) {
        if (accelerationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acceleration_ = value;
          onChanged();
        } else {
          accelerationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public Builder setAcceleration(
          MsgNode1V1M5.AxisData.Builder builderForValue) {
        if (accelerationBuilder_ == null) {
          acceleration_ = builderForValue.build();
          onChanged();
        } else {
          accelerationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public Builder mergeAcceleration(MsgNode1V1M5.AxisData value) {
        if (accelerationBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              acceleration_ != MsgNode1V1M5.AxisData.getDefaultInstance()) {
            acceleration_ =
              MsgNode1V1M5.AxisData.newBuilder(acceleration_).mergeFrom(value).buildPartial();
          } else {
            acceleration_ = value;
          }
          onChanged();
        } else {
          accelerationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public Builder clearAcceleration() {
        if (accelerationBuilder_ == null) {
          acceleration_ = MsgNode1V1M5.AxisData.getDefaultInstance();
          onChanged();
        } else {
          accelerationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public MsgNode1V1M5.AxisData.Builder getAccelerationBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getAccelerationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      public MsgNode1V1M5.AxisDataOrBuilder getAccelerationOrBuilder() {
        if (accelerationBuilder_ != null) {
          return accelerationBuilder_.getMessageOrBuilder();
        } else {
          return acceleration_;
        }
      }
      /**
       * <code>optional .AxisData acceleration = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AxisData, AxisData.Builder, AxisDataOrBuilder>
          getAccelerationFieldBuilder() {
        if (accelerationBuilder_ == null) {
          accelerationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AxisData, AxisData.Builder, AxisDataOrBuilder>(
                  acceleration_,
                  getParentForChildren(),
                  isClean());
          acceleration_ = null;
        }
        return accelerationBuilder_;
      }

      // optional .AxisData magnetism = 10;
      private MsgNode1V1M5.AxisData magnetism_ = MsgNode1V1M5.AxisData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AxisData, AxisData.Builder, AxisDataOrBuilder> magnetismBuilder_;
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public boolean hasMagnetism() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public MsgNode1V1M5.AxisData getMagnetism() {
        if (magnetismBuilder_ == null) {
          return magnetism_;
        } else {
          return magnetismBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public Builder setMagnetism(MsgNode1V1M5.AxisData value) {
        if (magnetismBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          magnetism_ = value;
          onChanged();
        } else {
          magnetismBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public Builder setMagnetism(
          MsgNode1V1M5.AxisData.Builder builderForValue) {
        if (magnetismBuilder_ == null) {
          magnetism_ = builderForValue.build();
          onChanged();
        } else {
          magnetismBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public Builder mergeMagnetism(MsgNode1V1M5.AxisData value) {
        if (magnetismBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              magnetism_ != MsgNode1V1M5.AxisData.getDefaultInstance()) {
            magnetism_ =
              MsgNode1V1M5.AxisData.newBuilder(magnetism_).mergeFrom(value).buildPartial();
          } else {
            magnetism_ = value;
          }
          onChanged();
        } else {
          magnetismBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public Builder clearMagnetism() {
        if (magnetismBuilder_ == null) {
          magnetism_ = MsgNode1V1M5.AxisData.getDefaultInstance();
          onChanged();
        } else {
          magnetismBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public MsgNode1V1M5.AxisData.Builder getMagnetismBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getMagnetismFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      public MsgNode1V1M5.AxisDataOrBuilder getMagnetismOrBuilder() {
        if (magnetismBuilder_ != null) {
          return magnetismBuilder_.getMessageOrBuilder();
        } else {
          return magnetism_;
        }
      }
      /**
       * <code>optional .AxisData magnetism = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AxisData, AxisData.Builder, AxisDataOrBuilder>
          getMagnetismFieldBuilder() {
        if (magnetismBuilder_ == null) {
          magnetismBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AxisData, AxisData.Builder, AxisDataOrBuilder>(
                  magnetism_,
                  getParentForChildren(),
                  isClean());
          magnetism_ = null;
        }
        return magnetismBuilder_;
      }

      // optional .AxisData gyroscope = 11;
      private MsgNode1V1M5.AxisData gyroscope_ = MsgNode1V1M5.AxisData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AxisData, AxisData.Builder, AxisDataOrBuilder> gyroscopeBuilder_;
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public boolean hasGyroscope() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public MsgNode1V1M5.AxisData getGyroscope() {
        if (gyroscopeBuilder_ == null) {
          return gyroscope_;
        } else {
          return gyroscopeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public Builder setGyroscope(MsgNode1V1M5.AxisData value) {
        if (gyroscopeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gyroscope_ = value;
          onChanged();
        } else {
          gyroscopeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public Builder setGyroscope(
          MsgNode1V1M5.AxisData.Builder builderForValue) {
        if (gyroscopeBuilder_ == null) {
          gyroscope_ = builderForValue.build();
          onChanged();
        } else {
          gyroscopeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public Builder mergeGyroscope(MsgNode1V1M5.AxisData value) {
        if (gyroscopeBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              gyroscope_ != MsgNode1V1M5.AxisData.getDefaultInstance()) {
            gyroscope_ =
              MsgNode1V1M5.AxisData.newBuilder(gyroscope_).mergeFrom(value).buildPartial();
          } else {
            gyroscope_ = value;
          }
          onChanged();
        } else {
          gyroscopeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public Builder clearGyroscope() {
        if (gyroscopeBuilder_ == null) {
          gyroscope_ = MsgNode1V1M5.AxisData.getDefaultInstance();
          onChanged();
        } else {
          gyroscopeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public MsgNode1V1M5.AxisData.Builder getGyroscopeBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getGyroscopeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      public MsgNode1V1M5.AxisDataOrBuilder getGyroscopeOrBuilder() {
        if (gyroscopeBuilder_ != null) {
          return gyroscopeBuilder_.getMessageOrBuilder();
        } else {
          return gyroscope_;
        }
      }
      /**
       * <code>optional .AxisData gyroscope = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AxisData, AxisData.Builder, AxisDataOrBuilder>
          getGyroscopeFieldBuilder() {
        if (gyroscopeBuilder_ == null) {
          gyroscopeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AxisData, AxisData.Builder, AxisDataOrBuilder>(
                  gyroscope_,
                  getParentForChildren(),
                  isClean());
          gyroscope_ = null;
        }
        return gyroscopeBuilder_;
      }

      // optional .SensorData temperature = 12;
      private MsgNode1V1M5.SensorData temperature_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> temperatureBuilder_;
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public MsgNode1V1M5.SensorData getTemperature() {
        if (temperatureBuilder_ == null) {
          return temperature_;
        } else {
          return temperatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public Builder setTemperature(MsgNode1V1M5.SensorData value) {
        if (temperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          temperature_ = value;
          onChanged();
        } else {
          temperatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public Builder setTemperature(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (temperatureBuilder_ == null) {
          temperature_ = builderForValue.build();
          onChanged();
        } else {
          temperatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public Builder mergeTemperature(MsgNode1V1M5.SensorData value) {
        if (temperatureBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              temperature_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            temperature_ =
              MsgNode1V1M5.SensorData.newBuilder(temperature_).mergeFrom(value).buildPartial();
          } else {
            temperature_ = value;
          }
          onChanged();
        } else {
          temperatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public Builder clearTemperature() {
        if (temperatureBuilder_ == null) {
          temperature_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          temperatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getTemperatureBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTemperatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getTemperatureOrBuilder() {
        if (temperatureBuilder_ != null) {
          return temperatureBuilder_.getMessageOrBuilder();
        } else {
          return temperature_;
        }
      }
      /**
       * <code>optional .SensorData temperature = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getTemperatureFieldBuilder() {
        if (temperatureBuilder_ == null) {
          temperatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  temperature_,
                  getParentForChildren(),
                  isClean());
          temperature_ = null;
        }
        return temperatureBuilder_;
      }

      // optional .SensorData humidity = 13;
      private MsgNode1V1M5.SensorData humidity_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> humidityBuilder_;
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public boolean hasHumidity() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public MsgNode1V1M5.SensorData getHumidity() {
        if (humidityBuilder_ == null) {
          return humidity_;
        } else {
          return humidityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public Builder setHumidity(MsgNode1V1M5.SensorData value) {
        if (humidityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          humidity_ = value;
          onChanged();
        } else {
          humidityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public Builder setHumidity(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (humidityBuilder_ == null) {
          humidity_ = builderForValue.build();
          onChanged();
        } else {
          humidityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public Builder mergeHumidity(MsgNode1V1M5.SensorData value) {
        if (humidityBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              humidity_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            humidity_ =
              MsgNode1V1M5.SensorData.newBuilder(humidity_).mergeFrom(value).buildPartial();
          } else {
            humidity_ = value;
          }
          onChanged();
        } else {
          humidityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public Builder clearHumidity() {
        if (humidityBuilder_ == null) {
          humidity_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          humidityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getHumidityBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getHumidityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getHumidityOrBuilder() {
        if (humidityBuilder_ != null) {
          return humidityBuilder_.getMessageOrBuilder();
        } else {
          return humidity_;
        }
      }
      /**
       * <code>optional .SensorData humidity = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getHumidityFieldBuilder() {
        if (humidityBuilder_ == null) {
          humidityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  humidity_,
                  getParentForChildren(),
                  isClean());
          humidity_ = null;
        }
        return humidityBuilder_;
      }

      // optional .SensorData light = 14;
      private MsgNode1V1M5.SensorData light_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> lightBuilder_;
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public boolean hasLight() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public MsgNode1V1M5.SensorData getLight() {
        if (lightBuilder_ == null) {
          return light_;
        } else {
          return lightBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public Builder setLight(MsgNode1V1M5.SensorData value) {
        if (lightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          light_ = value;
          onChanged();
        } else {
          lightBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public Builder setLight(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (lightBuilder_ == null) {
          light_ = builderForValue.build();
          onChanged();
        } else {
          lightBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public Builder mergeLight(MsgNode1V1M5.SensorData value) {
        if (lightBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              light_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            light_ =
              MsgNode1V1M5.SensorData.newBuilder(light_).mergeFrom(value).buildPartial();
          } else {
            light_ = value;
          }
          onChanged();
        } else {
          lightBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public Builder clearLight() {
        if (lightBuilder_ == null) {
          light_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          lightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getLightBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getLightFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getLightOrBuilder() {
        if (lightBuilder_ != null) {
          return lightBuilder_.getMessageOrBuilder();
        } else {
          return light_;
        }
      }
      /**
       * <code>optional .SensorData light = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getLightFieldBuilder() {
        if (lightBuilder_ == null) {
          lightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  light_,
                  getParentForChildren(),
                  isClean());
          light_ = null;
        }
        return lightBuilder_;
      }

      // optional .SensorData leak = 15;
      private MsgNode1V1M5.SensorData leak_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> leakBuilder_;
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public boolean hasLeak() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public MsgNode1V1M5.SensorData getLeak() {
        if (leakBuilder_ == null) {
          return leak_;
        } else {
          return leakBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public Builder setLeak(MsgNode1V1M5.SensorData value) {
        if (leakBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leak_ = value;
          onChanged();
        } else {
          leakBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public Builder setLeak(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (leakBuilder_ == null) {
          leak_ = builderForValue.build();
          onChanged();
        } else {
          leakBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public Builder mergeLeak(MsgNode1V1M5.SensorData value) {
        if (leakBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              leak_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            leak_ =
              MsgNode1V1M5.SensorData.newBuilder(leak_).mergeFrom(value).buildPartial();
          } else {
            leak_ = value;
          }
          onChanged();
        } else {
          leakBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public Builder clearLeak() {
        if (leakBuilder_ == null) {
          leak_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          leakBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getLeakBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getLeakFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getLeakOrBuilder() {
        if (leakBuilder_ != null) {
          return leakBuilder_.getMessageOrBuilder();
        } else {
          return leak_;
        }
      }
      /**
       * <code>optional .SensorData leak = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getLeakFieldBuilder() {
        if (leakBuilder_ == null) {
          leakBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  leak_,
                  getParentForChildren(),
                  isClean());
          leak_ = null;
        }
        return leakBuilder_;
      }

      // optional .SensorData co = 16;
      private MsgNode1V1M5.SensorData co_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> coBuilder_;
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public boolean hasCo() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public MsgNode1V1M5.SensorData getCo() {
        if (coBuilder_ == null) {
          return co_;
        } else {
          return coBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public Builder setCo(MsgNode1V1M5.SensorData value) {
        if (coBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          co_ = value;
          onChanged();
        } else {
          coBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public Builder setCo(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (coBuilder_ == null) {
          co_ = builderForValue.build();
          onChanged();
        } else {
          coBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public Builder mergeCo(MsgNode1V1M5.SensorData value) {
        if (coBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              co_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            co_ =
              MsgNode1V1M5.SensorData.newBuilder(co_).mergeFrom(value).buildPartial();
          } else {
            co_ = value;
          }
          onChanged();
        } else {
          coBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public Builder clearCo() {
        if (coBuilder_ == null) {
          co_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          coBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getCoBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getCoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getCoOrBuilder() {
        if (coBuilder_ != null) {
          return coBuilder_.getMessageOrBuilder();
        } else {
          return co_;
        }
      }
      /**
       * <code>optional .SensorData co = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getCoFieldBuilder() {
        if (coBuilder_ == null) {
          coBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  co_,
                  getParentForChildren(),
                  isClean());
          co_ = null;
        }
        return coBuilder_;
      }

      // optional .SensorData co2 = 17;
      private MsgNode1V1M5.SensorData co2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> co2Builder_;
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public boolean hasCo2() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public MsgNode1V1M5.SensorData getCo2() {
        if (co2Builder_ == null) {
          return co2_;
        } else {
          return co2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public Builder setCo2(MsgNode1V1M5.SensorData value) {
        if (co2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          co2_ = value;
          onChanged();
        } else {
          co2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public Builder setCo2(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (co2Builder_ == null) {
          co2_ = builderForValue.build();
          onChanged();
        } else {
          co2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public Builder mergeCo2(MsgNode1V1M5.SensorData value) {
        if (co2Builder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              co2_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            co2_ =
              MsgNode1V1M5.SensorData.newBuilder(co2_).mergeFrom(value).buildPartial();
          } else {
            co2_ = value;
          }
          onChanged();
        } else {
          co2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public Builder clearCo2() {
        if (co2Builder_ == null) {
          co2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          co2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getCo2Builder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getCo2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getCo2OrBuilder() {
        if (co2Builder_ != null) {
          return co2Builder_.getMessageOrBuilder();
        } else {
          return co2_;
        }
      }
      /**
       * <code>optional .SensorData co2 = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getCo2FieldBuilder() {
        if (co2Builder_ == null) {
          co2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  co2_,
                  getParentForChildren(),
                  isClean());
          co2_ = null;
        }
        return co2Builder_;
      }

      // optional .SensorData so2 = 18;
      private MsgNode1V1M5.SensorData so2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> so2Builder_;
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public boolean hasSo2() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public MsgNode1V1M5.SensorData getSo2() {
        if (so2Builder_ == null) {
          return so2_;
        } else {
          return so2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public Builder setSo2(MsgNode1V1M5.SensorData value) {
        if (so2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          so2_ = value;
          onChanged();
        } else {
          so2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public Builder setSo2(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (so2Builder_ == null) {
          so2_ = builderForValue.build();
          onChanged();
        } else {
          so2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public Builder mergeSo2(MsgNode1V1M5.SensorData value) {
        if (so2Builder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              so2_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            so2_ =
              MsgNode1V1M5.SensorData.newBuilder(so2_).mergeFrom(value).buildPartial();
          } else {
            so2_ = value;
          }
          onChanged();
        } else {
          so2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public Builder clearSo2() {
        if (so2Builder_ == null) {
          so2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          so2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getSo2Builder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getSo2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getSo2OrBuilder() {
        if (so2Builder_ != null) {
          return so2Builder_.getMessageOrBuilder();
        } else {
          return so2_;
        }
      }
      /**
       * <code>optional .SensorData so2 = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getSo2FieldBuilder() {
        if (so2Builder_ == null) {
          so2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  so2_,
                  getParentForChildren(),
                  isClean());
          so2_ = null;
        }
        return so2Builder_;
      }

      // optional .SensorData no2 = 19;
      private MsgNode1V1M5.SensorData no2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> no2Builder_;
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public boolean hasNo2() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public MsgNode1V1M5.SensorData getNo2() {
        if (no2Builder_ == null) {
          return no2_;
        } else {
          return no2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public Builder setNo2(MsgNode1V1M5.SensorData value) {
        if (no2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          no2_ = value;
          onChanged();
        } else {
          no2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public Builder setNo2(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (no2Builder_ == null) {
          no2_ = builderForValue.build();
          onChanged();
        } else {
          no2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public Builder mergeNo2(MsgNode1V1M5.SensorData value) {
        if (no2Builder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              no2_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            no2_ =
              MsgNode1V1M5.SensorData.newBuilder(no2_).mergeFrom(value).buildPartial();
          } else {
            no2_ = value;
          }
          onChanged();
        } else {
          no2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public Builder clearNo2() {
        if (no2Builder_ == null) {
          no2_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          no2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getNo2Builder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getNo2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getNo2OrBuilder() {
        if (no2Builder_ != null) {
          return no2Builder_.getMessageOrBuilder();
        } else {
          return no2_;
        }
      }
      /**
       * <code>optional .SensorData no2 = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getNo2FieldBuilder() {
        if (no2Builder_ == null) {
          no2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  no2_,
                  getParentForChildren(),
                  isClean());
          no2_ = null;
        }
        return no2Builder_;
      }

      // optional .SensorData ch4 = 20;
      private MsgNode1V1M5.SensorData ch4_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> ch4Builder_;
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public boolean hasCh4() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public MsgNode1V1M5.SensorData getCh4() {
        if (ch4Builder_ == null) {
          return ch4_;
        } else {
          return ch4Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public Builder setCh4(MsgNode1V1M5.SensorData value) {
        if (ch4Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ch4_ = value;
          onChanged();
        } else {
          ch4Builder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public Builder setCh4(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (ch4Builder_ == null) {
          ch4_ = builderForValue.build();
          onChanged();
        } else {
          ch4Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public Builder mergeCh4(MsgNode1V1M5.SensorData value) {
        if (ch4Builder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              ch4_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            ch4_ =
              MsgNode1V1M5.SensorData.newBuilder(ch4_).mergeFrom(value).buildPartial();
          } else {
            ch4_ = value;
          }
          onChanged();
        } else {
          ch4Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public Builder clearCh4() {
        if (ch4Builder_ == null) {
          ch4_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          ch4Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getCh4Builder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getCh4FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getCh4OrBuilder() {
        if (ch4Builder_ != null) {
          return ch4Builder_.getMessageOrBuilder();
        } else {
          return ch4_;
        }
      }
      /**
       * <code>optional .SensorData ch4 = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getCh4FieldBuilder() {
        if (ch4Builder_ == null) {
          ch4Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  ch4_,
                  getParentForChildren(),
                  isClean());
          ch4_ = null;
        }
        return ch4Builder_;
      }

      // optional .SensorData ch2o = 21;
      private MsgNode1V1M5.SensorData ch2O_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> ch2OBuilder_;
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public boolean hasCh2O() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public MsgNode1V1M5.SensorData getCh2O() {
        if (ch2OBuilder_ == null) {
          return ch2O_;
        } else {
          return ch2OBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public Builder setCh2O(MsgNode1V1M5.SensorData value) {
        if (ch2OBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ch2O_ = value;
          onChanged();
        } else {
          ch2OBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public Builder setCh2O(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (ch2OBuilder_ == null) {
          ch2O_ = builderForValue.build();
          onChanged();
        } else {
          ch2OBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public Builder mergeCh2O(MsgNode1V1M5.SensorData value) {
        if (ch2OBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              ch2O_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            ch2O_ =
              MsgNode1V1M5.SensorData.newBuilder(ch2O_).mergeFrom(value).buildPartial();
          } else {
            ch2O_ = value;
          }
          onChanged();
        } else {
          ch2OBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public Builder clearCh2O() {
        if (ch2OBuilder_ == null) {
          ch2O_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          ch2OBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getCh2OBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getCh2OFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getCh2OOrBuilder() {
        if (ch2OBuilder_ != null) {
          return ch2OBuilder_.getMessageOrBuilder();
        } else {
          return ch2O_;
        }
      }
      /**
       * <code>optional .SensorData ch2o = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getCh2OFieldBuilder() {
        if (ch2OBuilder_ == null) {
          ch2OBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  ch2O_,
                  getParentForChildren(),
                  isClean());
          ch2O_ = null;
        }
        return ch2OBuilder_;
      }

      // optional .SensorData lpg = 22;
      private MsgNode1V1M5.SensorData lpg_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> lpgBuilder_;
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public boolean hasLpg() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public MsgNode1V1M5.SensorData getLpg() {
        if (lpgBuilder_ == null) {
          return lpg_;
        } else {
          return lpgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public Builder setLpg(MsgNode1V1M5.SensorData value) {
        if (lpgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lpg_ = value;
          onChanged();
        } else {
          lpgBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public Builder setLpg(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (lpgBuilder_ == null) {
          lpg_ = builderForValue.build();
          onChanged();
        } else {
          lpgBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public Builder mergeLpg(MsgNode1V1M5.SensorData value) {
        if (lpgBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              lpg_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            lpg_ =
              MsgNode1V1M5.SensorData.newBuilder(lpg_).mergeFrom(value).buildPartial();
          } else {
            lpg_ = value;
          }
          onChanged();
        } else {
          lpgBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public Builder clearLpg() {
        if (lpgBuilder_ == null) {
          lpg_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          lpgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getLpgBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getLpgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getLpgOrBuilder() {
        if (lpgBuilder_ != null) {
          return lpgBuilder_.getMessageOrBuilder();
        } else {
          return lpg_;
        }
      }
      /**
       * <code>optional .SensorData lpg = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getLpgFieldBuilder() {
        if (lpgBuilder_ == null) {
          lpgBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  lpg_,
                  getParentForChildren(),
                  isClean());
          lpg_ = null;
        }
        return lpgBuilder_;
      }

      // optional .SensorData o3 = 23;
      private MsgNode1V1M5.SensorData o3_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> o3Builder_;
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public boolean hasO3() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public MsgNode1V1M5.SensorData getO3() {
        if (o3Builder_ == null) {
          return o3_;
        } else {
          return o3Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public Builder setO3(MsgNode1V1M5.SensorData value) {
        if (o3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          o3_ = value;
          onChanged();
        } else {
          o3Builder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public Builder setO3(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (o3Builder_ == null) {
          o3_ = builderForValue.build();
          onChanged();
        } else {
          o3Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public Builder mergeO3(MsgNode1V1M5.SensorData value) {
        if (o3Builder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              o3_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            o3_ =
              MsgNode1V1M5.SensorData.newBuilder(o3_).mergeFrom(value).buildPartial();
          } else {
            o3_ = value;
          }
          onChanged();
        } else {
          o3Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public Builder clearO3() {
        if (o3Builder_ == null) {
          o3_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          o3Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getO3Builder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getO3FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getO3OrBuilder() {
        if (o3Builder_ != null) {
          return o3Builder_.getMessageOrBuilder();
        } else {
          return o3_;
        }
      }
      /**
       * <code>optional .SensorData o3 = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getO3FieldBuilder() {
        if (o3Builder_ == null) {
          o3Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  o3_,
                  getParentForChildren(),
                  isClean());
          o3_ = null;
        }
        return o3Builder_;
      }

      // optional .SensorData pm1 = 24;
      private MsgNode1V1M5.SensorData pm1_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> pm1Builder_;
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public boolean hasPm1() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public MsgNode1V1M5.SensorData getPm1() {
        if (pm1Builder_ == null) {
          return pm1_;
        } else {
          return pm1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public Builder setPm1(MsgNode1V1M5.SensorData value) {
        if (pm1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pm1_ = value;
          onChanged();
        } else {
          pm1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public Builder setPm1(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (pm1Builder_ == null) {
          pm1_ = builderForValue.build();
          onChanged();
        } else {
          pm1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public Builder mergePm1(MsgNode1V1M5.SensorData value) {
        if (pm1Builder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              pm1_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            pm1_ =
              MsgNode1V1M5.SensorData.newBuilder(pm1_).mergeFrom(value).buildPartial();
          } else {
            pm1_ = value;
          }
          onChanged();
        } else {
          pm1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public Builder clearPm1() {
        if (pm1Builder_ == null) {
          pm1_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          pm1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getPm1Builder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getPm1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getPm1OrBuilder() {
        if (pm1Builder_ != null) {
          return pm1Builder_.getMessageOrBuilder();
        } else {
          return pm1_;
        }
      }
      /**
       * <code>optional .SensorData pm1 = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getPm1FieldBuilder() {
        if (pm1Builder_ == null) {
          pm1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  pm1_,
                  getParentForChildren(),
                  isClean());
          pm1_ = null;
        }
        return pm1Builder_;
      }

      // optional .SensorData pm2_5 = 25;
      private MsgNode1V1M5.SensorData pm25_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> pm25Builder_;
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public boolean hasPm25() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public MsgNode1V1M5.SensorData getPm25() {
        if (pm25Builder_ == null) {
          return pm25_;
        } else {
          return pm25Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public Builder setPm25(MsgNode1V1M5.SensorData value) {
        if (pm25Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pm25_ = value;
          onChanged();
        } else {
          pm25Builder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public Builder setPm25(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (pm25Builder_ == null) {
          pm25_ = builderForValue.build();
          onChanged();
        } else {
          pm25Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public Builder mergePm25(MsgNode1V1M5.SensorData value) {
        if (pm25Builder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              pm25_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            pm25_ =
              MsgNode1V1M5.SensorData.newBuilder(pm25_).mergeFrom(value).buildPartial();
          } else {
            pm25_ = value;
          }
          onChanged();
        } else {
          pm25Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public Builder clearPm25() {
        if (pm25Builder_ == null) {
          pm25_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          pm25Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getPm25Builder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getPm25FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getPm25OrBuilder() {
        if (pm25Builder_ != null) {
          return pm25Builder_.getMessageOrBuilder();
        } else {
          return pm25_;
        }
      }
      /**
       * <code>optional .SensorData pm2_5 = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getPm25FieldBuilder() {
        if (pm25Builder_ == null) {
          pm25Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  pm25_,
                  getParentForChildren(),
                  isClean());
          pm25_ = null;
        }
        return pm25Builder_;
      }

      // optional .SensorData pm10 = 26;
      private MsgNode1V1M5.SensorData pm10_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> pm10Builder_;
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public boolean hasPm10() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public MsgNode1V1M5.SensorData getPm10() {
        if (pm10Builder_ == null) {
          return pm10_;
        } else {
          return pm10Builder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public Builder setPm10(MsgNode1V1M5.SensorData value) {
        if (pm10Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pm10_ = value;
          onChanged();
        } else {
          pm10Builder_.setMessage(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public Builder setPm10(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (pm10Builder_ == null) {
          pm10_ = builderForValue.build();
          onChanged();
        } else {
          pm10Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public Builder mergePm10(MsgNode1V1M5.SensorData value) {
        if (pm10Builder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000) &&
              pm10_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            pm10_ =
              MsgNode1V1M5.SensorData.newBuilder(pm10_).mergeFrom(value).buildPartial();
          } else {
            pm10_ = value;
          }
          onChanged();
        } else {
          pm10Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public Builder clearPm10() {
        if (pm10Builder_ == null) {
          pm10_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          pm10Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getPm10Builder() {
        bitField0_ |= 0x02000000;
        onChanged();
        return getPm10FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getPm10OrBuilder() {
        if (pm10Builder_ != null) {
          return pm10Builder_.getMessageOrBuilder();
        } else {
          return pm10_;
        }
      }
      /**
       * <code>optional .SensorData pm10 = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getPm10FieldBuilder() {
        if (pm10Builder_ == null) {
          pm10Builder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  pm10_,
                  getParentForChildren(),
                  isClean());
          pm10_ = null;
        }
        return pm10Builder_;
      }

      // optional .SensorData angle = 27;
      private MsgNode1V1M5.SensorData angle_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> angleBuilder_;
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public MsgNode1V1M5.SensorData getAngle() {
        if (angleBuilder_ == null) {
          return angle_;
        } else {
          return angleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public Builder setAngle(MsgNode1V1M5.SensorData value) {
        if (angleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angle_ = value;
          onChanged();
        } else {
          angleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public Builder setAngle(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (angleBuilder_ == null) {
          angle_ = builderForValue.build();
          onChanged();
        } else {
          angleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public Builder mergeAngle(MsgNode1V1M5.SensorData value) {
        if (angleBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              angle_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            angle_ =
              MsgNode1V1M5.SensorData.newBuilder(angle_).mergeFrom(value).buildPartial();
          } else {
            angle_ = value;
          }
          onChanged();
        } else {
          angleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public Builder clearAngle() {
        if (angleBuilder_ == null) {
          angle_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          angleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getAngleBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getAngleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getAngleOrBuilder() {
        if (angleBuilder_ != null) {
          return angleBuilder_.getMessageOrBuilder();
        } else {
          return angle_;
        }
      }
      /**
       * <code>optional .SensorData angle = 27;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getAngleFieldBuilder() {
        if (angleBuilder_ == null) {
          angleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  angle_,
                  getParentForChildren(),
                  isClean());
          angle_ = null;
        }
        return angleBuilder_;
      }

      // optional .SensorData cover = 28;
      private MsgNode1V1M5.SensorData cover_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> coverBuilder_;
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public boolean hasCover() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public MsgNode1V1M5.SensorData getCover() {
        if (coverBuilder_ == null) {
          return cover_;
        } else {
          return coverBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public Builder setCover(MsgNode1V1M5.SensorData value) {
        if (coverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cover_ = value;
          onChanged();
        } else {
          coverBuilder_.setMessage(value);
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public Builder setCover(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (coverBuilder_ == null) {
          cover_ = builderForValue.build();
          onChanged();
        } else {
          coverBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public Builder mergeCover(MsgNode1V1M5.SensorData value) {
        if (coverBuilder_ == null) {
          if (((bitField0_ & 0x08000000) == 0x08000000) &&
              cover_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            cover_ =
              MsgNode1V1M5.SensorData.newBuilder(cover_).mergeFrom(value).buildPartial();
          } else {
            cover_ = value;
          }
          onChanged();
        } else {
          coverBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public Builder clearCover() {
        if (coverBuilder_ == null) {
          cover_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          coverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x08000000);
        return this;
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getCoverBuilder() {
        bitField0_ |= 0x08000000;
        onChanged();
        return getCoverFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getCoverOrBuilder() {
        if (coverBuilder_ != null) {
          return coverBuilder_.getMessageOrBuilder();
        } else {
          return cover_;
        }
      }
      /**
       * <code>optional .SensorData cover = 28;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getCoverFieldBuilder() {
        if (coverBuilder_ == null) {
          coverBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  cover_,
                  getParentForChildren(),
                  isClean());
          cover_ = null;
        }
        return coverBuilder_;
      }

      // optional .SensorData level = 29;
      private MsgNode1V1M5.SensorData level_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> levelBuilder_;
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public MsgNode1V1M5.SensorData getLevel() {
        if (levelBuilder_ == null) {
          return level_;
        } else {
          return levelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public Builder setLevel(MsgNode1V1M5.SensorData value) {
        if (levelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          level_ = value;
          onChanged();
        } else {
          levelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public Builder setLevel(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (levelBuilder_ == null) {
          level_ = builderForValue.build();
          onChanged();
        } else {
          levelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public Builder mergeLevel(MsgNode1V1M5.SensorData value) {
        if (levelBuilder_ == null) {
          if (((bitField0_ & 0x10000000) == 0x10000000) &&
              level_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            level_ =
              MsgNode1V1M5.SensorData.newBuilder(level_).mergeFrom(value).buildPartial();
          } else {
            level_ = value;
          }
          onChanged();
        } else {
          levelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public Builder clearLevel() {
        if (levelBuilder_ == null) {
          level_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          levelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x10000000);
        return this;
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getLevelBuilder() {
        bitField0_ |= 0x10000000;
        onChanged();
        return getLevelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getLevelOrBuilder() {
        if (levelBuilder_ != null) {
          return levelBuilder_.getMessageOrBuilder();
        } else {
          return level_;
        }
      }
      /**
       * <code>optional .SensorData level = 29;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getLevelFieldBuilder() {
        if (levelBuilder_ == null) {
          levelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  level_,
                  getParentForChildren(),
                  isClean());
          level_ = null;
        }
        return levelBuilder_;
      }

      // optional .SensorData smoke = 30;
      private MsgNode1V1M5.SensorData smoke_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> smokeBuilder_;
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public boolean hasSmoke() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public MsgNode1V1M5.SensorData getSmoke() {
        if (smokeBuilder_ == null) {
          return smoke_;
        } else {
          return smokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public Builder setSmoke(MsgNode1V1M5.SensorData value) {
        if (smokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          smoke_ = value;
          onChanged();
        } else {
          smokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public Builder setSmoke(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (smokeBuilder_ == null) {
          smoke_ = builderForValue.build();
          onChanged();
        } else {
          smokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public Builder mergeSmoke(MsgNode1V1M5.SensorData value) {
        if (smokeBuilder_ == null) {
          if (((bitField0_ & 0x20000000) == 0x20000000) &&
              smoke_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            smoke_ =
              MsgNode1V1M5.SensorData.newBuilder(smoke_).mergeFrom(value).buildPartial();
          } else {
            smoke_ = value;
          }
          onChanged();
        } else {
          smokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public Builder clearSmoke() {
        if (smokeBuilder_ == null) {
          smoke_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          smokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getSmokeBuilder() {
        bitField0_ |= 0x20000000;
        onChanged();
        return getSmokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getSmokeOrBuilder() {
        if (smokeBuilder_ != null) {
          return smokeBuilder_.getMessageOrBuilder();
        } else {
          return smoke_;
        }
      }
      /**
       * <code>optional .SensorData smoke = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getSmokeFieldBuilder() {
        if (smokeBuilder_ == null) {
          smokeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  smoke_,
                  getParentForChildren(),
                  isClean());
          smoke_ = null;
        }
        return smokeBuilder_;
      }

      // optional .SensorData pitch = 31;
      private MsgNode1V1M5.SensorData pitch_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> pitchBuilder_;
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public boolean hasPitch() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public MsgNode1V1M5.SensorData getPitch() {
        if (pitchBuilder_ == null) {
          return pitch_;
        } else {
          return pitchBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public Builder setPitch(MsgNode1V1M5.SensorData value) {
        if (pitchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pitch_ = value;
          onChanged();
        } else {
          pitchBuilder_.setMessage(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public Builder setPitch(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (pitchBuilder_ == null) {
          pitch_ = builderForValue.build();
          onChanged();
        } else {
          pitchBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public Builder mergePitch(MsgNode1V1M5.SensorData value) {
        if (pitchBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000) &&
              pitch_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            pitch_ =
              MsgNode1V1M5.SensorData.newBuilder(pitch_).mergeFrom(value).buildPartial();
          } else {
            pitch_ = value;
          }
          onChanged();
        } else {
          pitchBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public Builder clearPitch() {
        if (pitchBuilder_ == null) {
          pitch_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          pitchBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getPitchBuilder() {
        bitField0_ |= 0x40000000;
        onChanged();
        return getPitchFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getPitchOrBuilder() {
        if (pitchBuilder_ != null) {
          return pitchBuilder_.getMessageOrBuilder();
        } else {
          return pitch_;
        }
      }
      /**
       * <code>optional .SensorData pitch = 31;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getPitchFieldBuilder() {
        if (pitchBuilder_ == null) {
          pitchBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  pitch_,
                  getParentForChildren(),
                  isClean());
          pitch_ = null;
        }
        return pitchBuilder_;
      }

      // optional .SensorData roll = 32;
      private MsgNode1V1M5.SensorData roll_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> rollBuilder_;
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public boolean hasRoll() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public MsgNode1V1M5.SensorData getRoll() {
        if (rollBuilder_ == null) {
          return roll_;
        } else {
          return rollBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public Builder setRoll(MsgNode1V1M5.SensorData value) {
        if (rollBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roll_ = value;
          onChanged();
        } else {
          rollBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public Builder setRoll(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (rollBuilder_ == null) {
          roll_ = builderForValue.build();
          onChanged();
        } else {
          rollBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public Builder mergeRoll(MsgNode1V1M5.SensorData value) {
        if (rollBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              roll_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            roll_ =
              MsgNode1V1M5.SensorData.newBuilder(roll_).mergeFrom(value).buildPartial();
          } else {
            roll_ = value;
          }
          onChanged();
        } else {
          rollBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public Builder clearRoll() {
        if (rollBuilder_ == null) {
          roll_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          rollBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getRollBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getRollFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getRollOrBuilder() {
        if (rollBuilder_ != null) {
          return rollBuilder_.getMessageOrBuilder();
        } else {
          return roll_;
        }
      }
      /**
       * <code>optional .SensorData roll = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getRollFieldBuilder() {
        if (rollBuilder_ == null) {
          rollBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  roll_,
                  getParentForChildren(),
                  isClean());
          roll_ = null;
        }
        return rollBuilder_;
      }

      // optional .SensorData yaw = 33;
      private MsgNode1V1M5.SensorData yaw_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> yawBuilder_;
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public boolean hasYaw() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public MsgNode1V1M5.SensorData getYaw() {
        if (yawBuilder_ == null) {
          return yaw_;
        } else {
          return yawBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public Builder setYaw(MsgNode1V1M5.SensorData value) {
        if (yawBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          yaw_ = value;
          onChanged();
        } else {
          yawBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public Builder setYaw(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (yawBuilder_ == null) {
          yaw_ = builderForValue.build();
          onChanged();
        } else {
          yawBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public Builder mergeYaw(MsgNode1V1M5.SensorData value) {
        if (yawBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001) &&
              yaw_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            yaw_ =
              MsgNode1V1M5.SensorData.newBuilder(yaw_).mergeFrom(value).buildPartial();
          } else {
            yaw_ = value;
          }
          onChanged();
        } else {
          yawBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public Builder clearYaw() {
        if (yawBuilder_ == null) {
          yaw_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          yawBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getYawBuilder() {
        bitField1_ |= 0x00000001;
        onChanged();
        return getYawFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getYawOrBuilder() {
        if (yawBuilder_ != null) {
          return yawBuilder_.getMessageOrBuilder();
        } else {
          return yaw_;
        }
      }
      /**
       * <code>optional .SensorData yaw = 33;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getYawFieldBuilder() {
        if (yawBuilder_ == null) {
          yawBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  yaw_,
                  getParentForChildren(),
                  isClean());
          yaw_ = null;
        }
        return yawBuilder_;
      }

      // optional .SensorDataInt flame = 34;
      private MsgNode1V1M5.SensorDataInt flame_ = MsgNode1V1M5.SensorDataInt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorDataInt, SensorDataInt.Builder, SensorDataIntOrBuilder> flameBuilder_;
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public boolean hasFlame() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public MsgNode1V1M5.SensorDataInt getFlame() {
        if (flameBuilder_ == null) {
          return flame_;
        } else {
          return flameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public Builder setFlame(MsgNode1V1M5.SensorDataInt value) {
        if (flameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flame_ = value;
          onChanged();
        } else {
          flameBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public Builder setFlame(
          MsgNode1V1M5.SensorDataInt.Builder builderForValue) {
        if (flameBuilder_ == null) {
          flame_ = builderForValue.build();
          onChanged();
        } else {
          flameBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public Builder mergeFlame(MsgNode1V1M5.SensorDataInt value) {
        if (flameBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002) &&
              flame_ != MsgNode1V1M5.SensorDataInt.getDefaultInstance()) {
            flame_ =
              MsgNode1V1M5.SensorDataInt.newBuilder(flame_).mergeFrom(value).buildPartial();
          } else {
            flame_ = value;
          }
          onChanged();
        } else {
          flameBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public Builder clearFlame() {
        if (flameBuilder_ == null) {
          flame_ = MsgNode1V1M5.SensorDataInt.getDefaultInstance();
          onChanged();
        } else {
          flameBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public MsgNode1V1M5.SensorDataInt.Builder getFlameBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getFlameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      public MsgNode1V1M5.SensorDataIntOrBuilder getFlameOrBuilder() {
        if (flameBuilder_ != null) {
          return flameBuilder_.getMessageOrBuilder();
        } else {
          return flame_;
        }
      }
      /**
       * <code>optional .SensorDataInt flame = 34;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorDataInt, SensorDataInt.Builder, SensorDataIntOrBuilder>
          getFlameFieldBuilder() {
        if (flameBuilder_ == null) {
          flameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorDataInt, SensorDataInt.Builder, SensorDataIntOrBuilder>(
                  flame_,
                  getParentForChildren(),
                  isClean());
          flame_ = null;
        }
        return flameBuilder_;
      }

      // optional .SensorData artificialGas = 35;
      private MsgNode1V1M5.SensorData artificialGas_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> artificialGasBuilder_;
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public boolean hasArtificialGas() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public MsgNode1V1M5.SensorData getArtificialGas() {
        if (artificialGasBuilder_ == null) {
          return artificialGas_;
        } else {
          return artificialGasBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public Builder setArtificialGas(MsgNode1V1M5.SensorData value) {
        if (artificialGasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          artificialGas_ = value;
          onChanged();
        } else {
          artificialGasBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public Builder setArtificialGas(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (artificialGasBuilder_ == null) {
          artificialGas_ = builderForValue.build();
          onChanged();
        } else {
          artificialGasBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public Builder mergeArtificialGas(MsgNode1V1M5.SensorData value) {
        if (artificialGasBuilder_ == null) {
          if (((bitField1_ & 0x00000004) == 0x00000004) &&
              artificialGas_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            artificialGas_ =
              MsgNode1V1M5.SensorData.newBuilder(artificialGas_).mergeFrom(value).buildPartial();
          } else {
            artificialGas_ = value;
          }
          onChanged();
        } else {
          artificialGasBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public Builder clearArtificialGas() {
        if (artificialGasBuilder_ == null) {
          artificialGas_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          artificialGasBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getArtificialGasBuilder() {
        bitField1_ |= 0x00000004;
        onChanged();
        return getArtificialGasFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getArtificialGasOrBuilder() {
        if (artificialGasBuilder_ != null) {
          return artificialGasBuilder_.getMessageOrBuilder();
        } else {
          return artificialGas_;
        }
      }
      /**
       * <code>optional .SensorData artificialGas = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getArtificialGasFieldBuilder() {
        if (artificialGasBuilder_ == null) {
          artificialGasBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  artificialGas_,
                  getParentForChildren(),
                  isClean());
          artificialGas_ = null;
        }
        return artificialGasBuilder_;
      }

      // optional .MultiSensorDataInt multiTemp = 36;
      private MsgNode1V1M5.MultiSensorDataInt multiTemp_ = MsgNode1V1M5.MultiSensorDataInt.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          MultiSensorDataInt, MultiSensorDataInt.Builder, MultiSensorDataIntOrBuilder> multiTempBuilder_;
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public boolean hasMultiTemp() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public MsgNode1V1M5.MultiSensorDataInt getMultiTemp() {
        if (multiTempBuilder_ == null) {
          return multiTemp_;
        } else {
          return multiTempBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public Builder setMultiTemp(MsgNode1V1M5.MultiSensorDataInt value) {
        if (multiTempBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multiTemp_ = value;
          onChanged();
        } else {
          multiTempBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public Builder setMultiTemp(
          MsgNode1V1M5.MultiSensorDataInt.Builder builderForValue) {
        if (multiTempBuilder_ == null) {
          multiTemp_ = builderForValue.build();
          onChanged();
        } else {
          multiTempBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public Builder mergeMultiTemp(MsgNode1V1M5.MultiSensorDataInt value) {
        if (multiTempBuilder_ == null) {
          if (((bitField1_ & 0x00000008) == 0x00000008) &&
              multiTemp_ != MsgNode1V1M5.MultiSensorDataInt.getDefaultInstance()) {
            multiTemp_ =
              MsgNode1V1M5.MultiSensorDataInt.newBuilder(multiTemp_).mergeFrom(value).buildPartial();
          } else {
            multiTemp_ = value;
          }
          onChanged();
        } else {
          multiTempBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public Builder clearMultiTemp() {
        if (multiTempBuilder_ == null) {
          multiTemp_ = MsgNode1V1M5.MultiSensorDataInt.getDefaultInstance();
          onChanged();
        } else {
          multiTempBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public MsgNode1V1M5.MultiSensorDataInt.Builder getMultiTempBuilder() {
        bitField1_ |= 0x00000008;
        onChanged();
        return getMultiTempFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      public MsgNode1V1M5.MultiSensorDataIntOrBuilder getMultiTempOrBuilder() {
        if (multiTempBuilder_ != null) {
          return multiTempBuilder_.getMessageOrBuilder();
        } else {
          return multiTemp_;
        }
      }
      /**
       * <code>optional .MultiSensorDataInt multiTemp = 36;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          MultiSensorDataInt, MultiSensorDataInt.Builder, MultiSensorDataIntOrBuilder>
          getMultiTempFieldBuilder() {
        if (multiTempBuilder_ == null) {
          multiTempBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              MultiSensorDataInt, MultiSensorDataInt.Builder, MultiSensorDataIntOrBuilder>(
                  multiTemp_,
                  getParentForChildren(),
                  isClean());
          multiTemp_ = null;
        }
        return multiTempBuilder_;
      }

      // optional .SensorData waterPressure = 37;
      private MsgNode1V1M5.SensorData waterPressure_ = MsgNode1V1M5.SensorData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder> waterPressureBuilder_;
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public boolean hasWaterPressure() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public MsgNode1V1M5.SensorData getWaterPressure() {
        if (waterPressureBuilder_ == null) {
          return waterPressure_;
        } else {
          return waterPressureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public Builder setWaterPressure(MsgNode1V1M5.SensorData value) {
        if (waterPressureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          waterPressure_ = value;
          onChanged();
        } else {
          waterPressureBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public Builder setWaterPressure(
          MsgNode1V1M5.SensorData.Builder builderForValue) {
        if (waterPressureBuilder_ == null) {
          waterPressure_ = builderForValue.build();
          onChanged();
        } else {
          waterPressureBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public Builder mergeWaterPressure(MsgNode1V1M5.SensorData value) {
        if (waterPressureBuilder_ == null) {
          if (((bitField1_ & 0x00000010) == 0x00000010) &&
              waterPressure_ != MsgNode1V1M5.SensorData.getDefaultInstance()) {
            waterPressure_ =
              MsgNode1V1M5.SensorData.newBuilder(waterPressure_).mergeFrom(value).buildPartial();
          } else {
            waterPressure_ = value;
          }
          onChanged();
        } else {
          waterPressureBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public Builder clearWaterPressure() {
        if (waterPressureBuilder_ == null) {
          waterPressure_ = MsgNode1V1M5.SensorData.getDefaultInstance();
          onChanged();
        } else {
          waterPressureBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public MsgNode1V1M5.SensorData.Builder getWaterPressureBuilder() {
        bitField1_ |= 0x00000010;
        onChanged();
        return getWaterPressureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      public MsgNode1V1M5.SensorDataOrBuilder getWaterPressureOrBuilder() {
        if (waterPressureBuilder_ != null) {
          return waterPressureBuilder_.getMessageOrBuilder();
        } else {
          return waterPressure_;
        }
      }
      /**
       * <code>optional .SensorData waterPressure = 37;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SensorData, SensorData.Builder, SensorDataOrBuilder>
          getWaterPressureFieldBuilder() {
        if (waterPressureBuilder_ == null) {
          waterPressureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SensorData, SensorData.Builder, SensorDataOrBuilder>(
                  waterPressure_,
                  getParentForChildren(),
                  isClean());
          waterPressure_ = null;
        }
        return waterPressureBuilder_;
      }

      // optional .iBeacon ibeacon = 38;
      private MsgNode1V1M5.iBeacon ibeacon_ = MsgNode1V1M5.iBeacon.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          iBeacon, iBeacon.Builder, iBeaconOrBuilder> ibeaconBuilder_;
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public boolean hasIbeacon() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public MsgNode1V1M5.iBeacon getIbeacon() {
        if (ibeaconBuilder_ == null) {
          return ibeacon_;
        } else {
          return ibeaconBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public Builder setIbeacon(MsgNode1V1M5.iBeacon value) {
        if (ibeaconBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ibeacon_ = value;
          onChanged();
        } else {
          ibeaconBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public Builder setIbeacon(
          MsgNode1V1M5.iBeacon.Builder builderForValue) {
        if (ibeaconBuilder_ == null) {
          ibeacon_ = builderForValue.build();
          onChanged();
        } else {
          ibeaconBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public Builder mergeIbeacon(MsgNode1V1M5.iBeacon value) {
        if (ibeaconBuilder_ == null) {
          if (((bitField1_ & 0x00000020) == 0x00000020) &&
              ibeacon_ != MsgNode1V1M5.iBeacon.getDefaultInstance()) {
            ibeacon_ =
              MsgNode1V1M5.iBeacon.newBuilder(ibeacon_).mergeFrom(value).buildPartial();
          } else {
            ibeacon_ = value;
          }
          onChanged();
        } else {
          ibeaconBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public Builder clearIbeacon() {
        if (ibeaconBuilder_ == null) {
          ibeacon_ = MsgNode1V1M5.iBeacon.getDefaultInstance();
          onChanged();
        } else {
          ibeaconBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public MsgNode1V1M5.iBeacon.Builder getIbeaconBuilder() {
        bitField1_ |= 0x00000020;
        onChanged();
        return getIbeaconFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      public MsgNode1V1M5.iBeaconOrBuilder getIbeaconOrBuilder() {
        if (ibeaconBuilder_ != null) {
          return ibeaconBuilder_.getMessageOrBuilder();
        } else {
          return ibeacon_;
        }
      }
      /**
       * <code>optional .iBeacon ibeacon = 38;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          iBeacon, iBeacon.Builder, iBeaconOrBuilder>
          getIbeaconFieldBuilder() {
        if (ibeaconBuilder_ == null) {
          ibeaconBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              iBeacon, iBeacon.Builder, iBeaconOrBuilder>(
                  ibeacon_,
                  getParentForChildren(),
                  isClean());
          ibeacon_ = null;
        }
        return ibeaconBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MsgNode)
    }

    static {
      defaultInstance = new MsgNode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MsgNode)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LoraParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LoraParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BleParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BleParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorDataInt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorDataInt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorDataFloat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorDataFloat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MultiSensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MultiSensorData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MultiSensorDataInt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MultiSensorDataInt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GpsData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GpsData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AxisData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AxisData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_iBeacon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_iBeacon_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AppParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AppParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MsgNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MsgNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024MsgNode_1v1_m8.proto\"\320\002\n\tLoraParam\022\016\n\006" +
      "devEui\030\001 \001(\014\022\016\n\006appEui\030\002 \001(\014\022\016\n\006appKey\030\003" +
      " \001(\014\022\017\n\007appSkey\030\004 \001(\014\022\017\n\007nwkSkey\030\005 \001(\014\022\017" +
      "\n\007devAddr\030\006 \001(\r\022\020\n\010datarate\030\007 \001(\r\022\017\n\007txP" +
      "ower\030\010 \001(\021\022\013\n\003adr\030\t \001(\r\022\036\n\nactivition\030\n " +
      "\001(\0162\n.Activtion\022\035\n\tclassType\030\013 \001(\0162\n.Cla" +
      "ssType\022\r\n\005delay\030\014 \001(\r\022\023\n\013channelMask\030\r \003" +
      "(\r\022\017\n\007maxEIRP\030\016 \001(\r\022\021\n\tsglStatus\030\017 \001(\r\022\024" +
      "\n\014sglFrequency\030\020 \001(\r\022\023\n\013sglDatarate\030\021 \001(" +
      "\r\"h\n\010BleParam\022\023\n\013bleInterval\030\001 \001(\002\022\016\n\006bl",
      "eTxp\030\002 \001(\021\022\021\n\tbleOnTime\030\003 \001(\r\022\022\n\nbleOffT" +
      "ime\030\004 \001(\r\022\020\n\010bleOnOff\030\005 \001(\r\"\256\001\n\nSensorDa" +
      "ta\022\014\n\004data\030\001 \001(\002\022\021\n\talarmHigh\030\002 \001(\002\022\020\n\010a" +
      "larmLow\030\003 \001(\002\022\023\n\013calibration\030\004 \001(\r\022\033\n\005er" +
      "ror\030\005 \001(\0162\014.SensorError\022\016\n\006status\030\006 \001(\r\022" +
      "\025\n\ralarmStepHigh\030\007 \001(\002\022\024\n\014alarmStepLow\030\010" +
      " \001(\002\"\314\001\n\rSensorDataInt\022\031\n\004type\030\001 \001(\0162\013.S" +
      "ensorType\022\014\n\004data\030\002 \001(\021\022\021\n\talarmHigh\030\003 \001" +
      "(\021\022\020\n\010alarmLow\030\004 \001(\021\022\023\n\013calibration\030\005 \001(" +
      "\021\022\033\n\005error\030\006 \001(\0162\014.SensorError\022\016\n\006status",
      "\030\007 \001(\r\022\025\n\ralarmStepHigh\030\010 \001(\021\022\024\n\014alarmSt" +
      "epLow\030\t \001(\021\"\316\001\n\017SensorDataFloat\022\031\n\004type\030" +
      "\001 \001(\0162\013.SensorType\022\014\n\004data\030\002 \001(\002\022\021\n\talar" +
      "mHigh\030\003 \001(\002\022\020\n\010alarmLow\030\004 \001(\002\022\023\n\013calibra" +
      "tion\030\005 \001(\021\022\033\n\005error\030\006 \001(\0162\014.SensorError\022" +
      "\016\n\006status\030\007 \001(\r\022\025\n\ralarmStepHigh\030\010 \001(\002\022\024" +
      "\n\014alarmStepLow\030\t \001(\002\"\263\001\n\017MultiSensorData" +
      "\022\014\n\004data\030\001 \003(\002\022\021\n\talarmHigh\030\002 \001(\002\022\020\n\010ala" +
      "rmLow\030\003 \001(\002\022\023\n\013calibration\030\004 \001(\r\022\033\n\005erro" +
      "r\030\005 \001(\0162\014.SensorError\022\016\n\006status\030\006 \001(\r\022\025\n",
      "\ralarmStepHigh\030\007 \001(\002\022\024\n\014alarmStepLow\030\010 \001" +
      "(\002\"\266\001\n\022MultiSensorDataInt\022\014\n\004data\030\001 \003(\021\022" +
      "\021\n\talarmHigh\030\002 \001(\021\022\020\n\010alarmLow\030\003 \001(\021\022\023\n\013" +
      "calibration\030\004 \001(\r\022\033\n\005error\030\005 \001(\0162\014.Senso" +
      "rError\022\016\n\006status\030\006 \001(\r\022\025\n\ralarmStepHigh\030" +
      "\007 \001(\021\022\024\n\014alarmStepLow\030\010 \001(\021\"@\n\007GpsData\022\020" +
      "\n\010latitude\030\001 \001(\001\022\021\n\tlongitude\030\002 \001(\001\022\020\n\010a" +
      "ltitude\030\003 \001(\001\"+\n\010AxisData\022\t\n\001x\030\001 \001(\002\022\t\n\001" +
      "y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"2\n\007iBeacon\022\014\n\004addr\030\001 " +
      "\001(\014\022\013\n\003umm\030\002 \001(\014\022\014\n\004rssi\030\003 \001(\021\"\331\002\n\010AppPa",
      "ram\022\024\n\003cmd\030\001 \001(\0162\007.AppCmd\022\026\n\016uploadInter" +
      "val\030\002 \001(\r\022\020\n\010syncTime\030\003 \001(\r\022\035\n\tnodeState" +
      "\030\004 \001(\0162\n.NodeState\022\035\n\tnodeAlarm\030\005 \001(\0162\n." +
      "NodeAlarm\022\024\n\014nodeAlarmSet\030\006 \001(\r\022\017\n\007confi" +
      "rm\030\007 \001(\r\022\035\n\tsmokeCtrl\030\010 \001(\0162\n.SmokeCtrl\022" +
      "\024\n\014uploadRepeat\030\t \001(\r\022\033\n\023alarmUploadInte" +
      "rval\030\n \001(\r\022\025\n\ralarmUploadNb\030\013 \001(\r\022!\n\013tra" +
      "ckerCtrl\030\014 \001(\0162\014.TrackerCtrl\022\034\n\024trackerE" +
      "mergencyTime\030\r \001(\r\"\223\010\n\007MsgNode\022\n\n\002id\030\001 \001" +
      "(\r\022\013\n\003cmd\030\002 \001(\r\022\016\n\006cmdRet\030\003 \001(\r\022\035\n\tloraP",
      "aram\030\004 \001(\0132\n.LoraParam\022\033\n\010bleParam\030\005 \001(\013" +
      "2\t.BleParam\022\033\n\010appParam\030\006 \001(\0132\t.AppParam" +
      "\022\017\n\007battery\030\007 \001(\021\022\025\n\003gps\030\010 \001(\0132\010.GpsData" +
      "\022\037\n\014acceleration\030\t \001(\0132\t.AxisData\022\034\n\tmag" +
      "netism\030\n \001(\0132\t.AxisData\022\034\n\tgyroscope\030\013 \001" +
      "(\0132\t.AxisData\022 \n\013temperature\030\014 \001(\0132\013.Sen" +
      "sorData\022\035\n\010humidity\030\r \001(\0132\013.SensorData\022\032" +
      "\n\005light\030\016 \001(\0132\013.SensorData\022\031\n\004leak\030\017 \001(\013" +
      "2\013.SensorData\022\027\n\002co\030\020 \001(\0132\013.SensorData\022\030" +
      "\n\003co2\030\021 \001(\0132\013.SensorData\022\030\n\003so2\030\022 \001(\0132\013.",
      "SensorData\022\030\n\003no2\030\023 \001(\0132\013.SensorData\022\030\n\003" +
      "ch4\030\024 \001(\0132\013.SensorData\022\031\n\004ch2o\030\025 \001(\0132\013.S" +
      "ensorData\022\030\n\003lpg\030\026 \001(\0132\013.SensorData\022\027\n\002o" +
      "3\030\027 \001(\0132\013.SensorData\022\030\n\003pm1\030\030 \001(\0132\013.Sens" +
      "orData\022\032\n\005pm2_5\030\031 \001(\0132\013.SensorData\022\031\n\004pm" +
      "10\030\032 \001(\0132\013.SensorData\022\032\n\005angle\030\033 \001(\0132\013.S" +
      "ensorData\022\032\n\005cover\030\034 \001(\0132\013.SensorData\022\032\n" +
      "\005level\030\035 \001(\0132\013.SensorData\022\032\n\005smoke\030\036 \001(\013" +
      "2\013.SensorData\022\032\n\005pitch\030\037 \001(\0132\013.SensorDat" +
      "a\022\031\n\004roll\030  \001(\0132\013.SensorData\022\030\n\003yaw\030! \001(",
      "\0132\013.SensorData\022\035\n\005flame\030\" \001(\0132\016.SensorDa" +
      "taInt\022\"\n\rartificialGas\030# \001(\0132\013.SensorDat" +
      "a\022&\n\tmultiTemp\030$ \001(\0132\023.MultiSensorDataIn" +
      "t\022\"\n\rwaterPressure\030% \001(\0132\013.SensorData\022\031\n" +
      "\007ibeacon\030& \001(\0132\010.iBeacon*\035\n\tActivtion\022\007\n" +
      "\003ABP\020\000\022\007\n\003OTA\020\001*2\n\tClassType\022\013\n\007CLASS_A\020" +
      "\000\022\013\n\007CLASS_B\020\001\022\013\n\007CLASS_C\020\002*\334\001\n\013SensorEr" +
      "ror\022\023\n\017SENSOR_ERR_NONE\020\000\022\026\n\022SENSOR_ERR_N" +
      "O_DATA\020\001\022\022\n\016SENSOR_ERR_CRC\020\002\022\023\n\017SENSOR_E" +
      "RR_DATA\020\003\022\024\n\020SENSOR_ERR_FAULT\020\004\022\024\n\020SENSO",
      "R_ERR_ALARM\020\005\022\031\n\025SENSOR_ERR_ALARM_HIGH\020\006" +
      "\022\030\n\024SENSOR_ERR_ALARM_LOW\020\007\022\026\n\022SENSOR_ERR" +
      "_UNKNOWN\020\177*\222\003\n\nSensorType\022\024\n\020SENSOR_TYPE" +
      "_TEMP\020\000\022\024\n\020SENSOR_TYPE_HUMI\020\001\022\025\n\021SENSOR_" +
      "TYPE_LIGHT\020\002\022\023\n\017SENSOR_TYPE_GPS\020\003\022\025\n\021SEN" +
      "SOR_TYPE_ANGLE\020\004\022\025\n\021SENSOR_TYPE_PM2_5\020\005\022" +
      "\024\n\020SENSOR_TYPE_PM10\020\006\022\024\n\020SENSOR_TYPE_LEA" +
      "K\020\007\022\022\n\016SENSOR_TYPE_CO\020\010\022\023\n\017SENSOR_TYPE_C" +
      "O2\020\t\022\023\n\017SENSOR_TYPE_NO2\020\n\022\023\n\017SENSOR_TYPE" +
      "_CH4\020\013\022\023\n\017SENSOR_TYPE_LPG\020\014\022\025\n\021SENSOR_TY",
      "PE_FLAME\020\r\022\036\n\032SENSOR_TYPE_ARTIFICIAL_GAS" +
      "\020\016\022\032\n\026SENSOR_TYPE_WATER_GAGE\020\017\022\027\n\023SENSOR" +
      "_TYPE_TRACKER\020\020*e\n\014SensorStatus\022\027\n\023SENSO" +
      "RO_STATUS_NONE\020\000\022\"\n\036SENSORO_STATUS_SELF_" +
      "INSPECTION\020\001\022\030\n\024SENSORO_STATUS_ALARM\020\002*U" +
      "\n\006AppCmd\022\020\n\014APP_CMD_NONE\020\000\022\021\n\rAPP_CMD_RE" +
      "SET\020\001\022\025\n\021APP_CMD_FAC_RESET\020\002\022\017\n\013APP_CMD_" +
      "DFU\020\003*O\n\tNodeState\022\026\n\022NODE_STATE_UNKNOWN" +
      "\020\000\022\025\n\021NODE_STATE_STATIC\020\001\022\023\n\017NODE_STATE_" +
      "MOVE\020\002*\251\001\n\tNodeAlarm\022\023\n\017NODE_ALARM_NONE\020",
      "\000\022\025\n\021NODE_ALARM_STATIC\020\001\022\023\n\017NODE_ALARM_M" +
      "OVE\020\002\022\030\n\024NODE_ALARM_COLLISION\020\003\022\023\n\017NODE_" +
      "ALARM_ROLL\020\004\022\027\n\023NODE_ALARM_INVERTED\020\005\022\023\n" +
      "\017NODE_ALARM_FALL\020\006*i\n\tSmokeCtrl\022\023\n\017SMOKE" +
      "_CTRL_NONE\020\000\022\021\n\rSMOKE_ERASURE\020\001\022\031\n\025SMOKE" +
      "_INSPECTION_TEST\020\002\022\031\n\025SMOKE_INSPECTION_O" +
      "VER\020\003*\255\001\n\013TrackerCtrl\022\020\n\014TRACKER_Ctrl\020\000\022" +
      "\020\n\014TRACKER_BOOT\020\001\022\024\n\020TRACKER_SHUTDOWN\020\002\022" +
      "\026\n\022TRACKER_CALL_START\020\003\022\024\n\020TRACKER_CALL_" +
      "END\020\004\022\033\n\027TRACKER_EMERGENCE_START\020\005\022\031\n\025TR",
      "ACKER_EMERGENCE_END\020\006"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_LoraParam_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_LoraParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LoraParam_descriptor,
              new String[] { "DevEui", "AppEui", "AppKey", "AppSkey", "NwkSkey", "DevAddr", "Datarate", "TxPower", "Adr", "Activition", "ClassType", "Delay", "ChannelMask", "MaxEIRP", "SglStatus", "SglFrequency", "SglDatarate", });
          internal_static_BleParam_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_BleParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BleParam_descriptor,
              new String[] { "BleInterval", "BleTxp", "BleOnTime", "BleOffTime", "BleOnOff", });
          internal_static_SensorData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_SensorData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SensorData_descriptor,
              new String[] { "Data", "AlarmHigh", "AlarmLow", "Calibration", "Error", "Status", "AlarmStepHigh", "AlarmStepLow", });
          internal_static_SensorDataInt_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_SensorDataInt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SensorDataInt_descriptor,
              new String[] { "Type", "Data", "AlarmHigh", "AlarmLow", "Calibration", "Error", "Status", "AlarmStepHigh", "AlarmStepLow", });
          internal_static_SensorDataFloat_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_SensorDataFloat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SensorDataFloat_descriptor,
              new String[] { "Type", "Data", "AlarmHigh", "AlarmLow", "Calibration", "Error", "Status", "AlarmStepHigh", "AlarmStepLow", });
          internal_static_MultiSensorData_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_MultiSensorData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MultiSensorData_descriptor,
              new String[] { "Data", "AlarmHigh", "AlarmLow", "Calibration", "Error", "Status", "AlarmStepHigh", "AlarmStepLow", });
          internal_static_MultiSensorDataInt_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_MultiSensorDataInt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MultiSensorDataInt_descriptor,
              new String[] { "Data", "AlarmHigh", "AlarmLow", "Calibration", "Error", "Status", "AlarmStepHigh", "AlarmStepLow", });
          internal_static_GpsData_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_GpsData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GpsData_descriptor,
              new String[] { "Latitude", "Longitude", "Altitude", });
          internal_static_AxisData_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_AxisData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AxisData_descriptor,
              new String[] { "X", "Y", "Z", });
          internal_static_iBeacon_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_iBeacon_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_iBeacon_descriptor,
              new String[] { "Addr", "Umm", "Rssi", });
          internal_static_AppParam_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_AppParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AppParam_descriptor,
              new String[] { "Cmd", "UploadInterval", "SyncTime", "NodeState", "NodeAlarm", "NodeAlarmSet", "Confirm", "SmokeCtrl", "UploadRepeat", "AlarmUploadInterval", "AlarmUploadNb", "TrackerCtrl", "TrackerEmergencyTime", });
          internal_static_MsgNode_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_MsgNode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MsgNode_descriptor,
              new String[] { "Id", "Cmd", "CmdRet", "LoraParam", "BleParam", "AppParam", "Battery", "Gps", "Acceleration", "Magnetism", "Gyroscope", "Temperature", "Humidity", "Light", "Leak", "Co", "Co2", "So2", "No2", "Ch4", "Ch2O", "Lpg", "O3", "Pm1", "Pm25", "Pm10", "Angle", "Cover", "Level", "Smoke", "Pitch", "Roll", "Yaw", "Flame", "ArtificialGas", "MultiTemp", "WaterPressure", "Ibeacon", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
