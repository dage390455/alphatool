apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    def verName = "1.4.4"

    def verCode = 42
    def buildCode = 1
    def connector = '_beta'
    def versionPropsFile = file('version.properties')


    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    signingConfigs {
        release {
            keyAlias 'sensoro'
            keyPassword 'sensoro'
            storeFile file('/users/Sensoro/Work/AppKey/sensoro.keystore')
            storePassword 'sensoro'
        }
        debug {
            keyAlias 'sensoro'
            keyPassword 'sensoro'
            storeFile file('/users/Sensoro/Work/AppKey/sensoro.keystore')
            storePassword 'sensoro'
        }
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.0'
//    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.sensoro.loratool"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode verCode
        versionName verName + connector + buildCode
        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }
    }
    android {
        lintOptions {
            abortOnError false
            disable 'InvalidPackage'
        }

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
        }
    }

    // 多渠道打包
    productFlavors {
        FIR {}
        Googleplay {}
//        Mocha {}
//        Dev360 {}
//        QQ {}
//        XiaoMi {}

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [AVOS_CHANNEL_VALUE: name]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        buildCode = versionProps['BUILD_CODE'].toInteger()
        verCode = versionProps['VERSION_CODE'].toInteger()

        def runTasks = gradle.startParameter.taskNames


        for (int i = 0; i < runTasks.size(); i++) {
            println runTasks[i]
        }

        if (':app:assembleBaiDuDebug' in runTasks) {
            buildCode++
        }

        if ('build' in runTasks) {
            verCode++
            buildCode++

            android.applicationVariants.all { variant ->
                def file = variant.outputs[0].outputFile
                variant.outputs[0].outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
            }
        }

        versionProps['BUILD_CODE'] = buildCode.toString()
        versionProps['VERSION_CODE'] = verCode.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        defaultConfig {
            versionCode = verCode
            versionName verName + connector + buildCode
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    compile project(':libs:pulltorefresh')
    compile project(':libstationcommunication')
    compile project(':liblorasettingserver')
    compile files('libs/zxing_core-3.1.0.jar')
    compile files('libs/sensoro-sensor-kit.jar')
    compile 'com.google.protobuf:protobuf-java:2.5.0'
    //    compile 'com.facebook.stetho:stetho:1.3.1'//If you want to add a network helper
    //    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'no.nordicsemi.android:dfu:1.0.0'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:design:24.0.0'
    compile 'net.simonvt.menudrawer:menudrawer:3.0.6'
    compile 'com.jakewharton:butterknife:8.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.github.hotchemi:permissionsdispatcher:2.1.2'
    compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha9'
    testCompile 'junit:junit:4.12'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'
    apt 'com.github.hotchemi:permissionsdispatcher-processor:2.1.2'
}
